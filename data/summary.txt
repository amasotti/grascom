lambda_value
0.11
--------------------------------------------------------------------------------

default_settings
######################### DEFAULT SETTINGS#########################
--------------------------------------------------------------------------------

grammar
Harmonic Grammar with 10 fillers and 5 roles
--------------------------------------------------------------------------------

R
tensor([[ 0.9002, -0.0538,  0.3926,  0.1191, -0.1356],
        [ 0.3555,  0.5622, -0.4737, -0.3424,  0.4647],
        [-0.2267,  0.3059,  0.7724, -0.1377,  0.4893],
        [-0.0977,  0.7372,  0.0251,  0.5397, -0.3939],
        [ 0.0482, -0.2099, -0.1554,  0.7472,  0.6092]])
--------------------------------------------------------------------------------

F
tensor([[-7.0986e-02, -2.6429e-01,  4.6262e-01,  1.8267e-01, -2.7734e-02,
          2.3468e-01,  3.2670e-01,  4.3932e-01,  3.1227e-01, -4.7397e-01],
        [ 3.6338e-01,  3.6867e-01, -4.0908e-02,  6.7202e-02, -5.0889e-01,
          4.5241e-01,  1.7974e-01,  3.2570e-01, -1.0650e-01,  3.3538e-01],
        [ 7.5341e-02, -3.2721e-01, -2.5580e-02,  5.3630e-01, -1.6480e-01,
          2.1286e-02, -2.9072e-01, -1.6779e-01,  5.5755e-01,  3.8451e-01],
        [ 4.4390e-01, -2.3043e-01,  2.2972e-01,  1.2317e-01,  5.3283e-01,
          4.7173e-01,  2.1955e-02, -2.6956e-01, -3.0335e-01,  1.0151e-01],
        [-3.7975e-01,  3.1492e-01, -6.0176e-02,  6.8578e-01,  2.7398e-01,
         -5.3716e-03, -1.1602e-01,  2.8084e-01, -3.3859e-01,  2.5421e-02],
        [ 4.0148e-01,  2.0372e-01,  5.2408e-01,  1.6365e-01,  4.3967e-03,
         -6.6063e-01,  1.7713e-01, -4.3401e-04, -5.7710e-02,  1.5718e-01],
        [-2.8887e-01, -3.9345e-01, -2.8399e-02, -1.8428e-01,  1.8854e-01,
         -9.5572e-02,  4.1174e-01,  3.2241e-01, -8.2126e-02,  6.3410e-01],
        [-3.6404e-01,  4.8209e-01,  2.4070e-01, -3.2812e-02,  1.3351e-01,
          2.2174e-01,  3.7738e-01, -4.6734e-01,  3.4747e-01,  1.6584e-01],
        [-1.7443e-02,  2.4908e-01,  3.2161e-01, -3.5380e-01,  3.0546e-01,
          1.0286e-01, -5.8793e-01,  3.8814e-01,  2.6151e-01,  2.0114e-01],
        [ 3.7219e-01,  2.1011e-01, -5.3891e-01,  4.5242e-02,  4.5545e-01,
         -1.0921e-01,  2.7116e-01,  2.1959e-01,  4.1764e-01, -9.6586e-02]])
--------------------------------------------------------------------------------

nSym
50
--------------------------------------------------------------------------------

filler2index
{'bh': 0, 'b': 1, 'u': 2, 'd': 3, 'dh': 4, 'p': 5, '-': 6, 'c': 7, 'a': 8, '#': 9}
--------------------------------------------------------------------------------

index2filler
{0: 'bh', 1: 'b', 2: 'u', 3: 'd', 4: 'dh', 5: 'p', 6: '-', 7: 'c', 8: 'a', 9: '#'}
--------------------------------------------------------------------------------

role2index
{'s1': 0, 's2': 1, 's3': 2, 's4': 3, 's5': 4}
--------------------------------------------------------------------------------

index2role
{0: 's1', 1: 's2', 2: 's3', 3: 's4', 4: 's5'}
--------------------------------------------------------------------------------

bind2index
{'bh/s1': 0, 'b/s1': 1, 'u/s1': 2, 'd/s1': 3, 'dh/s1': 4, 'p/s1': 5, '-/s1': 6, 'c/s1': 7, 'a/s1': 8, '#/s1': 9, 'bh/s2': 10, 'b/s2': 11, 'u/s2': 12, 'd/s2': 13, 'dh/s2': 14, 'p/s2': 15, '-/s2': 16, 'c/s2': 17, 'a/s2': 18, '#/s2': 19, 'bh/s3': 20, 'b/s3': 21, 'u/s3': 22, 'd/s3': 23, 'dh/s3': 24, 'p/s3': 25, '-/s3': 26, 'c/s3': 27, 'a/s3': 28, '#/s3': 29, 'bh/s4': 30, 'b/s4': 31, 'u/s4': 32, 'd/s4': 33, 'dh/s4': 34, 'p/s4': 35, '-/s4': 36, 'c/s4': 37, 'a/s4': 38, '#/s4': 39, 'bh/s5': 40, 'b/s5': 41, 'u/s5': 42, 'd/s5': 43, 'dh/s5': 44, 'p/s5': 45, '-/s5': 46, 'c/s5': 47, 'a/s5': 48, '#/s5': 49}
--------------------------------------------------------------------------------

index2bind
{0: 'bh/s1', 1: 'b/s1', 2: 'u/s1', 3: 'd/s1', 4: 'dh/s1', 5: 'p/s1', 6: '-/s1', 7: 'c/s1', 8: 'a/s1', 9: '#/s1', 10: 'bh/s2', 11: 'b/s2', 12: 'u/s2', 13: 'd/s2', 14: 'dh/s2', 15: 'p/s2', 16: '-/s2', 17: 'c/s2', 18: 'a/s2', 19: '#/s2', 20: 'bh/s3', 21: 'b/s3', 22: 'u/s3', 23: 'd/s3', 24: 'dh/s3', 25: 'p/s3', 26: '-/s3', 27: 'c/s3', 28: 'a/s3', 29: '#/s3', 30: 'bh/s4', 31: 'b/s4', 32: 'u/s4', 33: 'd/s4', 34: 'dh/s4', 35: 'p/s4', 36: '-/s4', 37: 'c/s4', 38: 'a/s4', 39: '#/s4', 40: 'bh/s5', 41: 'b/s5', 42: 'u/s5', 43: 'd/s5', 44: 'dh/s5', 45: 'p/s5', 46: '-/s5', 47: 'c/s5', 48: 'a/s5', 49: '#/s5'}
--------------------------------------------------------------------------------

settings
{'maxInp': 1, 'epochs': 5, 'timeStep': 0.0001, 'tgtStd': 0.00125, 'TInit': -1, 'TMin': 0, 'TdecayRate': 0.05, 'lambdaInit': 0.11, 'lambdaMin': 0.01, 'lambdaDecayRate': 0.75, 'maxSteps': 60000, 'emaSpeedTol': 0.002, 'emaFactor': 0.05, 'diary': False, 'printInterval': 3000, 'saveFile': 'Simulations/grassman.txt', 'summary_file': 'data/summary.txt', 'initStateMean': tensor([[0.1000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.1000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.1000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.1000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]), 'initStateStdev': 0.025, 'clamped': False}
--------------------------------------------------------------------------------

vars
{'var_names': ['Activation', 'Harmony', 'H0', 'Q', 'q', 'Temp', 'time', 'ema_speed', 'speed'], 'norm_ord': tensor([inf]), 'coord': 'N', 'ema_factor': 0.001, 'ema_tau': 0.14476482730108395, 'T_init': -1, 'T_min': 0.0, 'T_decay_rate': 0.001, 'q_init': 2, 'q_max': 200.0, 'q_rate': 10.0, 'c': 0.5, 'bowl_center': tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64), 'bowl_strength': tensor(6.1004, dtype=torch.float64), 'beta_min_offset': 0.1, 'H0_on': True, 'H1_on': True, 'Hq_on': True, 'max_dt': 0.01, 'min_dt': 0.0005, 'q_policy': None, 'time': 0, 'dt': 0.001, 's_trace': None, 'prev_s': None, 'Harmony_trace': None, 'speed_trace': None, 'ema_trace': None, 'lambda_trace': None, 'time_trace': None, 'TP_trace': None, 'TPnum_trace': None, 'TP_h_trace': None, 'TP_dist_trace': None, 'zeta_bowl': tensor([[0.6854],
        [0.8779],
        [0.3661],
        [0.6855],
        [0.4163],
        [0.5580],
        [0.2959],
        [0.6752],
        [0.5322],
        [0.7620],
        [0.3175],
        [0.4067],
        [0.1696],
        [0.3175],
        [0.1928],
        [0.2585],
        [0.1371],
        [0.3127],
        [0.2465],
        [0.3530],
        [0.6746],
        [0.8640],
        [0.3603],
        [0.6747],
        [0.4097],
        [0.5492],
        [0.2912],
        [0.6645],
        [0.5238],
        [0.7500],
        [0.4543],
        [0.5819],
        [0.2427],
        [0.4544],
        [0.2760],
        [0.3699],
        [0.1962],
        [0.4476],
        [0.3528],
        [0.5052],
        [0.5827],
        [0.7464],
        [0.3112],
        [0.5828],
        [0.3539],
        [0.4744],
        [0.2516],
        [0.5740],
        [0.4525],
        [0.6479]], dtype=torch.float64), 'lambda_rec': tensor(0.1111, dtype=torch.float64), 'lambdaInit': 0.11, 'T_rec': tensor(9.5315e-06, dtype=torch.float64), 'T': 0, 'lambda': 0}
--------------------------------------------------------------------------------

Hc
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0.],
        [0., 0., 2., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 2., 2.]])
--------------------------------------------------------------------------------

Hcc
tensor([[[[ 0.,  0.,  0.,  0.,  0.],
          [-5.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[-5.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        ...,


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]]])
--------------------------------------------------------------------------------

stimuli
tensor([[[0.7000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.8000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]])
--------------------------------------------------------------------------------

extData_path
data/inp_pandas.csv
--------------------------------------------------------------------------------

TP
tensor([[-0.0639, -0.2379,  0.4164,  ..., -0.0596, -0.0424,  0.0643],
        [ 0.3271,  0.3319, -0.0368,  ..., -0.0442,  0.0144, -0.0455],
        [ 0.0678, -0.2946, -0.0230,  ...,  0.0228, -0.0756, -0.0522],
        ...,
        [-0.0175,  0.0232,  0.0116,  ..., -0.2847,  0.2117,  0.1010],
        [-0.0008,  0.0120,  0.0155,  ...,  0.2365,  0.1593,  0.1225],
        [ 0.0179,  0.0101, -0.0260,  ...,  0.1338,  0.2544, -0.0588]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

TPinv
tensor([[ -4.9161,   5.9537,   2.7182,  ...,   4.1568,  -2.7481,  -8.0070],
        [  5.9537,  -5.5542,  -3.1678,  ...,  -3.8015,   2.9782,   9.4465],
        [  2.7182,  -3.1678,  -1.2544,  ...,  -2.1345,   2.0297,   4.5770],
        ...,
        [  4.1568,  -3.8015,  -2.1345,  ...,  -3.4069,   2.4905,   5.9694],
        [ -2.7481,   2.9782,   2.0297,  ...,   2.4905,  -2.0253,  -4.4939],
        [ -8.0070,   9.4465,   4.5770,  ...,   5.9694,  -4.4939, -11.8265]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

Gc
tensor([[ 1.0000e+00,  2.7777e+00, -1.7945e-01,  ..., -3.2559e+00,
         -3.6448e+00,  4.6346e+00],
        [ 1.5616e-15, -2.3640e+00,  6.4414e-01,  ...,  4.0901e+00,
          5.4066e+00, -4.7127e+00],
        [ 2.9946e-16, -1.5359e+00,  1.1312e+00,  ...,  2.0328e+00,
          2.7978e+00, -2.6877e+00],
        ...,
        [ 8.9481e-16, -2.3487e+00,  4.6941e-01,  ...,  2.8196e+00,
          3.3972e+00, -3.5952e+00],
        [-9.8266e-16,  1.5527e+00, -1.9050e-01,  ..., -1.7570e+00,
         -2.2802e+00,  2.6979e+00],
        [-2.1649e-15,  4.5242e+00, -3.5683e-01,  ..., -4.8480e+00,
         -6.1388e+00,  7.0522e+00]], dtype=torch.float64)
--------------------------------------------------------------------------------

W
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4542,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6785],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4542,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6785,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

B
tensor([[ 10.7586],
        [ 20.5560],
        [ 11.3920],
        [  5.4800],
        [  0.6496],
        [ 14.6299],
        [ 14.0854],
        [ 14.5036],
        [-12.1793],
        [ -3.0769],
        [  3.2089],
        [ -4.3519],
        [  7.1898],
        [ -3.6864],
        [ -7.9911],
        [  3.8274],
        [  9.8354],
        [  3.6934],
        [  0.0433],
        [ -1.6509],
        [  4.8316],
        [  9.5520],
        [  6.1784],
        [  7.3607],
        [  9.9529],
        [  5.0425],
        [  6.3686],
        [  8.4693],
        [  1.3802],
        [  6.7504],
        [  4.2149],
        [ -5.9229],
        [  5.7597],
        [  0.9887],
        [ -3.8856],
        [  3.9671],
        [  5.9076],
        [  2.6049],
        [  6.2498],
        [ -0.3907],
        [ -0.2793],
        [ -2.4224],
        [  8.1874],
        [  2.9145],
        [  7.2522],
        [ -0.3549],
        [  9.3438],
        [  7.0723],
        [  9.2682],
        [  9.6348]], dtype=torch.float64)
--------------------------------------------------------------------------------

activationC
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

activationC_prev
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

activation
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

activation_prev
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInpC
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInpC_prev
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInp
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInp_prev
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

Wc
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4541,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6786],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4541,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6786,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bc
tensor([[3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [4.0502],
        [5.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [5.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [5.0502]], dtype=torch.float64)
--------------------------------------------------------------------------------

bowl
Bowl object with strength 6.00037441725961 and center tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_bC
tensor([[3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_bS
tensor([[ 10.6929],
        [ 20.9403],
        [ 11.3235],
        [  5.0165],
        [  0.1661],
        [ 14.5674],
        [ 14.0307],
        [ 14.4172],
        [-12.2736],
        [ -3.4555],
        [  3.3850],
        [ -4.8842],
        [  7.1936],
        [ -3.1480],
        [ -7.4129],
        [  3.8706],
        [  9.7716],
        [  3.7638],
        [  0.1159],
        [ -1.1744],
        [  5.0665],
        [ 10.0505],
        [  5.7484],
        [  6.3710],
        [  8.9821],
        [  4.7988],
        [  5.7739],
        [  8.1718],
        [  1.0402],
        [  6.0797],
        [  4.3499],
        [ -5.9968],
        [  5.6423],
        [  0.9293],
        [ -3.9240],
        [  3.9169],
        [  5.7179],
        [  2.5507],
        [  6.1847],
        [ -0.3865],
        [  1.0263],
        [ -3.4800],
        [  7.1764],
        [  2.8238],
        [  7.3749],
        [ -0.7545],
        [  7.6535],
        [  6.6588],
        [  8.7625],
        [ 10.0454]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_WC
tensor([[-6.1004, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [-0.0000, -6.1004, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [-0.0000, -0.0000, -6.1004,  ..., -0.0000, -0.0000, -0.0000],
        ...,
        [-0.0000, -0.0000, -0.0000,  ..., -6.1004, -0.0000, -0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -6.1004, -0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -6.1004]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_WS
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4541,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6785],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4541,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6785,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

state
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inp_s
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inp_c
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inputNames
['b-bh-u-dh-d', 'b-u-dh-d']
--------------------------------------------------------------------------------

nStimuli
2
--------------------------------------------------------------------------------

LV_inhM
tensor([[-0., -2., -2., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -0., -2., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -0., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -0., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -0., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -0., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -0., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -0., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -2., -0., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -2., -2., -0.]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

LV_c
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

LV_s
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

final_TPStates
{'b-bh-u-dh-d/0': 0, 'b-bh-u-dh-d/1': 0, 'b-bh-u-dh-d/2': 0, 'b-bh-u-dh-d/3': 0, 'b-bh-u-dh-d/4': 0, 'b-u-dh-d/0': 0, 'b-u-dh-d/1': 0, 'b-u-dh-d/2': 0, 'b-u-dh-d/3': 0, 'b-u-dh-d/4': 0}
--------------------------------------------------------------------------------

final_TPnum
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

reaction_times
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

divergence
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

bowl
######################### BOWL PARAMETER#########################
--------------------------------------------------------------------------------

Net
GSC Network
--------------------------------------------------------------------------------

center
tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64)
--------------------------------------------------------------------------------

strength
tensor(6.0004, dtype=torch.float64)
--------------------------------------------------------------------------------

lambda_value
0.11
--------------------------------------------------------------------------------

default_settings
######################### DEFAULT SETTINGS#########################
--------------------------------------------------------------------------------

grammar
Harmonic Grammar with 10 fillers and 5 roles
--------------------------------------------------------------------------------

R
tensor([[ 0.9002, -0.0538,  0.3926,  0.1191, -0.1356],
        [ 0.3555,  0.5622, -0.4737, -0.3424,  0.4647],
        [-0.2267,  0.3059,  0.7724, -0.1377,  0.4893],
        [-0.0977,  0.7372,  0.0251,  0.5397, -0.3939],
        [ 0.0482, -0.2099, -0.1554,  0.7472,  0.6092]])
--------------------------------------------------------------------------------

F
tensor([[-7.0986e-02, -2.6429e-01,  4.6262e-01,  1.8267e-01, -2.7734e-02,
          2.3468e-01,  3.2670e-01,  4.3932e-01,  3.1227e-01, -4.7397e-01],
        [ 3.6338e-01,  3.6867e-01, -4.0908e-02,  6.7202e-02, -5.0889e-01,
          4.5241e-01,  1.7974e-01,  3.2570e-01, -1.0650e-01,  3.3538e-01],
        [ 7.5341e-02, -3.2721e-01, -2.5580e-02,  5.3630e-01, -1.6480e-01,
          2.1286e-02, -2.9072e-01, -1.6779e-01,  5.5755e-01,  3.8451e-01],
        [ 4.4390e-01, -2.3043e-01,  2.2972e-01,  1.2317e-01,  5.3283e-01,
          4.7173e-01,  2.1955e-02, -2.6956e-01, -3.0335e-01,  1.0151e-01],
        [-3.7975e-01,  3.1492e-01, -6.0176e-02,  6.8578e-01,  2.7398e-01,
         -5.3716e-03, -1.1602e-01,  2.8084e-01, -3.3859e-01,  2.5421e-02],
        [ 4.0148e-01,  2.0372e-01,  5.2408e-01,  1.6365e-01,  4.3967e-03,
         -6.6063e-01,  1.7713e-01, -4.3401e-04, -5.7710e-02,  1.5718e-01],
        [-2.8887e-01, -3.9345e-01, -2.8399e-02, -1.8428e-01,  1.8854e-01,
         -9.5572e-02,  4.1174e-01,  3.2241e-01, -8.2126e-02,  6.3410e-01],
        [-3.6404e-01,  4.8209e-01,  2.4070e-01, -3.2812e-02,  1.3351e-01,
          2.2174e-01,  3.7738e-01, -4.6734e-01,  3.4747e-01,  1.6584e-01],
        [-1.7443e-02,  2.4908e-01,  3.2161e-01, -3.5380e-01,  3.0546e-01,
          1.0286e-01, -5.8793e-01,  3.8814e-01,  2.6151e-01,  2.0114e-01],
        [ 3.7219e-01,  2.1011e-01, -5.3891e-01,  4.5242e-02,  4.5545e-01,
         -1.0921e-01,  2.7116e-01,  2.1959e-01,  4.1764e-01, -9.6586e-02]])
--------------------------------------------------------------------------------

nSym
50
--------------------------------------------------------------------------------

filler2index
{'bh': 0, 'b': 1, 'u': 2, 'd': 3, 'dh': 4, 'p': 5, '-': 6, 'c': 7, 'a': 8, '#': 9}
--------------------------------------------------------------------------------

index2filler
{0: 'bh', 1: 'b', 2: 'u', 3: 'd', 4: 'dh', 5: 'p', 6: '-', 7: 'c', 8: 'a', 9: '#'}
--------------------------------------------------------------------------------

role2index
{'s1': 0, 's2': 1, 's3': 2, 's4': 3, 's5': 4}
--------------------------------------------------------------------------------

index2role
{0: 's1', 1: 's2', 2: 's3', 3: 's4', 4: 's5'}
--------------------------------------------------------------------------------

bind2index
{'bh/s1': 0, 'b/s1': 1, 'u/s1': 2, 'd/s1': 3, 'dh/s1': 4, 'p/s1': 5, '-/s1': 6, 'c/s1': 7, 'a/s1': 8, '#/s1': 9, 'bh/s2': 10, 'b/s2': 11, 'u/s2': 12, 'd/s2': 13, 'dh/s2': 14, 'p/s2': 15, '-/s2': 16, 'c/s2': 17, 'a/s2': 18, '#/s2': 19, 'bh/s3': 20, 'b/s3': 21, 'u/s3': 22, 'd/s3': 23, 'dh/s3': 24, 'p/s3': 25, '-/s3': 26, 'c/s3': 27, 'a/s3': 28, '#/s3': 29, 'bh/s4': 30, 'b/s4': 31, 'u/s4': 32, 'd/s4': 33, 'dh/s4': 34, 'p/s4': 35, '-/s4': 36, 'c/s4': 37, 'a/s4': 38, '#/s4': 39, 'bh/s5': 40, 'b/s5': 41, 'u/s5': 42, 'd/s5': 43, 'dh/s5': 44, 'p/s5': 45, '-/s5': 46, 'c/s5': 47, 'a/s5': 48, '#/s5': 49}
--------------------------------------------------------------------------------

index2bind
{0: 'bh/s1', 1: 'b/s1', 2: 'u/s1', 3: 'd/s1', 4: 'dh/s1', 5: 'p/s1', 6: '-/s1', 7: 'c/s1', 8: 'a/s1', 9: '#/s1', 10: 'bh/s2', 11: 'b/s2', 12: 'u/s2', 13: 'd/s2', 14: 'dh/s2', 15: 'p/s2', 16: '-/s2', 17: 'c/s2', 18: 'a/s2', 19: '#/s2', 20: 'bh/s3', 21: 'b/s3', 22: 'u/s3', 23: 'd/s3', 24: 'dh/s3', 25: 'p/s3', 26: '-/s3', 27: 'c/s3', 28: 'a/s3', 29: '#/s3', 30: 'bh/s4', 31: 'b/s4', 32: 'u/s4', 33: 'd/s4', 34: 'dh/s4', 35: 'p/s4', 36: '-/s4', 37: 'c/s4', 38: 'a/s4', 39: '#/s4', 40: 'bh/s5', 41: 'b/s5', 42: 'u/s5', 43: 'd/s5', 44: 'dh/s5', 45: 'p/s5', 46: '-/s5', 47: 'c/s5', 48: 'a/s5', 49: '#/s5'}
--------------------------------------------------------------------------------

settings
{'maxInp': 1, 'epochs': 5, 'timeStep': 0.0001, 'tgtStd': 0.00125, 'TInit': -1, 'TMin': 0, 'TdecayRate': 0.05, 'lambdaInit': 0.11, 'lambdaMin': 0.01, 'lambdaDecayRate': 0.75, 'maxSteps': 60000, 'emaSpeedTol': 0.002, 'emaFactor': 0.05, 'diary': False, 'printInterval': 3000, 'saveFile': 'Simulations/grassman.txt', 'summary_file': 'data/summary.txt', 'initStateMean': tensor([[0.1000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.1000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.1000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.1000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]), 'initStateStdev': 0.025, 'clamped': False}
--------------------------------------------------------------------------------

vars
{'var_names': ['Activation', 'Harmony', 'H0', 'Q', 'q', 'Temp', 'time', 'ema_speed', 'speed'], 'norm_ord': tensor([inf]), 'coord': 'N', 'ema_factor': 0.001, 'ema_tau': 0.14476482730108395, 'T_init': -1, 'T_min': 0.0, 'T_decay_rate': 0.001, 'q_init': 2, 'q_max': 200.0, 'q_rate': 10.0, 'c': 0.5, 'bowl_center': tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64), 'bowl_strength': tensor(6.1004, dtype=torch.float64), 'beta_min_offset': 0.1, 'H0_on': True, 'H1_on': True, 'Hq_on': True, 'max_dt': 0.01, 'min_dt': 0.0005, 'q_policy': None, 'time': 0, 'dt': 0.001, 's_trace': None, 'prev_s': None, 'Harmony_trace': None, 'speed_trace': None, 'ema_trace': None, 'lambda_trace': None, 'time_trace': None, 'TP_trace': None, 'TPnum_trace': None, 'TP_h_trace': None, 'TP_dist_trace': None, 'zeta_bowl': tensor([[0.6854],
        [0.8779],
        [0.3661],
        [0.6855],
        [0.4163],
        [0.5580],
        [0.2959],
        [0.6752],
        [0.5322],
        [0.7620],
        [0.3175],
        [0.4067],
        [0.1696],
        [0.3175],
        [0.1928],
        [0.2585],
        [0.1371],
        [0.3127],
        [0.2465],
        [0.3530],
        [0.6746],
        [0.8640],
        [0.3603],
        [0.6747],
        [0.4097],
        [0.5492],
        [0.2912],
        [0.6645],
        [0.5238],
        [0.7500],
        [0.4543],
        [0.5819],
        [0.2427],
        [0.4544],
        [0.2760],
        [0.3699],
        [0.1962],
        [0.4476],
        [0.3528],
        [0.5052],
        [0.5827],
        [0.7464],
        [0.3112],
        [0.5828],
        [0.3539],
        [0.4744],
        [0.2516],
        [0.5740],
        [0.4525],
        [0.6479]], dtype=torch.float64), 'lambda_rec': tensor(0.1111, dtype=torch.float64), 'lambdaInit': 0.11, 'T_rec': tensor(9.5315e-06, dtype=torch.float64), 'T': 0, 'lambda': 0}
--------------------------------------------------------------------------------

Hc
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0.],
        [0., 0., 2., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 2., 2.]])
--------------------------------------------------------------------------------

Hcc
tensor([[[[ 0.,  0.,  0.,  0.,  0.],
          [-5.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[-5.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        ...,


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]]])
--------------------------------------------------------------------------------

stimuli
tensor([[[0.7000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.8000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]])
--------------------------------------------------------------------------------

extData_path
data/inp_pandas.csv
--------------------------------------------------------------------------------

TP
tensor([[-0.0639, -0.2379,  0.4164,  ..., -0.0596, -0.0424,  0.0643],
        [ 0.3271,  0.3319, -0.0368,  ..., -0.0442,  0.0144, -0.0455],
        [ 0.0678, -0.2946, -0.0230,  ...,  0.0228, -0.0756, -0.0522],
        ...,
        [-0.0175,  0.0232,  0.0116,  ..., -0.2847,  0.2117,  0.1010],
        [-0.0008,  0.0120,  0.0155,  ...,  0.2365,  0.1593,  0.1225],
        [ 0.0179,  0.0101, -0.0260,  ...,  0.1338,  0.2544, -0.0588]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

TPinv
tensor([[ -4.9161,   5.9537,   2.7182,  ...,   4.1568,  -2.7481,  -8.0070],
        [  5.9537,  -5.5542,  -3.1678,  ...,  -3.8015,   2.9782,   9.4465],
        [  2.7182,  -3.1678,  -1.2544,  ...,  -2.1345,   2.0297,   4.5770],
        ...,
        [  4.1568,  -3.8015,  -2.1345,  ...,  -3.4069,   2.4905,   5.9694],
        [ -2.7481,   2.9782,   2.0297,  ...,   2.4905,  -2.0253,  -4.4939],
        [ -8.0070,   9.4465,   4.5770,  ...,   5.9694,  -4.4939, -11.8265]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

Gc
tensor([[ 1.0000e+00,  2.7777e+00, -1.7945e-01,  ..., -3.2559e+00,
         -3.6448e+00,  4.6346e+00],
        [ 1.5616e-15, -2.3640e+00,  6.4414e-01,  ...,  4.0901e+00,
          5.4066e+00, -4.7127e+00],
        [ 2.9946e-16, -1.5359e+00,  1.1312e+00,  ...,  2.0328e+00,
          2.7978e+00, -2.6877e+00],
        ...,
        [ 8.9481e-16, -2.3487e+00,  4.6941e-01,  ...,  2.8196e+00,
          3.3972e+00, -3.5952e+00],
        [-9.8266e-16,  1.5527e+00, -1.9050e-01,  ..., -1.7570e+00,
         -2.2802e+00,  2.6979e+00],
        [-2.1649e-15,  4.5242e+00, -3.5683e-01,  ..., -4.8480e+00,
         -6.1388e+00,  7.0522e+00]], dtype=torch.float64)
--------------------------------------------------------------------------------

W
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4542,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6785],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4542,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6785,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

B
tensor([[ 10.7586],
        [ 20.5560],
        [ 11.3920],
        [  5.4800],
        [  0.6496],
        [ 14.6299],
        [ 14.0854],
        [ 14.5036],
        [-12.1793],
        [ -3.0769],
        [  3.2089],
        [ -4.3519],
        [  7.1898],
        [ -3.6864],
        [ -7.9911],
        [  3.8274],
        [  9.8354],
        [  3.6934],
        [  0.0433],
        [ -1.6509],
        [  4.8316],
        [  9.5520],
        [  6.1784],
        [  7.3607],
        [  9.9529],
        [  5.0425],
        [  6.3686],
        [  8.4693],
        [  1.3802],
        [  6.7504],
        [  4.2149],
        [ -5.9229],
        [  5.7597],
        [  0.9887],
        [ -3.8856],
        [  3.9671],
        [  5.9076],
        [  2.6049],
        [  6.2498],
        [ -0.3907],
        [ -0.2793],
        [ -2.4224],
        [  8.1874],
        [  2.9145],
        [  7.2522],
        [ -0.3549],
        [  9.3438],
        [  7.0723],
        [  9.2682],
        [  9.6348]], dtype=torch.float64)
--------------------------------------------------------------------------------

activationC
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

activationC_prev
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

activation
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

activation_prev
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInpC
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInpC_prev
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInp
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInp_prev
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

Wc
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4541,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6786],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4541,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6786,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bc
tensor([[3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [4.0502],
        [5.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [5.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [5.0502]], dtype=torch.float64)
--------------------------------------------------------------------------------

bowl
Bowl object with strength 6.00037441725961 and center tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_bC
tensor([[3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_bS
tensor([[ 10.6929],
        [ 20.9403],
        [ 11.3235],
        [  5.0165],
        [  0.1661],
        [ 14.5674],
        [ 14.0307],
        [ 14.4172],
        [-12.2736],
        [ -3.4555],
        [  3.3850],
        [ -4.8842],
        [  7.1936],
        [ -3.1480],
        [ -7.4129],
        [  3.8706],
        [  9.7716],
        [  3.7638],
        [  0.1159],
        [ -1.1744],
        [  5.0665],
        [ 10.0505],
        [  5.7484],
        [  6.3710],
        [  8.9821],
        [  4.7988],
        [  5.7739],
        [  8.1718],
        [  1.0402],
        [  6.0797],
        [  4.3499],
        [ -5.9968],
        [  5.6423],
        [  0.9293],
        [ -3.9240],
        [  3.9169],
        [  5.7179],
        [  2.5507],
        [  6.1847],
        [ -0.3865],
        [  1.0263],
        [ -3.4800],
        [  7.1764],
        [  2.8238],
        [  7.3749],
        [ -0.7545],
        [  7.6535],
        [  6.6588],
        [  8.7625],
        [ 10.0454]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_WC
tensor([[-6.1004, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [-0.0000, -6.1004, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [-0.0000, -0.0000, -6.1004,  ..., -0.0000, -0.0000, -0.0000],
        ...,
        [-0.0000, -0.0000, -0.0000,  ..., -6.1004, -0.0000, -0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -6.1004, -0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -6.1004]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_WS
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4541,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6785],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4541,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6785,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

state
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inp_s
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inp_c
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inputNames
['b-bh-u-dh-d', 'b-u-dh-d']
--------------------------------------------------------------------------------

nStimuli
2
--------------------------------------------------------------------------------

LV_inhM
tensor([[-0., -2., -2., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -0., -2., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -0., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -0., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -0., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -0., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -0., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -0., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -2., -0., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -2., -2., -0.]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

LV_c
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

LV_s
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

final_TPStates
{'b-bh-u-dh-d/0': 0, 'b-bh-u-dh-d/1': 0, 'b-bh-u-dh-d/2': 0, 'b-bh-u-dh-d/3': 0, 'b-bh-u-dh-d/4': 0, 'b-u-dh-d/0': 0, 'b-u-dh-d/1': 0, 'b-u-dh-d/2': 0, 'b-u-dh-d/3': 0, 'b-u-dh-d/4': 0}
--------------------------------------------------------------------------------

final_TPnum
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

reaction_times
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

divergence
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

bowl
######################### BOWL PARAMETER#########################
--------------------------------------------------------------------------------

Net
GSC Network
--------------------------------------------------------------------------------

center
tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64)
--------------------------------------------------------------------------------

strength
tensor(6.0004, dtype=torch.float64)
--------------------------------------------------------------------------------

lambda_value
0.11
--------------------------------------------------------------------------------

default_settings
######################### DEFAULT SETTINGS#########################
--------------------------------------------------------------------------------

grammar
Harmonic Grammar with 10 fillers and 5 roles
--------------------------------------------------------------------------------

R
tensor([[ 0.9002, -0.0538,  0.3926,  0.1191, -0.1356],
        [ 0.3555,  0.5622, -0.4737, -0.3424,  0.4647],
        [-0.2267,  0.3059,  0.7724, -0.1377,  0.4893],
        [-0.0977,  0.7372,  0.0251,  0.5397, -0.3939],
        [ 0.0482, -0.2099, -0.1554,  0.7472,  0.6092]])
--------------------------------------------------------------------------------

F
tensor([[-7.0986e-02, -2.6429e-01,  4.6262e-01,  1.8267e-01, -2.7734e-02,
          2.3468e-01,  3.2670e-01,  4.3932e-01,  3.1227e-01, -4.7397e-01],
        [ 3.6338e-01,  3.6867e-01, -4.0908e-02,  6.7202e-02, -5.0889e-01,
          4.5241e-01,  1.7974e-01,  3.2570e-01, -1.0650e-01,  3.3538e-01],
        [ 7.5341e-02, -3.2721e-01, -2.5580e-02,  5.3630e-01, -1.6480e-01,
          2.1286e-02, -2.9072e-01, -1.6779e-01,  5.5755e-01,  3.8451e-01],
        [ 4.4390e-01, -2.3043e-01,  2.2972e-01,  1.2317e-01,  5.3283e-01,
          4.7173e-01,  2.1955e-02, -2.6956e-01, -3.0335e-01,  1.0151e-01],
        [-3.7975e-01,  3.1492e-01, -6.0176e-02,  6.8578e-01,  2.7398e-01,
         -5.3716e-03, -1.1602e-01,  2.8084e-01, -3.3859e-01,  2.5421e-02],
        [ 4.0148e-01,  2.0372e-01,  5.2408e-01,  1.6365e-01,  4.3967e-03,
         -6.6063e-01,  1.7713e-01, -4.3401e-04, -5.7710e-02,  1.5718e-01],
        [-2.8887e-01, -3.9345e-01, -2.8399e-02, -1.8428e-01,  1.8854e-01,
         -9.5572e-02,  4.1174e-01,  3.2241e-01, -8.2126e-02,  6.3410e-01],
        [-3.6404e-01,  4.8209e-01,  2.4070e-01, -3.2812e-02,  1.3351e-01,
          2.2174e-01,  3.7738e-01, -4.6734e-01,  3.4747e-01,  1.6584e-01],
        [-1.7443e-02,  2.4908e-01,  3.2161e-01, -3.5380e-01,  3.0546e-01,
          1.0286e-01, -5.8793e-01,  3.8814e-01,  2.6151e-01,  2.0114e-01],
        [ 3.7219e-01,  2.1011e-01, -5.3891e-01,  4.5242e-02,  4.5545e-01,
         -1.0921e-01,  2.7116e-01,  2.1959e-01,  4.1764e-01, -9.6586e-02]])
--------------------------------------------------------------------------------

nSym
50
--------------------------------------------------------------------------------

filler2index
{'bh': 0, 'b': 1, 'u': 2, 'd': 3, 'dh': 4, 'p': 5, '-': 6, 'c': 7, 'a': 8, '#': 9}
--------------------------------------------------------------------------------

index2filler
{0: 'bh', 1: 'b', 2: 'u', 3: 'd', 4: 'dh', 5: 'p', 6: '-', 7: 'c', 8: 'a', 9: '#'}
--------------------------------------------------------------------------------

role2index
{'s1': 0, 's2': 1, 's3': 2, 's4': 3, 's5': 4}
--------------------------------------------------------------------------------

index2role
{0: 's1', 1: 's2', 2: 's3', 3: 's4', 4: 's5'}
--------------------------------------------------------------------------------

bind2index
{'bh/s1': 0, 'b/s1': 1, 'u/s1': 2, 'd/s1': 3, 'dh/s1': 4, 'p/s1': 5, '-/s1': 6, 'c/s1': 7, 'a/s1': 8, '#/s1': 9, 'bh/s2': 10, 'b/s2': 11, 'u/s2': 12, 'd/s2': 13, 'dh/s2': 14, 'p/s2': 15, '-/s2': 16, 'c/s2': 17, 'a/s2': 18, '#/s2': 19, 'bh/s3': 20, 'b/s3': 21, 'u/s3': 22, 'd/s3': 23, 'dh/s3': 24, 'p/s3': 25, '-/s3': 26, 'c/s3': 27, 'a/s3': 28, '#/s3': 29, 'bh/s4': 30, 'b/s4': 31, 'u/s4': 32, 'd/s4': 33, 'dh/s4': 34, 'p/s4': 35, '-/s4': 36, 'c/s4': 37, 'a/s4': 38, '#/s4': 39, 'bh/s5': 40, 'b/s5': 41, 'u/s5': 42, 'd/s5': 43, 'dh/s5': 44, 'p/s5': 45, '-/s5': 46, 'c/s5': 47, 'a/s5': 48, '#/s5': 49}
--------------------------------------------------------------------------------

index2bind
{0: 'bh/s1', 1: 'b/s1', 2: 'u/s1', 3: 'd/s1', 4: 'dh/s1', 5: 'p/s1', 6: '-/s1', 7: 'c/s1', 8: 'a/s1', 9: '#/s1', 10: 'bh/s2', 11: 'b/s2', 12: 'u/s2', 13: 'd/s2', 14: 'dh/s2', 15: 'p/s2', 16: '-/s2', 17: 'c/s2', 18: 'a/s2', 19: '#/s2', 20: 'bh/s3', 21: 'b/s3', 22: 'u/s3', 23: 'd/s3', 24: 'dh/s3', 25: 'p/s3', 26: '-/s3', 27: 'c/s3', 28: 'a/s3', 29: '#/s3', 30: 'bh/s4', 31: 'b/s4', 32: 'u/s4', 33: 'd/s4', 34: 'dh/s4', 35: 'p/s4', 36: '-/s4', 37: 'c/s4', 38: 'a/s4', 39: '#/s4', 40: 'bh/s5', 41: 'b/s5', 42: 'u/s5', 43: 'd/s5', 44: 'dh/s5', 45: 'p/s5', 46: '-/s5', 47: 'c/s5', 48: 'a/s5', 49: '#/s5'}
--------------------------------------------------------------------------------

settings
{'maxInp': 1, 'epochs': 5, 'timeStep': 0.0001, 'tgtStd': 0.00125, 'TInit': -1, 'TMin': 0, 'TdecayRate': 0.05, 'lambdaInit': 0.11, 'lambdaMin': 0.01, 'lambdaDecayRate': 0.75, 'maxSteps': 60000, 'emaSpeedTol': 0.002, 'emaFactor': 0.05, 'diary': False, 'printInterval': 3000, 'saveFile': 'Simulations/grassman.txt', 'summary_file': 'data/summary.txt', 'initStateMean': tensor([[0.1000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.1000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.1000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.1000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]), 'initStateStdev': 0.025, 'clamped': False}
--------------------------------------------------------------------------------

vars
{'var_names': ['Activation', 'Harmony', 'H0', 'Q', 'q', 'Temp', 'time', 'ema_speed', 'speed'], 'norm_ord': tensor([inf]), 'coord': 'N', 'ema_factor': 0.001, 'ema_tau': 0.14476482730108395, 'T_init': -1, 'T_min': 0.0, 'T_decay_rate': 0.001, 'q_init': 2, 'q_max': 200.0, 'q_rate': 10.0, 'c': 0.5, 'bowl_center': tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64), 'bowl_strength': tensor(6.1004, dtype=torch.float64), 'beta_min_offset': 0.1, 'H0_on': True, 'H1_on': True, 'Hq_on': True, 'max_dt': 0.01, 'min_dt': 0.0005, 'q_policy': None, 'time': 0, 'dt': 0.001, 's_trace': None, 'prev_s': None, 'Harmony_trace': None, 'speed_trace': None, 'ema_trace': None, 'lambda_trace': None, 'time_trace': None, 'TP_trace': None, 'TPnum_trace': None, 'TP_h_trace': None, 'TP_dist_trace': None, 'zeta_bowl': tensor([[0.6854],
        [0.8779],
        [0.3661],
        [0.6855],
        [0.4163],
        [0.5580],
        [0.2959],
        [0.6752],
        [0.5322],
        [0.7620],
        [0.3175],
        [0.4067],
        [0.1696],
        [0.3175],
        [0.1928],
        [0.2585],
        [0.1371],
        [0.3127],
        [0.2465],
        [0.3530],
        [0.6746],
        [0.8640],
        [0.3603],
        [0.6747],
        [0.4097],
        [0.5492],
        [0.2912],
        [0.6645],
        [0.5238],
        [0.7500],
        [0.4543],
        [0.5819],
        [0.2427],
        [0.4544],
        [0.2760],
        [0.3699],
        [0.1962],
        [0.4476],
        [0.3528],
        [0.5052],
        [0.5827],
        [0.7464],
        [0.3112],
        [0.5828],
        [0.3539],
        [0.4744],
        [0.2516],
        [0.5740],
        [0.4525],
        [0.6479]], dtype=torch.float64), 'lambda_rec': tensor(0.1111, dtype=torch.float64), 'lambdaInit': 0.11, 'T_rec': tensor(9.5315e-06, dtype=torch.float64), 'T': 0, 'lambda': 0}
--------------------------------------------------------------------------------

Hc
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0.],
        [0., 0., 2., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 2., 2.]])
--------------------------------------------------------------------------------

Hcc
tensor([[[[ 0.,  0.,  0.,  0.,  0.],
          [-5.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[-5.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        ...,


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]]])
--------------------------------------------------------------------------------

stimuli
tensor([[[0.7000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.8000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]])
--------------------------------------------------------------------------------

extData_path
data/inp_pandas.csv
--------------------------------------------------------------------------------

TP
tensor([[-0.0639, -0.2379,  0.4164,  ..., -0.0596, -0.0424,  0.0643],
        [ 0.3271,  0.3319, -0.0368,  ..., -0.0442,  0.0144, -0.0455],
        [ 0.0678, -0.2946, -0.0230,  ...,  0.0228, -0.0756, -0.0522],
        ...,
        [-0.0175,  0.0232,  0.0116,  ..., -0.2847,  0.2117,  0.1010],
        [-0.0008,  0.0120,  0.0155,  ...,  0.2365,  0.1593,  0.1225],
        [ 0.0179,  0.0101, -0.0260,  ...,  0.1338,  0.2544, -0.0588]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

TPinv
tensor([[ -4.9161,   5.9537,   2.7182,  ...,   4.1568,  -2.7481,  -8.0070],
        [  5.9537,  -5.5542,  -3.1678,  ...,  -3.8015,   2.9782,   9.4465],
        [  2.7182,  -3.1678,  -1.2544,  ...,  -2.1345,   2.0297,   4.5770],
        ...,
        [  4.1568,  -3.8015,  -2.1345,  ...,  -3.4069,   2.4905,   5.9694],
        [ -2.7481,   2.9782,   2.0297,  ...,   2.4905,  -2.0253,  -4.4939],
        [ -8.0070,   9.4465,   4.5770,  ...,   5.9694,  -4.4939, -11.8265]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

Gc
tensor([[ 1.0000e+00,  2.7777e+00, -1.7945e-01,  ..., -3.2559e+00,
         -3.6448e+00,  4.6346e+00],
        [ 1.5616e-15, -2.3640e+00,  6.4414e-01,  ...,  4.0901e+00,
          5.4066e+00, -4.7127e+00],
        [ 2.9946e-16, -1.5359e+00,  1.1312e+00,  ...,  2.0328e+00,
          2.7978e+00, -2.6877e+00],
        ...,
        [ 8.9481e-16, -2.3487e+00,  4.6941e-01,  ...,  2.8196e+00,
          3.3972e+00, -3.5952e+00],
        [-9.8266e-16,  1.5527e+00, -1.9050e-01,  ..., -1.7570e+00,
         -2.2802e+00,  2.6979e+00],
        [-2.1649e-15,  4.5242e+00, -3.5683e-01,  ..., -4.8480e+00,
         -6.1388e+00,  7.0522e+00]], dtype=torch.float64)
--------------------------------------------------------------------------------

W
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4542,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6785],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4542,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6785,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

B
tensor([[ 10.7586],
        [ 20.5560],
        [ 11.3920],
        [  5.4800],
        [  0.6496],
        [ 14.6299],
        [ 14.0854],
        [ 14.5036],
        [-12.1793],
        [ -3.0769],
        [  3.2089],
        [ -4.3519],
        [  7.1898],
        [ -3.6864],
        [ -7.9911],
        [  3.8274],
        [  9.8354],
        [  3.6934],
        [  0.0433],
        [ -1.6509],
        [  4.8316],
        [  9.5520],
        [  6.1784],
        [  7.3607],
        [  9.9529],
        [  5.0425],
        [  6.3686],
        [  8.4693],
        [  1.3802],
        [  6.7504],
        [  4.2149],
        [ -5.9229],
        [  5.7597],
        [  0.9887],
        [ -3.8856],
        [  3.9671],
        [  5.9076],
        [  2.6049],
        [  6.2498],
        [ -0.3907],
        [ -0.2793],
        [ -2.4224],
        [  8.1874],
        [  2.9145],
        [  7.2522],
        [ -0.3549],
        [  9.3438],
        [  7.0723],
        [  9.2682],
        [  9.6348]], dtype=torch.float64)
--------------------------------------------------------------------------------

activationC
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

activationC_prev
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

activation
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

activation_prev
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInpC
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInpC_prev
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInp
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInp_prev
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

Wc
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4541,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6786],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4541,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6786,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bc
tensor([[3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [4.0502],
        [5.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [5.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [5.0502]], dtype=torch.float64)
--------------------------------------------------------------------------------

bowl
Bowl object with strength 6.00037441725961 and center tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_bC
tensor([[3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_bS
tensor([[ 10.6929],
        [ 20.9403],
        [ 11.3235],
        [  5.0165],
        [  0.1661],
        [ 14.5674],
        [ 14.0307],
        [ 14.4172],
        [-12.2736],
        [ -3.4555],
        [  3.3850],
        [ -4.8842],
        [  7.1936],
        [ -3.1480],
        [ -7.4129],
        [  3.8706],
        [  9.7716],
        [  3.7638],
        [  0.1159],
        [ -1.1744],
        [  5.0665],
        [ 10.0505],
        [  5.7484],
        [  6.3710],
        [  8.9821],
        [  4.7988],
        [  5.7739],
        [  8.1718],
        [  1.0402],
        [  6.0797],
        [  4.3499],
        [ -5.9968],
        [  5.6423],
        [  0.9293],
        [ -3.9240],
        [  3.9169],
        [  5.7179],
        [  2.5507],
        [  6.1847],
        [ -0.3865],
        [  1.0263],
        [ -3.4800],
        [  7.1764],
        [  2.8238],
        [  7.3749],
        [ -0.7545],
        [  7.6535],
        [  6.6588],
        [  8.7625],
        [ 10.0454]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_WC
tensor([[-6.1004, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [-0.0000, -6.1004, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [-0.0000, -0.0000, -6.1004,  ..., -0.0000, -0.0000, -0.0000],
        ...,
        [-0.0000, -0.0000, -0.0000,  ..., -6.1004, -0.0000, -0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -6.1004, -0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -6.1004]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_WS
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4541,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6785],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4541,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6785,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

state
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inp_s
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inp_c
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inputNames
['b-bh-u-dh-d', 'b-u-dh-d']
--------------------------------------------------------------------------------

nStimuli
2
--------------------------------------------------------------------------------

LV_inhM
tensor([[-0., -2., -2., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -0., -2., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -0., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -0., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -0., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -0., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -0., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -0., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -2., -0., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -2., -2., -0.]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

LV_c
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

LV_s
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

final_TPStates
{'b-bh-u-dh-d/0': 0, 'b-bh-u-dh-d/1': 0, 'b-bh-u-dh-d/2': 0, 'b-bh-u-dh-d/3': 0, 'b-bh-u-dh-d/4': 0, 'b-u-dh-d/0': 0, 'b-u-dh-d/1': 0, 'b-u-dh-d/2': 0, 'b-u-dh-d/3': 0, 'b-u-dh-d/4': 0}
--------------------------------------------------------------------------------

final_TPnum
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

reaction_times
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

divergence
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

bowl
######################### BOWL PARAMETER#########################
--------------------------------------------------------------------------------

Net
GSC Network
--------------------------------------------------------------------------------

center
tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64)
--------------------------------------------------------------------------------

strength
tensor(6.0004, dtype=torch.float64)
--------------------------------------------------------------------------------

lambda_value
tensor(0.1111, dtype=torch.float64)
--------------------------------------------------------------------------------

new_temperature
tensor(9.5315e-06, dtype=torch.float64)
--------------------------------------------------------------------------------

default_settings
######################### DEFAULT SETTINGS#########################
--------------------------------------------------------------------------------

grammar
Harmonic Grammar with 10 fillers and 5 roles
--------------------------------------------------------------------------------

R
tensor([[ 0.9002, -0.0538,  0.3926,  0.1191, -0.1356],
        [ 0.3555,  0.5622, -0.4737, -0.3424,  0.4647],
        [-0.2267,  0.3059,  0.7724, -0.1377,  0.4893],
        [-0.0977,  0.7372,  0.0251,  0.5397, -0.3939],
        [ 0.0482, -0.2099, -0.1554,  0.7472,  0.6092]])
--------------------------------------------------------------------------------

F
tensor([[-7.0986e-02, -2.6429e-01,  4.6262e-01,  1.8267e-01, -2.7734e-02,
          2.3468e-01,  3.2670e-01,  4.3932e-01,  3.1227e-01, -4.7397e-01],
        [ 3.6338e-01,  3.6867e-01, -4.0908e-02,  6.7202e-02, -5.0889e-01,
          4.5241e-01,  1.7974e-01,  3.2570e-01, -1.0650e-01,  3.3538e-01],
        [ 7.5341e-02, -3.2721e-01, -2.5580e-02,  5.3630e-01, -1.6480e-01,
          2.1286e-02, -2.9072e-01, -1.6779e-01,  5.5755e-01,  3.8451e-01],
        [ 4.4390e-01, -2.3043e-01,  2.2972e-01,  1.2317e-01,  5.3283e-01,
          4.7173e-01,  2.1955e-02, -2.6956e-01, -3.0335e-01,  1.0151e-01],
        [-3.7975e-01,  3.1492e-01, -6.0176e-02,  6.8578e-01,  2.7398e-01,
         -5.3716e-03, -1.1602e-01,  2.8084e-01, -3.3859e-01,  2.5421e-02],
        [ 4.0148e-01,  2.0372e-01,  5.2408e-01,  1.6365e-01,  4.3967e-03,
         -6.6063e-01,  1.7713e-01, -4.3401e-04, -5.7710e-02,  1.5718e-01],
        [-2.8887e-01, -3.9345e-01, -2.8399e-02, -1.8428e-01,  1.8854e-01,
         -9.5572e-02,  4.1174e-01,  3.2241e-01, -8.2126e-02,  6.3410e-01],
        [-3.6404e-01,  4.8209e-01,  2.4070e-01, -3.2812e-02,  1.3351e-01,
          2.2174e-01,  3.7738e-01, -4.6734e-01,  3.4747e-01,  1.6584e-01],
        [-1.7443e-02,  2.4908e-01,  3.2161e-01, -3.5380e-01,  3.0546e-01,
          1.0286e-01, -5.8793e-01,  3.8814e-01,  2.6151e-01,  2.0114e-01],
        [ 3.7219e-01,  2.1011e-01, -5.3891e-01,  4.5242e-02,  4.5545e-01,
         -1.0921e-01,  2.7116e-01,  2.1959e-01,  4.1764e-01, -9.6586e-02]])
--------------------------------------------------------------------------------

nSym
50
--------------------------------------------------------------------------------

filler2index
{'bh': 0, 'b': 1, 'u': 2, 'd': 3, 'dh': 4, 'p': 5, '-': 6, 'c': 7, 'a': 8, '#': 9}
--------------------------------------------------------------------------------

index2filler
{0: 'bh', 1: 'b', 2: 'u', 3: 'd', 4: 'dh', 5: 'p', 6: '-', 7: 'c', 8: 'a', 9: '#'}
--------------------------------------------------------------------------------

role2index
{'s1': 0, 's2': 1, 's3': 2, 's4': 3, 's5': 4}
--------------------------------------------------------------------------------

index2role
{0: 's1', 1: 's2', 2: 's3', 3: 's4', 4: 's5'}
--------------------------------------------------------------------------------

bind2index
{'bh/s1': 0, 'b/s1': 1, 'u/s1': 2, 'd/s1': 3, 'dh/s1': 4, 'p/s1': 5, '-/s1': 6, 'c/s1': 7, 'a/s1': 8, '#/s1': 9, 'bh/s2': 10, 'b/s2': 11, 'u/s2': 12, 'd/s2': 13, 'dh/s2': 14, 'p/s2': 15, '-/s2': 16, 'c/s2': 17, 'a/s2': 18, '#/s2': 19, 'bh/s3': 20, 'b/s3': 21, 'u/s3': 22, 'd/s3': 23, 'dh/s3': 24, 'p/s3': 25, '-/s3': 26, 'c/s3': 27, 'a/s3': 28, '#/s3': 29, 'bh/s4': 30, 'b/s4': 31, 'u/s4': 32, 'd/s4': 33, 'dh/s4': 34, 'p/s4': 35, '-/s4': 36, 'c/s4': 37, 'a/s4': 38, '#/s4': 39, 'bh/s5': 40, 'b/s5': 41, 'u/s5': 42, 'd/s5': 43, 'dh/s5': 44, 'p/s5': 45, '-/s5': 46, 'c/s5': 47, 'a/s5': 48, '#/s5': 49}
--------------------------------------------------------------------------------

index2bind
{0: 'bh/s1', 1: 'b/s1', 2: 'u/s1', 3: 'd/s1', 4: 'dh/s1', 5: 'p/s1', 6: '-/s1', 7: 'c/s1', 8: 'a/s1', 9: '#/s1', 10: 'bh/s2', 11: 'b/s2', 12: 'u/s2', 13: 'd/s2', 14: 'dh/s2', 15: 'p/s2', 16: '-/s2', 17: 'c/s2', 18: 'a/s2', 19: '#/s2', 20: 'bh/s3', 21: 'b/s3', 22: 'u/s3', 23: 'd/s3', 24: 'dh/s3', 25: 'p/s3', 26: '-/s3', 27: 'c/s3', 28: 'a/s3', 29: '#/s3', 30: 'bh/s4', 31: 'b/s4', 32: 'u/s4', 33: 'd/s4', 34: 'dh/s4', 35: 'p/s4', 36: '-/s4', 37: 'c/s4', 38: 'a/s4', 39: '#/s4', 40: 'bh/s5', 41: 'b/s5', 42: 'u/s5', 43: 'd/s5', 44: 'dh/s5', 45: 'p/s5', 46: '-/s5', 47: 'c/s5', 48: 'a/s5', 49: '#/s5'}
--------------------------------------------------------------------------------

settings
{'maxInp': 1, 'epochs': 5, 'timeStep': 0.0001, 'tgtStd': 0.00125, 'TInit': -1, 'TMin': 0, 'TdecayRate': 0.05, 'lambdaInit': 0.11, 'lambdaMin': 0.01, 'lambdaDecayRate': 0.75, 'maxSteps': 60000, 'emaSpeedTol': 0.002, 'emaFactor': 0.05, 'diary': False, 'printInterval': 3000, 'saveFile': 'Simulations/grassman.txt', 'summary_file': 'data/summary.txt', 'initStateMean': tensor([[0.1000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.1000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.1000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.1000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]), 'initStateStdev': 0.025, 'clamped': False}
--------------------------------------------------------------------------------

vars
{'var_names': ['Activation', 'Harmony', 'H0', 'Q', 'q', 'Temp', 'time', 'ema_speed', 'speed'], 'T_init': tensor(9.5315e-06, dtype=torch.float64), 'T_min': 0.0, 'T_decay_rate': 0.001, 'q_init': 2, 'q_max': 200.0, 'q_rate': 10.0, 'bowl_center': tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64), 'bowl_strength': tensor(6.1004, dtype=torch.float64), 'beta_min_offset': 0.1, 'max_dt': 0.01, 'min_dt': 0.0005, 'dt': 0.001, 's_trace': None, 'prev_s': None, 'Harmony_trace': None, 'speed_trace': None, 'ema_trace': None, 'lambda_trace': None, 'time_trace': None, 'TP_trace': None, 'TPnum_trace': None, 'TP_h_trace': None, 'TP_dist_trace': None, 'zeta_bowl': tensor([[0.6854],
        [0.8779],
        [0.3661],
        [0.6855],
        [0.4163],
        [0.5580],
        [0.2959],
        [0.6752],
        [0.5322],
        [0.7620],
        [0.3175],
        [0.4067],
        [0.1696],
        [0.3175],
        [0.1928],
        [0.2585],
        [0.1371],
        [0.3127],
        [0.2465],
        [0.3530],
        [0.6746],
        [0.8640],
        [0.3603],
        [0.6747],
        [0.4097],
        [0.5492],
        [0.2912],
        [0.6645],
        [0.5238],
        [0.7500],
        [0.4543],
        [0.5819],
        [0.2427],
        [0.4544],
        [0.2760],
        [0.3699],
        [0.1962],
        [0.4476],
        [0.3528],
        [0.5052],
        [0.5827],
        [0.7464],
        [0.3112],
        [0.5828],
        [0.3539],
        [0.4744],
        [0.2516],
        [0.5740],
        [0.4525],
        [0.6479]], dtype=torch.float64), 'lambda_rec': tensor(0.1111, dtype=torch.float64), 'lambdaInit': tensor(0.1111, dtype=torch.float64), 'T_rec': tensor(9.5315e-06, dtype=torch.float64), 'T': 0, 'lambda': 0}
--------------------------------------------------------------------------------

Hc
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0.],
        [0., 0., 2., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 2., 2.]])
--------------------------------------------------------------------------------

Hcc
tensor([[[[ 0.,  0.,  0.,  0.,  0.],
          [-5.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[-5.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        ...,


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]]])
--------------------------------------------------------------------------------

stimuli
tensor([[[0.7000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.8000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]])
--------------------------------------------------------------------------------

extData_path
data/inp_pandas.csv
--------------------------------------------------------------------------------

TP
tensor([[-0.0639, -0.2379,  0.4164,  ..., -0.0596, -0.0424,  0.0643],
        [ 0.3271,  0.3319, -0.0368,  ..., -0.0442,  0.0144, -0.0455],
        [ 0.0678, -0.2946, -0.0230,  ...,  0.0228, -0.0756, -0.0522],
        ...,
        [-0.0175,  0.0232,  0.0116,  ..., -0.2847,  0.2117,  0.1010],
        [-0.0008,  0.0120,  0.0155,  ...,  0.2365,  0.1593,  0.1225],
        [ 0.0179,  0.0101, -0.0260,  ...,  0.1338,  0.2544, -0.0588]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

TPinv
tensor([[ -4.9161,   5.9537,   2.7182,  ...,   4.1568,  -2.7481,  -8.0070],
        [  5.9537,  -5.5542,  -3.1678,  ...,  -3.8015,   2.9782,   9.4465],
        [  2.7182,  -3.1678,  -1.2544,  ...,  -2.1345,   2.0297,   4.5770],
        ...,
        [  4.1568,  -3.8015,  -2.1345,  ...,  -3.4069,   2.4905,   5.9694],
        [ -2.7481,   2.9782,   2.0297,  ...,   2.4905,  -2.0253,  -4.4939],
        [ -8.0070,   9.4465,   4.5770,  ...,   5.9694,  -4.4939, -11.8265]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

Gc
tensor([[ 1.0000e+00,  2.7777e+00, -1.7945e-01,  ..., -3.2559e+00,
         -3.6448e+00,  4.6346e+00],
        [ 1.5616e-15, -2.3640e+00,  6.4414e-01,  ...,  4.0901e+00,
          5.4066e+00, -4.7127e+00],
        [ 2.9946e-16, -1.5359e+00,  1.1312e+00,  ...,  2.0328e+00,
          2.7978e+00, -2.6877e+00],
        ...,
        [ 8.9481e-16, -2.3487e+00,  4.6941e-01,  ...,  2.8196e+00,
          3.3972e+00, -3.5952e+00],
        [-9.8266e-16,  1.5527e+00, -1.9050e-01,  ..., -1.7570e+00,
         -2.2802e+00,  2.6979e+00],
        [-2.1649e-15,  4.5242e+00, -3.5683e-01,  ..., -4.8480e+00,
         -6.1388e+00,  7.0522e+00]], dtype=torch.float64)
--------------------------------------------------------------------------------

W
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4542,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6785],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4542,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6785,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

B
tensor([[ 10.7586],
        [ 20.5560],
        [ 11.3920],
        [  5.4800],
        [  0.6496],
        [ 14.6299],
        [ 14.0854],
        [ 14.5036],
        [-12.1793],
        [ -3.0769],
        [  3.2089],
        [ -4.3519],
        [  7.1898],
        [ -3.6864],
        [ -7.9911],
        [  3.8274],
        [  9.8354],
        [  3.6934],
        [  0.0433],
        [ -1.6509],
        [  4.8316],
        [  9.5520],
        [  6.1784],
        [  7.3607],
        [  9.9529],
        [  5.0425],
        [  6.3686],
        [  8.4693],
        [  1.3802],
        [  6.7504],
        [  4.2149],
        [ -5.9229],
        [  5.7597],
        [  0.9887],
        [ -3.8856],
        [  3.9671],
        [  5.9076],
        [  2.6049],
        [  6.2498],
        [ -0.3907],
        [ -0.2793],
        [ -2.4224],
        [  8.1874],
        [  2.9145],
        [  7.2522],
        [ -0.3549],
        [  9.3438],
        [  7.0723],
        [  9.2682],
        [  9.6348]], dtype=torch.float64)
--------------------------------------------------------------------------------

activationC
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

activationC_prev
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

activation
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

activation_prev
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInpC
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInpC_prev
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInp
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInp_prev
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

Wc
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4541,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6786],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4541,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6786,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bc
tensor([[3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [4.0502],
        [5.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [5.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [5.0502]], dtype=torch.float64)
--------------------------------------------------------------------------------

bowl
Bowl object with strength 6.00037441725961 and center tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_bC
tensor([[3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_bS
tensor([[ 10.6929],
        [ 20.9403],
        [ 11.3235],
        [  5.0165],
        [  0.1661],
        [ 14.5674],
        [ 14.0307],
        [ 14.4172],
        [-12.2736],
        [ -3.4555],
        [  3.3850],
        [ -4.8842],
        [  7.1936],
        [ -3.1480],
        [ -7.4129],
        [  3.8706],
        [  9.7716],
        [  3.7638],
        [  0.1159],
        [ -1.1744],
        [  5.0665],
        [ 10.0505],
        [  5.7484],
        [  6.3710],
        [  8.9821],
        [  4.7988],
        [  5.7739],
        [  8.1718],
        [  1.0402],
        [  6.0797],
        [  4.3499],
        [ -5.9968],
        [  5.6423],
        [  0.9293],
        [ -3.9240],
        [  3.9169],
        [  5.7179],
        [  2.5507],
        [  6.1847],
        [ -0.3865],
        [  1.0263],
        [ -3.4800],
        [  7.1764],
        [  2.8238],
        [  7.3749],
        [ -0.7545],
        [  7.6535],
        [  6.6588],
        [  8.7625],
        [ 10.0454]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_WC
tensor([[-6.1004, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [-0.0000, -6.1004, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [-0.0000, -0.0000, -6.1004,  ..., -0.0000, -0.0000, -0.0000],
        ...,
        [-0.0000, -0.0000, -0.0000,  ..., -6.1004, -0.0000, -0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -6.1004, -0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -6.1004]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_WS
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4541,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6785],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4541,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6785,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

state
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inp_s
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inp_c
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inputNames
['b-bh-u-dh-d', 'b-u-dh-d']
--------------------------------------------------------------------------------

nStimuli
2
--------------------------------------------------------------------------------

LV_inhM
tensor([[-0., -2., -2., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -0., -2., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -0., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -0., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -0., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -0., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -0., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -0., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -2., -0., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -2., -2., -0.]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

LV_c
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

LV_s
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

final_TPStates
{'b-bh-u-dh-d/0': 0, 'b-bh-u-dh-d/1': 0, 'b-bh-u-dh-d/2': 0, 'b-bh-u-dh-d/3': 0, 'b-bh-u-dh-d/4': 0, 'b-u-dh-d/0': 0, 'b-u-dh-d/1': 0, 'b-u-dh-d/2': 0, 'b-u-dh-d/3': 0, 'b-u-dh-d/4': 0}
--------------------------------------------------------------------------------

final_TPnum
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

reaction_times
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

divergence
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

bowl
######################### BOWL PARAMETER#########################
--------------------------------------------------------------------------------

Net
GSC Network
--------------------------------------------------------------------------------

center
tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64)
--------------------------------------------------------------------------------

strength
tensor(6.0004, dtype=torch.float64)
--------------------------------------------------------------------------------

lambda_value
0.11
--------------------------------------------------------------------------------

default_settings
######################### DEFAULT SETTINGS#########################
--------------------------------------------------------------------------------

grammar
Harmonic Grammar with 10 fillers and 5 roles
--------------------------------------------------------------------------------

R
tensor([[ 0.9002, -0.0538,  0.3926,  0.1191, -0.1356],
        [ 0.3555,  0.5622, -0.4737, -0.3424,  0.4647],
        [-0.2267,  0.3059,  0.7724, -0.1377,  0.4893],
        [-0.0977,  0.7372,  0.0251,  0.5397, -0.3939],
        [ 0.0482, -0.2099, -0.1554,  0.7472,  0.6092]])
--------------------------------------------------------------------------------

F
tensor([[-7.0986e-02, -2.6429e-01,  4.6262e-01,  1.8267e-01, -2.7734e-02,
          2.3468e-01,  3.2670e-01,  4.3932e-01,  3.1227e-01, -4.7397e-01],
        [ 3.6338e-01,  3.6867e-01, -4.0908e-02,  6.7202e-02, -5.0889e-01,
          4.5241e-01,  1.7974e-01,  3.2570e-01, -1.0650e-01,  3.3538e-01],
        [ 7.5341e-02, -3.2721e-01, -2.5580e-02,  5.3630e-01, -1.6480e-01,
          2.1286e-02, -2.9072e-01, -1.6779e-01,  5.5755e-01,  3.8451e-01],
        [ 4.4390e-01, -2.3043e-01,  2.2972e-01,  1.2317e-01,  5.3283e-01,
          4.7173e-01,  2.1955e-02, -2.6956e-01, -3.0335e-01,  1.0151e-01],
        [-3.7975e-01,  3.1492e-01, -6.0176e-02,  6.8578e-01,  2.7398e-01,
         -5.3716e-03, -1.1602e-01,  2.8084e-01, -3.3859e-01,  2.5421e-02],
        [ 4.0148e-01,  2.0372e-01,  5.2408e-01,  1.6365e-01,  4.3967e-03,
         -6.6063e-01,  1.7713e-01, -4.3401e-04, -5.7710e-02,  1.5718e-01],
        [-2.8887e-01, -3.9345e-01, -2.8399e-02, -1.8428e-01,  1.8854e-01,
         -9.5572e-02,  4.1174e-01,  3.2241e-01, -8.2126e-02,  6.3410e-01],
        [-3.6404e-01,  4.8209e-01,  2.4070e-01, -3.2812e-02,  1.3351e-01,
          2.2174e-01,  3.7738e-01, -4.6734e-01,  3.4747e-01,  1.6584e-01],
        [-1.7443e-02,  2.4908e-01,  3.2161e-01, -3.5380e-01,  3.0546e-01,
          1.0286e-01, -5.8793e-01,  3.8814e-01,  2.6151e-01,  2.0114e-01],
        [ 3.7219e-01,  2.1011e-01, -5.3891e-01,  4.5242e-02,  4.5545e-01,
         -1.0921e-01,  2.7116e-01,  2.1959e-01,  4.1764e-01, -9.6586e-02]])
--------------------------------------------------------------------------------

nSym
50
--------------------------------------------------------------------------------

filler2index
{'bh': 0, 'b': 1, 'u': 2, 'd': 3, 'dh': 4, 'p': 5, '-': 6, 'c': 7, 'a': 8, '#': 9}
--------------------------------------------------------------------------------

index2filler
{0: 'bh', 1: 'b', 2: 'u', 3: 'd', 4: 'dh', 5: 'p', 6: '-', 7: 'c', 8: 'a', 9: '#'}
--------------------------------------------------------------------------------

role2index
{'s1': 0, 's2': 1, 's3': 2, 's4': 3, 's5': 4}
--------------------------------------------------------------------------------

index2role
{0: 's1', 1: 's2', 2: 's3', 3: 's4', 4: 's5'}
--------------------------------------------------------------------------------

bind2index
{'bh/s1': 0, 'b/s1': 1, 'u/s1': 2, 'd/s1': 3, 'dh/s1': 4, 'p/s1': 5, '-/s1': 6, 'c/s1': 7, 'a/s1': 8, '#/s1': 9, 'bh/s2': 10, 'b/s2': 11, 'u/s2': 12, 'd/s2': 13, 'dh/s2': 14, 'p/s2': 15, '-/s2': 16, 'c/s2': 17, 'a/s2': 18, '#/s2': 19, 'bh/s3': 20, 'b/s3': 21, 'u/s3': 22, 'd/s3': 23, 'dh/s3': 24, 'p/s3': 25, '-/s3': 26, 'c/s3': 27, 'a/s3': 28, '#/s3': 29, 'bh/s4': 30, 'b/s4': 31, 'u/s4': 32, 'd/s4': 33, 'dh/s4': 34, 'p/s4': 35, '-/s4': 36, 'c/s4': 37, 'a/s4': 38, '#/s4': 39, 'bh/s5': 40, 'b/s5': 41, 'u/s5': 42, 'd/s5': 43, 'dh/s5': 44, 'p/s5': 45, '-/s5': 46, 'c/s5': 47, 'a/s5': 48, '#/s5': 49}
--------------------------------------------------------------------------------

index2bind
{0: 'bh/s1', 1: 'b/s1', 2: 'u/s1', 3: 'd/s1', 4: 'dh/s1', 5: 'p/s1', 6: '-/s1', 7: 'c/s1', 8: 'a/s1', 9: '#/s1', 10: 'bh/s2', 11: 'b/s2', 12: 'u/s2', 13: 'd/s2', 14: 'dh/s2', 15: 'p/s2', 16: '-/s2', 17: 'c/s2', 18: 'a/s2', 19: '#/s2', 20: 'bh/s3', 21: 'b/s3', 22: 'u/s3', 23: 'd/s3', 24: 'dh/s3', 25: 'p/s3', 26: '-/s3', 27: 'c/s3', 28: 'a/s3', 29: '#/s3', 30: 'bh/s4', 31: 'b/s4', 32: 'u/s4', 33: 'd/s4', 34: 'dh/s4', 35: 'p/s4', 36: '-/s4', 37: 'c/s4', 38: 'a/s4', 39: '#/s4', 40: 'bh/s5', 41: 'b/s5', 42: 'u/s5', 43: 'd/s5', 44: 'dh/s5', 45: 'p/s5', 46: '-/s5', 47: 'c/s5', 48: 'a/s5', 49: '#/s5'}
--------------------------------------------------------------------------------

settings
{'maxInp': 1, 'epochs': 5, 'timeStep': 0.0001, 'tgtStd': 0.00125, 'TInit': -1, 'TMin': 0, 'TdecayRate': 0.05, 'lambdaInit': 0.11, 'lambdaMin': 0.01, 'lambdaDecayRate': 0.75, 'maxSteps': 60000, 'emaSpeedTol': 0.002, 'emaFactor': 0.05, 'diary': False, 'printInterval': 3000, 'saveFile': 'Simulations/grassman.txt', 'summary_file': 'data/summary.txt', 'initStateMean': tensor([[0.1000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.1000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.1000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.1000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]), 'initStateStdev': 0.025, 'clamped': False}
--------------------------------------------------------------------------------

vars
{'var_names': ['Activation', 'Harmony', 'H0', 'Q', 'q', 'Temp', 'time', 'ema_speed', 'speed'], 'T_init': -1, 'T_min': 0.0, 'T_decay_rate': 0.001, 'q_init': 2, 'q_max': 200.0, 'q_rate': 10.0, 'bowl_center': tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64), 'bowl_strength': tensor(6.1004, dtype=torch.float64), 'beta_min_offset': 0.1, 'max_dt': 0.01, 'min_dt': 0.0005, 'dt': 0.001, 's_trace': None, 'prev_s': None, 'Harmony_trace': None, 'speed_trace': None, 'ema_trace': None, 'lambda_trace': None, 'time_trace': None, 'TP_trace': None, 'TPnum_trace': None, 'TP_h_trace': None, 'TP_dist_trace': None, 'zeta_bowl': tensor([[0.6854],
        [0.8779],
        [0.3661],
        [0.6855],
        [0.4163],
        [0.5580],
        [0.2959],
        [0.6752],
        [0.5322],
        [0.7620],
        [0.3175],
        [0.4067],
        [0.1696],
        [0.3175],
        [0.1928],
        [0.2585],
        [0.1371],
        [0.3127],
        [0.2465],
        [0.3530],
        [0.6746],
        [0.8640],
        [0.3603],
        [0.6747],
        [0.4097],
        [0.5492],
        [0.2912],
        [0.6645],
        [0.5238],
        [0.7500],
        [0.4543],
        [0.5819],
        [0.2427],
        [0.4544],
        [0.2760],
        [0.3699],
        [0.1962],
        [0.4476],
        [0.3528],
        [0.5052],
        [0.5827],
        [0.7464],
        [0.3112],
        [0.5828],
        [0.3539],
        [0.4744],
        [0.2516],
        [0.5740],
        [0.4525],
        [0.6479]], dtype=torch.float64), 'lambda_rec': tensor(0.1111, dtype=torch.float64), 'lambdaInit': 0.11, 'T_rec': tensor(9.5315e-06, dtype=torch.float64), 'T': 0, 'lambda': 0}
--------------------------------------------------------------------------------

Hc
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0.],
        [0., 0., 2., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 2., 2.]])
--------------------------------------------------------------------------------

Hcc
tensor([[[[ 0.,  0.,  0.,  0.,  0.],
          [-5.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[-5.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        ...,


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]]])
--------------------------------------------------------------------------------

stimuli
tensor([[[0.7000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.8000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]])
--------------------------------------------------------------------------------

extData_path
data/inp_pandas.csv
--------------------------------------------------------------------------------

TP
tensor([[-0.0639, -0.2379,  0.4164,  ..., -0.0596, -0.0424,  0.0643],
        [ 0.3271,  0.3319, -0.0368,  ..., -0.0442,  0.0144, -0.0455],
        [ 0.0678, -0.2946, -0.0230,  ...,  0.0228, -0.0756, -0.0522],
        ...,
        [-0.0175,  0.0232,  0.0116,  ..., -0.2847,  0.2117,  0.1010],
        [-0.0008,  0.0120,  0.0155,  ...,  0.2365,  0.1593,  0.1225],
        [ 0.0179,  0.0101, -0.0260,  ...,  0.1338,  0.2544, -0.0588]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

TPinv
tensor([[ -4.9161,   5.9537,   2.7182,  ...,   4.1568,  -2.7481,  -8.0070],
        [  5.9537,  -5.5542,  -3.1678,  ...,  -3.8015,   2.9782,   9.4465],
        [  2.7182,  -3.1678,  -1.2544,  ...,  -2.1345,   2.0297,   4.5770],
        ...,
        [  4.1568,  -3.8015,  -2.1345,  ...,  -3.4069,   2.4905,   5.9694],
        [ -2.7481,   2.9782,   2.0297,  ...,   2.4905,  -2.0253,  -4.4939],
        [ -8.0070,   9.4465,   4.5770,  ...,   5.9694,  -4.4939, -11.8265]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

Gc
tensor([[ 1.0000e+00,  2.7777e+00, -1.7945e-01,  ..., -3.2559e+00,
         -3.6448e+00,  4.6346e+00],
        [ 1.5616e-15, -2.3640e+00,  6.4414e-01,  ...,  4.0901e+00,
          5.4066e+00, -4.7127e+00],
        [ 2.9946e-16, -1.5359e+00,  1.1312e+00,  ...,  2.0328e+00,
          2.7978e+00, -2.6877e+00],
        ...,
        [ 8.9481e-16, -2.3487e+00,  4.6941e-01,  ...,  2.8196e+00,
          3.3972e+00, -3.5952e+00],
        [-9.8266e-16,  1.5527e+00, -1.9050e-01,  ..., -1.7570e+00,
         -2.2802e+00,  2.6979e+00],
        [-2.1649e-15,  4.5242e+00, -3.5683e-01,  ..., -4.8480e+00,
         -6.1388e+00,  7.0522e+00]], dtype=torch.float64)
--------------------------------------------------------------------------------

W
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4542,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6785],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4542,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6785,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

B
tensor([[ 10.7586],
        [ 20.5560],
        [ 11.3920],
        [  5.4800],
        [  0.6496],
        [ 14.6299],
        [ 14.0854],
        [ 14.5036],
        [-12.1793],
        [ -3.0769],
        [  3.2089],
        [ -4.3519],
        [  7.1898],
        [ -3.6864],
        [ -7.9911],
        [  3.8274],
        [  9.8354],
        [  3.6934],
        [  0.0433],
        [ -1.6509],
        [  4.8316],
        [  9.5520],
        [  6.1784],
        [  7.3607],
        [  9.9529],
        [  5.0425],
        [  6.3686],
        [  8.4693],
        [  1.3802],
        [  6.7504],
        [  4.2149],
        [ -5.9229],
        [  5.7597],
        [  0.9887],
        [ -3.8856],
        [  3.9671],
        [  5.9076],
        [  2.6049],
        [  6.2498],
        [ -0.3907],
        [ -0.2793],
        [ -2.4224],
        [  8.1874],
        [  2.9145],
        [  7.2522],
        [ -0.3549],
        [  9.3438],
        [  7.0723],
        [  9.2682],
        [  9.6348]], dtype=torch.float64)
--------------------------------------------------------------------------------

activationC
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

activationC_prev
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

activation
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

activation_prev
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInpC
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInpC_prev
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInp
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInp_prev
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

Wc
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4541,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6786],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4541,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6786,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bc
tensor([[3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [4.0502],
        [5.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [5.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [5.0502]], dtype=torch.float64)
--------------------------------------------------------------------------------

bowl
Bowl object with strength 6.00037441725961 and center tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_bC
tensor([[3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_bS
tensor([[ 10.6929],
        [ 20.9403],
        [ 11.3235],
        [  5.0165],
        [  0.1661],
        [ 14.5674],
        [ 14.0307],
        [ 14.4172],
        [-12.2736],
        [ -3.4555],
        [  3.3850],
        [ -4.8842],
        [  7.1936],
        [ -3.1480],
        [ -7.4129],
        [  3.8706],
        [  9.7716],
        [  3.7638],
        [  0.1159],
        [ -1.1744],
        [  5.0665],
        [ 10.0505],
        [  5.7484],
        [  6.3710],
        [  8.9821],
        [  4.7988],
        [  5.7739],
        [  8.1718],
        [  1.0402],
        [  6.0797],
        [  4.3499],
        [ -5.9968],
        [  5.6423],
        [  0.9293],
        [ -3.9240],
        [  3.9169],
        [  5.7179],
        [  2.5507],
        [  6.1847],
        [ -0.3865],
        [  1.0263],
        [ -3.4800],
        [  7.1764],
        [  2.8238],
        [  7.3749],
        [ -0.7545],
        [  7.6535],
        [  6.6588],
        [  8.7625],
        [ 10.0454]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_WC
tensor([[-6.1004, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [-0.0000, -6.1004, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [-0.0000, -0.0000, -6.1004,  ..., -0.0000, -0.0000, -0.0000],
        ...,
        [-0.0000, -0.0000, -0.0000,  ..., -6.1004, -0.0000, -0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -6.1004, -0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -6.1004]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_WS
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4541,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6785],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4541,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6785,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

state
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inp_s
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inp_c
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inputNames
['b-bh-u-dh-d', 'b-u-dh-d']
--------------------------------------------------------------------------------

nStimuli
2
--------------------------------------------------------------------------------

LV_inhM
tensor([[-0., -2., -2., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -0., -2., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -0., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -0., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -0., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -0., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -0., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -0., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -2., -0., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -2., -2., -0.]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

LV_c
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

LV_s
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

final_TPStates
{'b-bh-u-dh-d/0': 0, 'b-bh-u-dh-d/1': 0, 'b-bh-u-dh-d/2': 0, 'b-bh-u-dh-d/3': 0, 'b-bh-u-dh-d/4': 0, 'b-u-dh-d/0': 0, 'b-u-dh-d/1': 0, 'b-u-dh-d/2': 0, 'b-u-dh-d/3': 0, 'b-u-dh-d/4': 0}
--------------------------------------------------------------------------------

final_TPnum
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

reaction_times
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

divergence
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

bowl
######################### BOWL PARAMETER#########################
--------------------------------------------------------------------------------

Net
GSC Network
--------------------------------------------------------------------------------

center
tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64)
--------------------------------------------------------------------------------

strength
tensor(6.0004, dtype=torch.float64)
--------------------------------------------------------------------------------

lambda_value
0.11
--------------------------------------------------------------------------------

default_settings
######################### DEFAULT SETTINGS#########################
--------------------------------------------------------------------------------

grammar
Harmonic Grammar with 10 fillers and 5 roles
--------------------------------------------------------------------------------

R
tensor([[ 0.9002, -0.0538,  0.3926,  0.1191, -0.1356],
        [ 0.3555,  0.5622, -0.4737, -0.3424,  0.4647],
        [-0.2267,  0.3059,  0.7724, -0.1377,  0.4893],
        [-0.0977,  0.7372,  0.0251,  0.5397, -0.3939],
        [ 0.0482, -0.2099, -0.1554,  0.7472,  0.6092]])
--------------------------------------------------------------------------------

F
tensor([[-7.0986e-02, -2.6429e-01,  4.6262e-01,  1.8267e-01, -2.7734e-02,
          2.3468e-01,  3.2670e-01,  4.3932e-01,  3.1227e-01, -4.7397e-01],
        [ 3.6338e-01,  3.6867e-01, -4.0908e-02,  6.7202e-02, -5.0889e-01,
          4.5241e-01,  1.7974e-01,  3.2570e-01, -1.0650e-01,  3.3538e-01],
        [ 7.5341e-02, -3.2721e-01, -2.5580e-02,  5.3630e-01, -1.6480e-01,
          2.1286e-02, -2.9072e-01, -1.6779e-01,  5.5755e-01,  3.8451e-01],
        [ 4.4390e-01, -2.3043e-01,  2.2972e-01,  1.2317e-01,  5.3283e-01,
          4.7173e-01,  2.1955e-02, -2.6956e-01, -3.0335e-01,  1.0151e-01],
        [-3.7975e-01,  3.1492e-01, -6.0176e-02,  6.8578e-01,  2.7398e-01,
         -5.3716e-03, -1.1602e-01,  2.8084e-01, -3.3859e-01,  2.5421e-02],
        [ 4.0148e-01,  2.0372e-01,  5.2408e-01,  1.6365e-01,  4.3967e-03,
         -6.6063e-01,  1.7713e-01, -4.3401e-04, -5.7710e-02,  1.5718e-01],
        [-2.8887e-01, -3.9345e-01, -2.8399e-02, -1.8428e-01,  1.8854e-01,
         -9.5572e-02,  4.1174e-01,  3.2241e-01, -8.2126e-02,  6.3410e-01],
        [-3.6404e-01,  4.8209e-01,  2.4070e-01, -3.2812e-02,  1.3351e-01,
          2.2174e-01,  3.7738e-01, -4.6734e-01,  3.4747e-01,  1.6584e-01],
        [-1.7443e-02,  2.4908e-01,  3.2161e-01, -3.5380e-01,  3.0546e-01,
          1.0286e-01, -5.8793e-01,  3.8814e-01,  2.6151e-01,  2.0114e-01],
        [ 3.7219e-01,  2.1011e-01, -5.3891e-01,  4.5242e-02,  4.5545e-01,
         -1.0921e-01,  2.7116e-01,  2.1959e-01,  4.1764e-01, -9.6586e-02]])
--------------------------------------------------------------------------------

nSym
50
--------------------------------------------------------------------------------

filler2index
{'bh': 0, 'b': 1, 'u': 2, 'd': 3, 'dh': 4, 'p': 5, '-': 6, 'c': 7, 'a': 8, '#': 9}
--------------------------------------------------------------------------------

index2filler
{0: 'bh', 1: 'b', 2: 'u', 3: 'd', 4: 'dh', 5: 'p', 6: '-', 7: 'c', 8: 'a', 9: '#'}
--------------------------------------------------------------------------------

role2index
{'s1': 0, 's2': 1, 's3': 2, 's4': 3, 's5': 4}
--------------------------------------------------------------------------------

index2role
{0: 's1', 1: 's2', 2: 's3', 3: 's4', 4: 's5'}
--------------------------------------------------------------------------------

bind2index
{'bh/s1': 0, 'b/s1': 1, 'u/s1': 2, 'd/s1': 3, 'dh/s1': 4, 'p/s1': 5, '-/s1': 6, 'c/s1': 7, 'a/s1': 8, '#/s1': 9, 'bh/s2': 10, 'b/s2': 11, 'u/s2': 12, 'd/s2': 13, 'dh/s2': 14, 'p/s2': 15, '-/s2': 16, 'c/s2': 17, 'a/s2': 18, '#/s2': 19, 'bh/s3': 20, 'b/s3': 21, 'u/s3': 22, 'd/s3': 23, 'dh/s3': 24, 'p/s3': 25, '-/s3': 26, 'c/s3': 27, 'a/s3': 28, '#/s3': 29, 'bh/s4': 30, 'b/s4': 31, 'u/s4': 32, 'd/s4': 33, 'dh/s4': 34, 'p/s4': 35, '-/s4': 36, 'c/s4': 37, 'a/s4': 38, '#/s4': 39, 'bh/s5': 40, 'b/s5': 41, 'u/s5': 42, 'd/s5': 43, 'dh/s5': 44, 'p/s5': 45, '-/s5': 46, 'c/s5': 47, 'a/s5': 48, '#/s5': 49}
--------------------------------------------------------------------------------

index2bind
{0: 'bh/s1', 1: 'b/s1', 2: 'u/s1', 3: 'd/s1', 4: 'dh/s1', 5: 'p/s1', 6: '-/s1', 7: 'c/s1', 8: 'a/s1', 9: '#/s1', 10: 'bh/s2', 11: 'b/s2', 12: 'u/s2', 13: 'd/s2', 14: 'dh/s2', 15: 'p/s2', 16: '-/s2', 17: 'c/s2', 18: 'a/s2', 19: '#/s2', 20: 'bh/s3', 21: 'b/s3', 22: 'u/s3', 23: 'd/s3', 24: 'dh/s3', 25: 'p/s3', 26: '-/s3', 27: 'c/s3', 28: 'a/s3', 29: '#/s3', 30: 'bh/s4', 31: 'b/s4', 32: 'u/s4', 33: 'd/s4', 34: 'dh/s4', 35: 'p/s4', 36: '-/s4', 37: 'c/s4', 38: 'a/s4', 39: '#/s4', 40: 'bh/s5', 41: 'b/s5', 42: 'u/s5', 43: 'd/s5', 44: 'dh/s5', 45: 'p/s5', 46: '-/s5', 47: 'c/s5', 48: 'a/s5', 49: '#/s5'}
--------------------------------------------------------------------------------

settings
{'maxInp': 1, 'epochs': 5, 'timeStep': 0.0001, 'tgtStd': 0.00125, 'TInit': -1, 'TMin': 0, 'TdecayRate': 0.05, 'lambdaInit': 0.11, 'lambdaMin': 0.01, 'lambdaDecayRate': 0.75, 'maxSteps': 60000, 'emaSpeedTol': 0.002, 'emaFactor': 0.05, 'diary': False, 'printInterval': 3000, 'saveFile': 'Simulations/grassman.txt', 'summary_file': 'data/summary.txt', 'initStateMean': tensor([[0.1000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.1000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.1000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.1000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]), 'initStateStdev': 0.025, 'clamped': False}
--------------------------------------------------------------------------------

vars
{'var_names': ['Activation', 'Harmony', 'H0', 'Q', 'q', 'Temp', 'time', 'ema_speed', 'speed'], 'T_init': -1, 'T_min': 0.0, 'T_decay_rate': 0.001, 'q_init': 2, 'q_max': 200.0, 'q_rate': 10.0, 'bowl_center': tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64), 'bowl_strength': tensor(6.1004, dtype=torch.float64), 'beta_min_offset': 0.1, 'max_dt': 0.01, 'min_dt': 0.0005, 'dt': 0.001, 's_trace': None, 'prev_s': None, 'Harmony_trace': None, 'speed_trace': None, 'ema_trace': None, 'lambda_trace': None, 'time_trace': None, 'TP_trace': None, 'TPnum_trace': None, 'TP_h_trace': None, 'TP_dist_trace': None, 'zeta_bowl': tensor([[0.6854],
        [0.8779],
        [0.3661],
        [0.6855],
        [0.4163],
        [0.5580],
        [0.2959],
        [0.6752],
        [0.5322],
        [0.7620],
        [0.3175],
        [0.4067],
        [0.1696],
        [0.3175],
        [0.1928],
        [0.2585],
        [0.1371],
        [0.3127],
        [0.2465],
        [0.3530],
        [0.6746],
        [0.8640],
        [0.3603],
        [0.6747],
        [0.4097],
        [0.5492],
        [0.2912],
        [0.6645],
        [0.5238],
        [0.7500],
        [0.4543],
        [0.5819],
        [0.2427],
        [0.4544],
        [0.2760],
        [0.3699],
        [0.1962],
        [0.4476],
        [0.3528],
        [0.5052],
        [0.5827],
        [0.7464],
        [0.3112],
        [0.5828],
        [0.3539],
        [0.4744],
        [0.2516],
        [0.5740],
        [0.4525],
        [0.6479]], dtype=torch.float64), 'lambda_rec': tensor(0.1111, dtype=torch.float64), 'lambdaInit': 0.11, 'T_rec': tensor(9.5315e-06, dtype=torch.float64), 'T': 0, 'lambda': 0}
--------------------------------------------------------------------------------

Hc
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0.],
        [0., 0., 2., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 2., 2.]])
--------------------------------------------------------------------------------

Hcc
tensor([[[[ 0.,  0.,  0.,  0.,  0.],
          [-5.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[-5.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        ...,


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]]])
--------------------------------------------------------------------------------

stimuli
tensor([[[0.7000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.8000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]])
--------------------------------------------------------------------------------

extData_path
data/inp_pandas.csv
--------------------------------------------------------------------------------

TP
tensor([[-0.0639, -0.2379,  0.4164,  ..., -0.0596, -0.0424,  0.0643],
        [ 0.3271,  0.3319, -0.0368,  ..., -0.0442,  0.0144, -0.0455],
        [ 0.0678, -0.2946, -0.0230,  ...,  0.0228, -0.0756, -0.0522],
        ...,
        [-0.0175,  0.0232,  0.0116,  ..., -0.2847,  0.2117,  0.1010],
        [-0.0008,  0.0120,  0.0155,  ...,  0.2365,  0.1593,  0.1225],
        [ 0.0179,  0.0101, -0.0260,  ...,  0.1338,  0.2544, -0.0588]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

TPinv
tensor([[ -4.9161,   5.9537,   2.7182,  ...,   4.1568,  -2.7481,  -8.0070],
        [  5.9537,  -5.5542,  -3.1678,  ...,  -3.8015,   2.9782,   9.4465],
        [  2.7182,  -3.1678,  -1.2544,  ...,  -2.1345,   2.0297,   4.5770],
        ...,
        [  4.1568,  -3.8015,  -2.1345,  ...,  -3.4069,   2.4905,   5.9694],
        [ -2.7481,   2.9782,   2.0297,  ...,   2.4905,  -2.0253,  -4.4939],
        [ -8.0070,   9.4465,   4.5770,  ...,   5.9694,  -4.4939, -11.8265]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

Gc
tensor([[ 1.0000e+00,  2.7777e+00, -1.7945e-01,  ..., -3.2559e+00,
         -3.6448e+00,  4.6346e+00],
        [ 1.5616e-15, -2.3640e+00,  6.4414e-01,  ...,  4.0901e+00,
          5.4066e+00, -4.7127e+00],
        [ 2.9946e-16, -1.5359e+00,  1.1312e+00,  ...,  2.0328e+00,
          2.7978e+00, -2.6877e+00],
        ...,
        [ 8.9481e-16, -2.3487e+00,  4.6941e-01,  ...,  2.8196e+00,
          3.3972e+00, -3.5952e+00],
        [-9.8266e-16,  1.5527e+00, -1.9050e-01,  ..., -1.7570e+00,
         -2.2802e+00,  2.6979e+00],
        [-2.1649e-15,  4.5242e+00, -3.5683e-01,  ..., -4.8480e+00,
         -6.1388e+00,  7.0522e+00]], dtype=torch.float64)
--------------------------------------------------------------------------------

W
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4542,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6785],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4542,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6785,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

B
tensor([[ 10.7586],
        [ 20.5560],
        [ 11.3920],
        [  5.4800],
        [  0.6496],
        [ 14.6299],
        [ 14.0854],
        [ 14.5036],
        [-12.1793],
        [ -3.0769],
        [  3.2089],
        [ -4.3519],
        [  7.1898],
        [ -3.6864],
        [ -7.9911],
        [  3.8274],
        [  9.8354],
        [  3.6934],
        [  0.0433],
        [ -1.6509],
        [  4.8316],
        [  9.5520],
        [  6.1784],
        [  7.3607],
        [  9.9529],
        [  5.0425],
        [  6.3686],
        [  8.4693],
        [  1.3802],
        [  6.7504],
        [  4.2149],
        [ -5.9229],
        [  5.7597],
        [  0.9887],
        [ -3.8856],
        [  3.9671],
        [  5.9076],
        [  2.6049],
        [  6.2498],
        [ -0.3907],
        [ -0.2793],
        [ -2.4224],
        [  8.1874],
        [  2.9145],
        [  7.2522],
        [ -0.3549],
        [  9.3438],
        [  7.0723],
        [  9.2682],
        [  9.6348]], dtype=torch.float64)
--------------------------------------------------------------------------------

activationC
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

activationC_prev
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

activation
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

activation_prev
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInpC
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInpC_prev
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInp
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInp_prev
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

Wc
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4541,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6786],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4541,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6786,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bc
tensor([[3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [4.0502],
        [5.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [5.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [5.0502]], dtype=torch.float64)
--------------------------------------------------------------------------------

bowl
Bowl object with strength 6.00037441725961 and center tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_bC
tensor([[3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_bS
tensor([[ 10.6929],
        [ 20.9403],
        [ 11.3235],
        [  5.0165],
        [  0.1661],
        [ 14.5674],
        [ 14.0307],
        [ 14.4172],
        [-12.2736],
        [ -3.4555],
        [  3.3850],
        [ -4.8842],
        [  7.1936],
        [ -3.1480],
        [ -7.4129],
        [  3.8706],
        [  9.7716],
        [  3.7638],
        [  0.1159],
        [ -1.1744],
        [  5.0665],
        [ 10.0505],
        [  5.7484],
        [  6.3710],
        [  8.9821],
        [  4.7988],
        [  5.7739],
        [  8.1718],
        [  1.0402],
        [  6.0797],
        [  4.3499],
        [ -5.9968],
        [  5.6423],
        [  0.9293],
        [ -3.9240],
        [  3.9169],
        [  5.7179],
        [  2.5507],
        [  6.1847],
        [ -0.3865],
        [  1.0263],
        [ -3.4800],
        [  7.1764],
        [  2.8238],
        [  7.3749],
        [ -0.7545],
        [  7.6535],
        [  6.6588],
        [  8.7625],
        [ 10.0454]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_WC
tensor([[-6.1004, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [-0.0000, -6.1004, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [-0.0000, -0.0000, -6.1004,  ..., -0.0000, -0.0000, -0.0000],
        ...,
        [-0.0000, -0.0000, -0.0000,  ..., -6.1004, -0.0000, -0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -6.1004, -0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -6.1004]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_WS
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4541,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6785],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4541,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6785,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

state
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inp_s
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inp_c
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inputNames
['b-bh-u-dh-d', 'b-u-dh-d']
--------------------------------------------------------------------------------

nStimuli
2
--------------------------------------------------------------------------------

LV_inhM
tensor([[-0., -2., -2., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -0., -2., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -0., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -0., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -0., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -0., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -0., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -0., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -2., -0., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -2., -2., -0.]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

LV_c
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

LV_s
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

final_TPStates
{'b-bh-u-dh-d/0': 0, 'b-bh-u-dh-d/1': 0, 'b-bh-u-dh-d/2': 0, 'b-bh-u-dh-d/3': 0, 'b-bh-u-dh-d/4': 0, 'b-u-dh-d/0': 0, 'b-u-dh-d/1': 0, 'b-u-dh-d/2': 0, 'b-u-dh-d/3': 0, 'b-u-dh-d/4': 0}
--------------------------------------------------------------------------------

final_TPnum
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

reaction_times
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

divergence
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

bowl
######################### BOWL PARAMETER#########################
--------------------------------------------------------------------------------

Net
GSC Network
--------------------------------------------------------------------------------

center
tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64)
--------------------------------------------------------------------------------

strength
tensor(6.0004, dtype=torch.float64)
--------------------------------------------------------------------------------

lambda_value
0.11
--------------------------------------------------------------------------------

default_settings
######################### DEFAULT SETTINGS#########################
--------------------------------------------------------------------------------

grammar
Harmonic Grammar with 10 fillers and 5 roles
--------------------------------------------------------------------------------

R
tensor([[ 0.9002, -0.0538,  0.3926,  0.1191, -0.1356],
        [ 0.3555,  0.5622, -0.4737, -0.3424,  0.4647],
        [-0.2267,  0.3059,  0.7724, -0.1377,  0.4893],
        [-0.0977,  0.7372,  0.0251,  0.5397, -0.3939],
        [ 0.0482, -0.2099, -0.1554,  0.7472,  0.6092]])
--------------------------------------------------------------------------------

F
tensor([[-7.0986e-02, -2.6429e-01,  4.6262e-01,  1.8267e-01, -2.7734e-02,
          2.3468e-01,  3.2670e-01,  4.3932e-01,  3.1227e-01, -4.7397e-01],
        [ 3.6338e-01,  3.6867e-01, -4.0908e-02,  6.7202e-02, -5.0889e-01,
          4.5241e-01,  1.7974e-01,  3.2570e-01, -1.0650e-01,  3.3538e-01],
        [ 7.5341e-02, -3.2721e-01, -2.5580e-02,  5.3630e-01, -1.6480e-01,
          2.1286e-02, -2.9072e-01, -1.6779e-01,  5.5755e-01,  3.8451e-01],
        [ 4.4390e-01, -2.3043e-01,  2.2972e-01,  1.2317e-01,  5.3283e-01,
          4.7173e-01,  2.1955e-02, -2.6956e-01, -3.0335e-01,  1.0151e-01],
        [-3.7975e-01,  3.1492e-01, -6.0176e-02,  6.8578e-01,  2.7398e-01,
         -5.3716e-03, -1.1602e-01,  2.8084e-01, -3.3859e-01,  2.5421e-02],
        [ 4.0148e-01,  2.0372e-01,  5.2408e-01,  1.6365e-01,  4.3967e-03,
         -6.6063e-01,  1.7713e-01, -4.3401e-04, -5.7710e-02,  1.5718e-01],
        [-2.8887e-01, -3.9345e-01, -2.8399e-02, -1.8428e-01,  1.8854e-01,
         -9.5572e-02,  4.1174e-01,  3.2241e-01, -8.2126e-02,  6.3410e-01],
        [-3.6404e-01,  4.8209e-01,  2.4070e-01, -3.2812e-02,  1.3351e-01,
          2.2174e-01,  3.7738e-01, -4.6734e-01,  3.4747e-01,  1.6584e-01],
        [-1.7443e-02,  2.4908e-01,  3.2161e-01, -3.5380e-01,  3.0546e-01,
          1.0286e-01, -5.8793e-01,  3.8814e-01,  2.6151e-01,  2.0114e-01],
        [ 3.7219e-01,  2.1011e-01, -5.3891e-01,  4.5242e-02,  4.5545e-01,
         -1.0921e-01,  2.7116e-01,  2.1959e-01,  4.1764e-01, -9.6586e-02]])
--------------------------------------------------------------------------------

nSym
50
--------------------------------------------------------------------------------

filler2index
{'bh': 0, 'b': 1, 'u': 2, 'd': 3, 'dh': 4, 'p': 5, '-': 6, 'c': 7, 'a': 8, '#': 9}
--------------------------------------------------------------------------------

index2filler
{0: 'bh', 1: 'b', 2: 'u', 3: 'd', 4: 'dh', 5: 'p', 6: '-', 7: 'c', 8: 'a', 9: '#'}
--------------------------------------------------------------------------------

role2index
{'s1': 0, 's2': 1, 's3': 2, 's4': 3, 's5': 4}
--------------------------------------------------------------------------------

index2role
{0: 's1', 1: 's2', 2: 's3', 3: 's4', 4: 's5'}
--------------------------------------------------------------------------------

bind2index
{'bh/s1': 0, 'b/s1': 1, 'u/s1': 2, 'd/s1': 3, 'dh/s1': 4, 'p/s1': 5, '-/s1': 6, 'c/s1': 7, 'a/s1': 8, '#/s1': 9, 'bh/s2': 10, 'b/s2': 11, 'u/s2': 12, 'd/s2': 13, 'dh/s2': 14, 'p/s2': 15, '-/s2': 16, 'c/s2': 17, 'a/s2': 18, '#/s2': 19, 'bh/s3': 20, 'b/s3': 21, 'u/s3': 22, 'd/s3': 23, 'dh/s3': 24, 'p/s3': 25, '-/s3': 26, 'c/s3': 27, 'a/s3': 28, '#/s3': 29, 'bh/s4': 30, 'b/s4': 31, 'u/s4': 32, 'd/s4': 33, 'dh/s4': 34, 'p/s4': 35, '-/s4': 36, 'c/s4': 37, 'a/s4': 38, '#/s4': 39, 'bh/s5': 40, 'b/s5': 41, 'u/s5': 42, 'd/s5': 43, 'dh/s5': 44, 'p/s5': 45, '-/s5': 46, 'c/s5': 47, 'a/s5': 48, '#/s5': 49}
--------------------------------------------------------------------------------

index2bind
{0: 'bh/s1', 1: 'b/s1', 2: 'u/s1', 3: 'd/s1', 4: 'dh/s1', 5: 'p/s1', 6: '-/s1', 7: 'c/s1', 8: 'a/s1', 9: '#/s1', 10: 'bh/s2', 11: 'b/s2', 12: 'u/s2', 13: 'd/s2', 14: 'dh/s2', 15: 'p/s2', 16: '-/s2', 17: 'c/s2', 18: 'a/s2', 19: '#/s2', 20: 'bh/s3', 21: 'b/s3', 22: 'u/s3', 23: 'd/s3', 24: 'dh/s3', 25: 'p/s3', 26: '-/s3', 27: 'c/s3', 28: 'a/s3', 29: '#/s3', 30: 'bh/s4', 31: 'b/s4', 32: 'u/s4', 33: 'd/s4', 34: 'dh/s4', 35: 'p/s4', 36: '-/s4', 37: 'c/s4', 38: 'a/s4', 39: '#/s4', 40: 'bh/s5', 41: 'b/s5', 42: 'u/s5', 43: 'd/s5', 44: 'dh/s5', 45: 'p/s5', 46: '-/s5', 47: 'c/s5', 48: 'a/s5', 49: '#/s5'}
--------------------------------------------------------------------------------

settings
{'maxInp': 1, 'epochs': 5, 'timeStep': 0.0001, 'tgtStd': 0.00125, 'TInit': -1, 'TMin': 0, 'TdecayRate': 0.05, 'lambdaInit': 0.11, 'lambdaMin': 0.01, 'lambdaDecayRate': 0.75, 'maxSteps': 60000, 'emaSpeedTol': 0.002, 'emaFactor': 0.05, 'diary': False, 'printInterval': 3000, 'saveFile': 'Simulations/grassman.txt', 'summary_file': 'data/summary.txt', 'initStateMean': tensor([[0.1000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.1000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.1000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.1000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]), 'initStateStdev': 0.025, 'clamped': False}
--------------------------------------------------------------------------------

vars
{'var_names': ['Activation', 'Harmony', 'H0', 'Q', 'q', 'Temp', 'time', 'ema_speed', 'speed'], 'T_init': -1, 'T_min': 0.0, 'T_decay_rate': 0.001, 'q_init': 2, 'q_max': 200.0, 'q_rate': 10.0, 'bowl_center': tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64), 'bowl_strength': tensor(6.1004, dtype=torch.float64), 'beta_min_offset': 0.1, 'max_dt': 0.01, 'min_dt': 0.0005, 'dt': 0.001, 's_trace': None, 'prev_s': None, 'Harmony_trace': None, 'speed_trace': None, 'ema_trace': None, 'lambda_trace': None, 'time_trace': None, 'TP_trace': None, 'TPnum_trace': None, 'TP_h_trace': None, 'TP_dist_trace': None, 'zeta_bowl': tensor([[0.6854],
        [0.8779],
        [0.3661],
        [0.6855],
        [0.4163],
        [0.5580],
        [0.2959],
        [0.6752],
        [0.5322],
        [0.7620],
        [0.3175],
        [0.4067],
        [0.1696],
        [0.3175],
        [0.1928],
        [0.2585],
        [0.1371],
        [0.3127],
        [0.2465],
        [0.3530],
        [0.6746],
        [0.8640],
        [0.3603],
        [0.6747],
        [0.4097],
        [0.5492],
        [0.2912],
        [0.6645],
        [0.5238],
        [0.7500],
        [0.4543],
        [0.5819],
        [0.2427],
        [0.4544],
        [0.2760],
        [0.3699],
        [0.1962],
        [0.4476],
        [0.3528],
        [0.5052],
        [0.5827],
        [0.7464],
        [0.3112],
        [0.5828],
        [0.3539],
        [0.4744],
        [0.2516],
        [0.5740],
        [0.4525],
        [0.6479]], dtype=torch.float64), 'lambda_rec': tensor(0.1111, dtype=torch.float64), 'lambdaInit': 0.11, 'T_rec': tensor(9.5315e-06, dtype=torch.float64), 'T': 0, 'lambda': 0}
--------------------------------------------------------------------------------

Hc
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0.],
        [0., 0., 2., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 2., 2.]])
--------------------------------------------------------------------------------

Hcc
tensor([[[[ 0.,  0.,  0.,  0.,  0.],
          [-5.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[-5.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        ...,


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]]])
--------------------------------------------------------------------------------

stimuli
tensor([[[0.7000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.8000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]])
--------------------------------------------------------------------------------

extData_path
data/inp_pandas.csv
--------------------------------------------------------------------------------

TP
tensor([[-0.0639, -0.2379,  0.4164,  ..., -0.0596, -0.0424,  0.0643],
        [ 0.3271,  0.3319, -0.0368,  ..., -0.0442,  0.0144, -0.0455],
        [ 0.0678, -0.2946, -0.0230,  ...,  0.0228, -0.0756, -0.0522],
        ...,
        [-0.0175,  0.0232,  0.0116,  ..., -0.2847,  0.2117,  0.1010],
        [-0.0008,  0.0120,  0.0155,  ...,  0.2365,  0.1593,  0.1225],
        [ 0.0179,  0.0101, -0.0260,  ...,  0.1338,  0.2544, -0.0588]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

TPinv
tensor([[ -4.9161,   5.9537,   2.7182,  ...,   4.1568,  -2.7481,  -8.0070],
        [  5.9537,  -5.5542,  -3.1678,  ...,  -3.8015,   2.9782,   9.4465],
        [  2.7182,  -3.1678,  -1.2544,  ...,  -2.1345,   2.0297,   4.5770],
        ...,
        [  4.1568,  -3.8015,  -2.1345,  ...,  -3.4069,   2.4905,   5.9694],
        [ -2.7481,   2.9782,   2.0297,  ...,   2.4905,  -2.0253,  -4.4939],
        [ -8.0070,   9.4465,   4.5770,  ...,   5.9694,  -4.4939, -11.8265]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

Gc
tensor([[ 1.0000e+00,  2.7777e+00, -1.7945e-01,  ..., -3.2559e+00,
         -3.6448e+00,  4.6346e+00],
        [ 1.5616e-15, -2.3640e+00,  6.4414e-01,  ...,  4.0901e+00,
          5.4066e+00, -4.7127e+00],
        [ 2.9946e-16, -1.5359e+00,  1.1312e+00,  ...,  2.0328e+00,
          2.7978e+00, -2.6877e+00],
        ...,
        [ 8.9481e-16, -2.3487e+00,  4.6941e-01,  ...,  2.8196e+00,
          3.3972e+00, -3.5952e+00],
        [-9.8266e-16,  1.5527e+00, -1.9050e-01,  ..., -1.7570e+00,
         -2.2802e+00,  2.6979e+00],
        [-2.1649e-15,  4.5242e+00, -3.5683e-01,  ..., -4.8480e+00,
         -6.1388e+00,  7.0522e+00]], dtype=torch.float64)
--------------------------------------------------------------------------------

W
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4542,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6785],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4542,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6785,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

B
tensor([[ 10.7586],
        [ 20.5560],
        [ 11.3920],
        [  5.4800],
        [  0.6496],
        [ 14.6299],
        [ 14.0854],
        [ 14.5036],
        [-12.1793],
        [ -3.0769],
        [  3.2089],
        [ -4.3519],
        [  7.1898],
        [ -3.6864],
        [ -7.9911],
        [  3.8274],
        [  9.8354],
        [  3.6934],
        [  0.0433],
        [ -1.6509],
        [  4.8316],
        [  9.5520],
        [  6.1784],
        [  7.3607],
        [  9.9529],
        [  5.0425],
        [  6.3686],
        [  8.4693],
        [  1.3802],
        [  6.7504],
        [  4.2149],
        [ -5.9229],
        [  5.7597],
        [  0.9887],
        [ -3.8856],
        [  3.9671],
        [  5.9076],
        [  2.6049],
        [  6.2498],
        [ -0.3907],
        [ -0.2793],
        [ -2.4224],
        [  8.1874],
        [  2.9145],
        [  7.2522],
        [ -0.3549],
        [  9.3438],
        [  7.0723],
        [  9.2682],
        [  9.6348]], dtype=torch.float64)
--------------------------------------------------------------------------------

activationC
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

activationC_prev
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

activation
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

activation_prev
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInpC
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInpC_prev
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInp
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInp_prev
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

Wc
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4541,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6786],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4541,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6786,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bc
tensor([[3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [4.0502],
        [5.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [5.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [5.0502]], dtype=torch.float64)
--------------------------------------------------------------------------------

bowl
Bowl object with strength 6.00037441725961 and center tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_bC
tensor([[3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_bS
tensor([[ 10.6929],
        [ 20.9403],
        [ 11.3235],
        [  5.0165],
        [  0.1661],
        [ 14.5674],
        [ 14.0307],
        [ 14.4172],
        [-12.2736],
        [ -3.4555],
        [  3.3850],
        [ -4.8842],
        [  7.1936],
        [ -3.1480],
        [ -7.4129],
        [  3.8706],
        [  9.7716],
        [  3.7638],
        [  0.1159],
        [ -1.1744],
        [  5.0665],
        [ 10.0505],
        [  5.7484],
        [  6.3710],
        [  8.9821],
        [  4.7988],
        [  5.7739],
        [  8.1718],
        [  1.0402],
        [  6.0797],
        [  4.3499],
        [ -5.9968],
        [  5.6423],
        [  0.9293],
        [ -3.9240],
        [  3.9169],
        [  5.7179],
        [  2.5507],
        [  6.1847],
        [ -0.3865],
        [  1.0263],
        [ -3.4800],
        [  7.1764],
        [  2.8238],
        [  7.3749],
        [ -0.7545],
        [  7.6535],
        [  6.6588],
        [  8.7625],
        [ 10.0454]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_WC
tensor([[-6.1004, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [-0.0000, -6.1004, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [-0.0000, -0.0000, -6.1004,  ..., -0.0000, -0.0000, -0.0000],
        ...,
        [-0.0000, -0.0000, -0.0000,  ..., -6.1004, -0.0000, -0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -6.1004, -0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -6.1004]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_WS
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4541,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6785],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4541,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6785,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

state
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inp_s
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inp_c
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inputNames
['b-bh-u-dh-d', 'b-u-dh-d']
--------------------------------------------------------------------------------

nStimuli
2
--------------------------------------------------------------------------------

LV_inhM
tensor([[-0., -2., -2., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -0., -2., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -0., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -0., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -0., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -0., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -0., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -0., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -2., -0., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -2., -2., -0.]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

LV_c
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

LV_s
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

final_TPStates
{'b-bh-u-dh-d/0': 0, 'b-bh-u-dh-d/1': 0, 'b-bh-u-dh-d/2': 0, 'b-bh-u-dh-d/3': 0, 'b-bh-u-dh-d/4': 0, 'b-u-dh-d/0': 0, 'b-u-dh-d/1': 0, 'b-u-dh-d/2': 0, 'b-u-dh-d/3': 0, 'b-u-dh-d/4': 0}
--------------------------------------------------------------------------------

final_TPnum
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

reaction_times
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

divergence
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

bowl
######################### BOWL PARAMETER#########################
--------------------------------------------------------------------------------

Net
GSC Network
--------------------------------------------------------------------------------

center
tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64)
--------------------------------------------------------------------------------

strength
tensor(6.0004, dtype=torch.float64)
--------------------------------------------------------------------------------

lambda_value
0.11
--------------------------------------------------------------------------------

default_settings
######################### DEFAULT SETTINGS#########################
--------------------------------------------------------------------------------

grammar
Harmonic Grammar with 10 fillers and 5 roles
--------------------------------------------------------------------------------

R
tensor([[ 0.9002, -0.0538,  0.3926,  0.1191, -0.1356],
        [ 0.3555,  0.5622, -0.4737, -0.3424,  0.4647],
        [-0.2267,  0.3059,  0.7724, -0.1377,  0.4893],
        [-0.0977,  0.7372,  0.0251,  0.5397, -0.3939],
        [ 0.0482, -0.2099, -0.1554,  0.7472,  0.6092]])
--------------------------------------------------------------------------------

F
tensor([[-7.0986e-02, -2.6429e-01,  4.6262e-01,  1.8267e-01, -2.7734e-02,
          2.3468e-01,  3.2670e-01,  4.3932e-01,  3.1227e-01, -4.7397e-01],
        [ 3.6338e-01,  3.6867e-01, -4.0908e-02,  6.7202e-02, -5.0889e-01,
          4.5241e-01,  1.7974e-01,  3.2570e-01, -1.0650e-01,  3.3538e-01],
        [ 7.5341e-02, -3.2721e-01, -2.5580e-02,  5.3630e-01, -1.6480e-01,
          2.1286e-02, -2.9072e-01, -1.6779e-01,  5.5755e-01,  3.8451e-01],
        [ 4.4390e-01, -2.3043e-01,  2.2972e-01,  1.2317e-01,  5.3283e-01,
          4.7173e-01,  2.1955e-02, -2.6956e-01, -3.0335e-01,  1.0151e-01],
        [-3.7975e-01,  3.1492e-01, -6.0176e-02,  6.8578e-01,  2.7398e-01,
         -5.3716e-03, -1.1602e-01,  2.8084e-01, -3.3859e-01,  2.5421e-02],
        [ 4.0148e-01,  2.0372e-01,  5.2408e-01,  1.6365e-01,  4.3967e-03,
         -6.6063e-01,  1.7713e-01, -4.3401e-04, -5.7710e-02,  1.5718e-01],
        [-2.8887e-01, -3.9345e-01, -2.8399e-02, -1.8428e-01,  1.8854e-01,
         -9.5572e-02,  4.1174e-01,  3.2241e-01, -8.2126e-02,  6.3410e-01],
        [-3.6404e-01,  4.8209e-01,  2.4070e-01, -3.2812e-02,  1.3351e-01,
          2.2174e-01,  3.7738e-01, -4.6734e-01,  3.4747e-01,  1.6584e-01],
        [-1.7443e-02,  2.4908e-01,  3.2161e-01, -3.5380e-01,  3.0546e-01,
          1.0286e-01, -5.8793e-01,  3.8814e-01,  2.6151e-01,  2.0114e-01],
        [ 3.7219e-01,  2.1011e-01, -5.3891e-01,  4.5242e-02,  4.5545e-01,
         -1.0921e-01,  2.7116e-01,  2.1959e-01,  4.1764e-01, -9.6586e-02]])
--------------------------------------------------------------------------------

nSym
50
--------------------------------------------------------------------------------

filler2index
{'bh': 0, 'b': 1, 'u': 2, 'd': 3, 'dh': 4, 'p': 5, '-': 6, 'c': 7, 'a': 8, '#': 9}
--------------------------------------------------------------------------------

index2filler
{0: 'bh', 1: 'b', 2: 'u', 3: 'd', 4: 'dh', 5: 'p', 6: '-', 7: 'c', 8: 'a', 9: '#'}
--------------------------------------------------------------------------------

role2index
{'s1': 0, 's2': 1, 's3': 2, 's4': 3, 's5': 4}
--------------------------------------------------------------------------------

index2role
{0: 's1', 1: 's2', 2: 's3', 3: 's4', 4: 's5'}
--------------------------------------------------------------------------------

bind2index
{'bh/s1': 0, 'b/s1': 1, 'u/s1': 2, 'd/s1': 3, 'dh/s1': 4, 'p/s1': 5, '-/s1': 6, 'c/s1': 7, 'a/s1': 8, '#/s1': 9, 'bh/s2': 10, 'b/s2': 11, 'u/s2': 12, 'd/s2': 13, 'dh/s2': 14, 'p/s2': 15, '-/s2': 16, 'c/s2': 17, 'a/s2': 18, '#/s2': 19, 'bh/s3': 20, 'b/s3': 21, 'u/s3': 22, 'd/s3': 23, 'dh/s3': 24, 'p/s3': 25, '-/s3': 26, 'c/s3': 27, 'a/s3': 28, '#/s3': 29, 'bh/s4': 30, 'b/s4': 31, 'u/s4': 32, 'd/s4': 33, 'dh/s4': 34, 'p/s4': 35, '-/s4': 36, 'c/s4': 37, 'a/s4': 38, '#/s4': 39, 'bh/s5': 40, 'b/s5': 41, 'u/s5': 42, 'd/s5': 43, 'dh/s5': 44, 'p/s5': 45, '-/s5': 46, 'c/s5': 47, 'a/s5': 48, '#/s5': 49}
--------------------------------------------------------------------------------

index2bind
{0: 'bh/s1', 1: 'b/s1', 2: 'u/s1', 3: 'd/s1', 4: 'dh/s1', 5: 'p/s1', 6: '-/s1', 7: 'c/s1', 8: 'a/s1', 9: '#/s1', 10: 'bh/s2', 11: 'b/s2', 12: 'u/s2', 13: 'd/s2', 14: 'dh/s2', 15: 'p/s2', 16: '-/s2', 17: 'c/s2', 18: 'a/s2', 19: '#/s2', 20: 'bh/s3', 21: 'b/s3', 22: 'u/s3', 23: 'd/s3', 24: 'dh/s3', 25: 'p/s3', 26: '-/s3', 27: 'c/s3', 28: 'a/s3', 29: '#/s3', 30: 'bh/s4', 31: 'b/s4', 32: 'u/s4', 33: 'd/s4', 34: 'dh/s4', 35: 'p/s4', 36: '-/s4', 37: 'c/s4', 38: 'a/s4', 39: '#/s4', 40: 'bh/s5', 41: 'b/s5', 42: 'u/s5', 43: 'd/s5', 44: 'dh/s5', 45: 'p/s5', 46: '-/s5', 47: 'c/s5', 48: 'a/s5', 49: '#/s5'}
--------------------------------------------------------------------------------

settings
{'maxInp': 1, 'epochs': 5, 'timeStep': 0.0001, 'tgtStd': 0.00125, 'TInit': -1, 'TMin': 0, 'TdecayRate': 0.05, 'lambdaInit': 0.11, 'lambdaMin': 0.01, 'lambdaDecayRate': 0.75, 'maxSteps': 60000, 'emaSpeedTol': 0.002, 'emaFactor': 0.05, 'diary': False, 'printInterval': 3000, 'saveFile': 'Simulations/grassman.txt', 'summary_file': 'data/summary.txt', 'initStateMean': tensor([[0.1000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.1000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.1000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.1000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]), 'initStateStdev': 0.025, 'clamped': False}
--------------------------------------------------------------------------------

vars
{'var_names': ['Activation', 'Harmony', 'H0', 'Q', 'q', 'Temp', 'time', 'ema_speed', 'speed'], 'T_init': -1, 'T_min': 0.0, 'T_decay_rate': 0.001, 'q_init': 2, 'q_max': 200.0, 'q_rate': 10.0, 'bowl_center': tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64), 'bowl_strength': tensor(6.1004, dtype=torch.float64), 'beta_min_offset': 0.1, 'max_dt': 0.01, 'min_dt': 0.0005, 'dt': 0.001, 's_trace': None, 'prev_s': None, 'Harmony_trace': None, 'speed_trace': None, 'ema_trace': None, 'lambda_trace': None, 'time_trace': None, 'TP_trace': None, 'TPnum_trace': None, 'TP_h_trace': None, 'TP_dist_trace': None, 'zeta_bowl': tensor([[0.6854],
        [0.8779],
        [0.3661],
        [0.6855],
        [0.4163],
        [0.5580],
        [0.2959],
        [0.6752],
        [0.5322],
        [0.7620],
        [0.3175],
        [0.4067],
        [0.1696],
        [0.3175],
        [0.1928],
        [0.2585],
        [0.1371],
        [0.3127],
        [0.2465],
        [0.3530],
        [0.6746],
        [0.8640],
        [0.3603],
        [0.6747],
        [0.4097],
        [0.5492],
        [0.2912],
        [0.6645],
        [0.5238],
        [0.7500],
        [0.4543],
        [0.5819],
        [0.2427],
        [0.4544],
        [0.2760],
        [0.3699],
        [0.1962],
        [0.4476],
        [0.3528],
        [0.5052],
        [0.5827],
        [0.7464],
        [0.3112],
        [0.5828],
        [0.3539],
        [0.4744],
        [0.2516],
        [0.5740],
        [0.4525],
        [0.6479]], dtype=torch.float64), 'lambda_rec': tensor(0.1111, dtype=torch.float64), 'lambdaInit': 0.11, 'T_rec': tensor(9.5315e-06, dtype=torch.float64), 'T': 0, 'lambda': 0}
--------------------------------------------------------------------------------

Hc
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0.],
        [0., 0., 2., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 2., 2.]])
--------------------------------------------------------------------------------

Hcc
tensor([[[[ 0.,  0.,  0.,  0.,  0.],
          [-5.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[-5.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        ...,


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]]])
--------------------------------------------------------------------------------

stimuli
tensor([[[0.7000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.8000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]])
--------------------------------------------------------------------------------

extData_path
data/inp_pandas.csv
--------------------------------------------------------------------------------

TP
tensor([[-0.0639, -0.2379,  0.4164,  ..., -0.0596, -0.0424,  0.0643],
        [ 0.3271,  0.3319, -0.0368,  ..., -0.0442,  0.0144, -0.0455],
        [ 0.0678, -0.2946, -0.0230,  ...,  0.0228, -0.0756, -0.0522],
        ...,
        [-0.0175,  0.0232,  0.0116,  ..., -0.2847,  0.2117,  0.1010],
        [-0.0008,  0.0120,  0.0155,  ...,  0.2365,  0.1593,  0.1225],
        [ 0.0179,  0.0101, -0.0260,  ...,  0.1338,  0.2544, -0.0588]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

TPinv
tensor([[ -4.9161,   5.9537,   2.7182,  ...,   4.1568,  -2.7481,  -8.0070],
        [  5.9537,  -5.5542,  -3.1678,  ...,  -3.8015,   2.9782,   9.4465],
        [  2.7182,  -3.1678,  -1.2544,  ...,  -2.1345,   2.0297,   4.5770],
        ...,
        [  4.1568,  -3.8015,  -2.1345,  ...,  -3.4069,   2.4905,   5.9694],
        [ -2.7481,   2.9782,   2.0297,  ...,   2.4905,  -2.0253,  -4.4939],
        [ -8.0070,   9.4465,   4.5770,  ...,   5.9694,  -4.4939, -11.8265]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

Gc
tensor([[ 1.0000e+00,  2.7777e+00, -1.7945e-01,  ..., -3.2559e+00,
         -3.6448e+00,  4.6346e+00],
        [ 1.5616e-15, -2.3640e+00,  6.4414e-01,  ...,  4.0901e+00,
          5.4066e+00, -4.7127e+00],
        [ 2.9946e-16, -1.5359e+00,  1.1312e+00,  ...,  2.0328e+00,
          2.7978e+00, -2.6877e+00],
        ...,
        [ 8.9481e-16, -2.3487e+00,  4.6941e-01,  ...,  2.8196e+00,
          3.3972e+00, -3.5952e+00],
        [-9.8266e-16,  1.5527e+00, -1.9050e-01,  ..., -1.7570e+00,
         -2.2802e+00,  2.6979e+00],
        [-2.1649e-15,  4.5242e+00, -3.5683e-01,  ..., -4.8480e+00,
         -6.1388e+00,  7.0522e+00]], dtype=torch.float64)
--------------------------------------------------------------------------------

W
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4542,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6785],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4542,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6785,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

B
tensor([[ 10.7586],
        [ 20.5560],
        [ 11.3920],
        [  5.4800],
        [  0.6496],
        [ 14.6299],
        [ 14.0854],
        [ 14.5036],
        [-12.1793],
        [ -3.0769],
        [  3.2089],
        [ -4.3519],
        [  7.1898],
        [ -3.6864],
        [ -7.9911],
        [  3.8274],
        [  9.8354],
        [  3.6934],
        [  0.0433],
        [ -1.6509],
        [  4.8316],
        [  9.5520],
        [  6.1784],
        [  7.3607],
        [  9.9529],
        [  5.0425],
        [  6.3686],
        [  8.4693],
        [  1.3802],
        [  6.7504],
        [  4.2149],
        [ -5.9229],
        [  5.7597],
        [  0.9887],
        [ -3.8856],
        [  3.9671],
        [  5.9076],
        [  2.6049],
        [  6.2498],
        [ -0.3907],
        [ -0.2793],
        [ -2.4224],
        [  8.1874],
        [  2.9145],
        [  7.2522],
        [ -0.3549],
        [  9.3438],
        [  7.0723],
        [  9.2682],
        [  9.6348]], dtype=torch.float64)
--------------------------------------------------------------------------------

activationC
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

activationC_prev
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

activation
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

activation_prev
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInpC
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInpC_prev
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInp
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInp_prev
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

Wc
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4541,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6786],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4541,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6786,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bc
tensor([[3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [4.0502],
        [5.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [5.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [5.0502]], dtype=torch.float64)
--------------------------------------------------------------------------------

bowl
Bowl object with strength 6.00037441725961 and center tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_bC
tensor([[3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_bS
tensor([[ 10.6929],
        [ 20.9403],
        [ 11.3235],
        [  5.0165],
        [  0.1661],
        [ 14.5674],
        [ 14.0307],
        [ 14.4172],
        [-12.2736],
        [ -3.4555],
        [  3.3850],
        [ -4.8842],
        [  7.1936],
        [ -3.1480],
        [ -7.4129],
        [  3.8706],
        [  9.7716],
        [  3.7638],
        [  0.1159],
        [ -1.1744],
        [  5.0665],
        [ 10.0505],
        [  5.7484],
        [  6.3710],
        [  8.9821],
        [  4.7988],
        [  5.7739],
        [  8.1718],
        [  1.0402],
        [  6.0797],
        [  4.3499],
        [ -5.9968],
        [  5.6423],
        [  0.9293],
        [ -3.9240],
        [  3.9169],
        [  5.7179],
        [  2.5507],
        [  6.1847],
        [ -0.3865],
        [  1.0263],
        [ -3.4800],
        [  7.1764],
        [  2.8238],
        [  7.3749],
        [ -0.7545],
        [  7.6535],
        [  6.6588],
        [  8.7625],
        [ 10.0454]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_WC
tensor([[-6.1004, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [-0.0000, -6.1004, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [-0.0000, -0.0000, -6.1004,  ..., -0.0000, -0.0000, -0.0000],
        ...,
        [-0.0000, -0.0000, -0.0000,  ..., -6.1004, -0.0000, -0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -6.1004, -0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -6.1004]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_WS
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4541,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6785],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4541,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6785,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

state
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inp_s
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inp_c
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inputNames
['b-bh-u-dh-d', 'b-u-dh-d']
--------------------------------------------------------------------------------

nStimuli
2
--------------------------------------------------------------------------------

LV_inhM
tensor([[-0., -2., -2., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -0., -2., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -0., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -0., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -0., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -0., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -0., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -0., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -2., -0., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -2., -2., -0.]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

LV_c
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

LV_s
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

final_TPStates
{'b-bh-u-dh-d/0': 0, 'b-bh-u-dh-d/1': 0, 'b-bh-u-dh-d/2': 0, 'b-bh-u-dh-d/3': 0, 'b-bh-u-dh-d/4': 0, 'b-u-dh-d/0': 0, 'b-u-dh-d/1': 0, 'b-u-dh-d/2': 0, 'b-u-dh-d/3': 0, 'b-u-dh-d/4': 0}
--------------------------------------------------------------------------------

final_TPnum
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

reaction_times
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

divergence
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

bowl
######################### BOWL PARAMETER#########################
--------------------------------------------------------------------------------

Net
GSC Network
--------------------------------------------------------------------------------

center
tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64)
--------------------------------------------------------------------------------

strength
tensor(6.0004, dtype=torch.float64)
--------------------------------------------------------------------------------

lambda_value
0.11
--------------------------------------------------------------------------------

default_settings
######################### DEFAULT SETTINGS#########################
--------------------------------------------------------------------------------

grammar
Harmonic Grammar with 10 fillers and 5 roles
--------------------------------------------------------------------------------

R
tensor([[ 0.9002, -0.0538,  0.3926,  0.1191, -0.1356],
        [ 0.3555,  0.5622, -0.4737, -0.3424,  0.4647],
        [-0.2267,  0.3059,  0.7724, -0.1377,  0.4893],
        [-0.0977,  0.7372,  0.0251,  0.5397, -0.3939],
        [ 0.0482, -0.2099, -0.1554,  0.7472,  0.6092]])
--------------------------------------------------------------------------------

F
tensor([[-7.0986e-02, -2.6429e-01,  4.6262e-01,  1.8267e-01, -2.7734e-02,
          2.3468e-01,  3.2670e-01,  4.3932e-01,  3.1227e-01, -4.7397e-01],
        [ 3.6338e-01,  3.6867e-01, -4.0908e-02,  6.7202e-02, -5.0889e-01,
          4.5241e-01,  1.7974e-01,  3.2570e-01, -1.0650e-01,  3.3538e-01],
        [ 7.5341e-02, -3.2721e-01, -2.5580e-02,  5.3630e-01, -1.6480e-01,
          2.1286e-02, -2.9072e-01, -1.6779e-01,  5.5755e-01,  3.8451e-01],
        [ 4.4390e-01, -2.3043e-01,  2.2972e-01,  1.2317e-01,  5.3283e-01,
          4.7173e-01,  2.1955e-02, -2.6956e-01, -3.0335e-01,  1.0151e-01],
        [-3.7975e-01,  3.1492e-01, -6.0176e-02,  6.8578e-01,  2.7398e-01,
         -5.3716e-03, -1.1602e-01,  2.8084e-01, -3.3859e-01,  2.5421e-02],
        [ 4.0148e-01,  2.0372e-01,  5.2408e-01,  1.6365e-01,  4.3967e-03,
         -6.6063e-01,  1.7713e-01, -4.3401e-04, -5.7710e-02,  1.5718e-01],
        [-2.8887e-01, -3.9345e-01, -2.8399e-02, -1.8428e-01,  1.8854e-01,
         -9.5572e-02,  4.1174e-01,  3.2241e-01, -8.2126e-02,  6.3410e-01],
        [-3.6404e-01,  4.8209e-01,  2.4070e-01, -3.2812e-02,  1.3351e-01,
          2.2174e-01,  3.7738e-01, -4.6734e-01,  3.4747e-01,  1.6584e-01],
        [-1.7443e-02,  2.4908e-01,  3.2161e-01, -3.5380e-01,  3.0546e-01,
          1.0286e-01, -5.8793e-01,  3.8814e-01,  2.6151e-01,  2.0114e-01],
        [ 3.7219e-01,  2.1011e-01, -5.3891e-01,  4.5242e-02,  4.5545e-01,
         -1.0921e-01,  2.7116e-01,  2.1959e-01,  4.1764e-01, -9.6586e-02]])
--------------------------------------------------------------------------------

nSym
50
--------------------------------------------------------------------------------

filler2index
{'bh': 0, 'b': 1, 'u': 2, 'd': 3, 'dh': 4, 'p': 5, '-': 6, 'c': 7, 'a': 8, '#': 9}
--------------------------------------------------------------------------------

index2filler
{0: 'bh', 1: 'b', 2: 'u', 3: 'd', 4: 'dh', 5: 'p', 6: '-', 7: 'c', 8: 'a', 9: '#'}
--------------------------------------------------------------------------------

role2index
{'s1': 0, 's2': 1, 's3': 2, 's4': 3, 's5': 4}
--------------------------------------------------------------------------------

index2role
{0: 's1', 1: 's2', 2: 's3', 3: 's4', 4: 's5'}
--------------------------------------------------------------------------------

bind2index
{'bh/s1': 0, 'b/s1': 1, 'u/s1': 2, 'd/s1': 3, 'dh/s1': 4, 'p/s1': 5, '-/s1': 6, 'c/s1': 7, 'a/s1': 8, '#/s1': 9, 'bh/s2': 10, 'b/s2': 11, 'u/s2': 12, 'd/s2': 13, 'dh/s2': 14, 'p/s2': 15, '-/s2': 16, 'c/s2': 17, 'a/s2': 18, '#/s2': 19, 'bh/s3': 20, 'b/s3': 21, 'u/s3': 22, 'd/s3': 23, 'dh/s3': 24, 'p/s3': 25, '-/s3': 26, 'c/s3': 27, 'a/s3': 28, '#/s3': 29, 'bh/s4': 30, 'b/s4': 31, 'u/s4': 32, 'd/s4': 33, 'dh/s4': 34, 'p/s4': 35, '-/s4': 36, 'c/s4': 37, 'a/s4': 38, '#/s4': 39, 'bh/s5': 40, 'b/s5': 41, 'u/s5': 42, 'd/s5': 43, 'dh/s5': 44, 'p/s5': 45, '-/s5': 46, 'c/s5': 47, 'a/s5': 48, '#/s5': 49}
--------------------------------------------------------------------------------

index2bind
{0: 'bh/s1', 1: 'b/s1', 2: 'u/s1', 3: 'd/s1', 4: 'dh/s1', 5: 'p/s1', 6: '-/s1', 7: 'c/s1', 8: 'a/s1', 9: '#/s1', 10: 'bh/s2', 11: 'b/s2', 12: 'u/s2', 13: 'd/s2', 14: 'dh/s2', 15: 'p/s2', 16: '-/s2', 17: 'c/s2', 18: 'a/s2', 19: '#/s2', 20: 'bh/s3', 21: 'b/s3', 22: 'u/s3', 23: 'd/s3', 24: 'dh/s3', 25: 'p/s3', 26: '-/s3', 27: 'c/s3', 28: 'a/s3', 29: '#/s3', 30: 'bh/s4', 31: 'b/s4', 32: 'u/s4', 33: 'd/s4', 34: 'dh/s4', 35: 'p/s4', 36: '-/s4', 37: 'c/s4', 38: 'a/s4', 39: '#/s4', 40: 'bh/s5', 41: 'b/s5', 42: 'u/s5', 43: 'd/s5', 44: 'dh/s5', 45: 'p/s5', 46: '-/s5', 47: 'c/s5', 48: 'a/s5', 49: '#/s5'}
--------------------------------------------------------------------------------

settings
{'maxInp': 1, 'epochs': 5, 'timeStep': 0.0001, 'tgtStd': 0.00125, 'TInit': -1, 'TMin': 0, 'TdecayRate': 0.05, 'lambdaInit': 0.11, 'lambdaMin': 0.01, 'lambdaDecayRate': 0.75, 'maxSteps': 60000, 'emaSpeedTol': 0.002, 'emaFactor': 0.05, 'diary': False, 'printInterval': 3000, 'saveFile': 'Simulations/grassman.txt', 'summary_file': 'data/summary.txt', 'initStateMean': tensor([[0.1000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.1000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.1000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.1000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]), 'initStateStdev': 0.025, 'clamped': False}
--------------------------------------------------------------------------------

vars
{'var_names': ['Activation', 'Harmony', 'H0', 'Q', 'q', 'Temp', 'time', 'ema_speed', 'speed'], 'T_init': -1, 'T_min': 0.0, 'T_decay_rate': 0.001, 'q_init': 2, 'q_max': 200.0, 'q_rate': 10.0, 'bowl_center': tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64), 'bowl_strength': tensor(6.1004, dtype=torch.float64), 'beta_min_offset': 0.1, 'max_dt': 0.01, 'min_dt': 0.0005, 'dt': 0.001, 's_trace': None, 'prev_s': None, 'Harmony_trace': None, 'speed_trace': None, 'ema_trace': None, 'lambda_trace': None, 'time_trace': None, 'TP_trace': None, 'TPnum_trace': None, 'TP_h_trace': None, 'TP_dist_trace': None, 'zeta_bowl': tensor([[0.6854],
        [0.8779],
        [0.3661],
        [0.6855],
        [0.4163],
        [0.5580],
        [0.2959],
        [0.6752],
        [0.5322],
        [0.7620],
        [0.3175],
        [0.4067],
        [0.1696],
        [0.3175],
        [0.1928],
        [0.2585],
        [0.1371],
        [0.3127],
        [0.2465],
        [0.3530],
        [0.6746],
        [0.8640],
        [0.3603],
        [0.6747],
        [0.4097],
        [0.5492],
        [0.2912],
        [0.6645],
        [0.5238],
        [0.7500],
        [0.4543],
        [0.5819],
        [0.2427],
        [0.4544],
        [0.2760],
        [0.3699],
        [0.1962],
        [0.4476],
        [0.3528],
        [0.5052],
        [0.5827],
        [0.7464],
        [0.3112],
        [0.5828],
        [0.3539],
        [0.4744],
        [0.2516],
        [0.5740],
        [0.4525],
        [0.6479]], dtype=torch.float64), 'lambda_rec': tensor(0.1111, dtype=torch.float64), 'lambdaInit': 0.11, 'T_rec': tensor(9.5315e-06, dtype=torch.float64), 'T': 0, 'lambda': 0}
--------------------------------------------------------------------------------

Hc
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0.],
        [0., 0., 2., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 2., 2.]])
--------------------------------------------------------------------------------

Hcc
tensor([[[[ 0.,  0.,  0.,  0.,  0.],
          [-5.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[-5.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        ...,


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]]])
--------------------------------------------------------------------------------

stimuli
tensor([[[0.7000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.8000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]])
--------------------------------------------------------------------------------

extData_path
data/inp_pandas.csv
--------------------------------------------------------------------------------

TP
tensor([[-0.0639, -0.2379,  0.4164,  ..., -0.0596, -0.0424,  0.0643],
        [ 0.3271,  0.3319, -0.0368,  ..., -0.0442,  0.0144, -0.0455],
        [ 0.0678, -0.2946, -0.0230,  ...,  0.0228, -0.0756, -0.0522],
        ...,
        [-0.0175,  0.0232,  0.0116,  ..., -0.2847,  0.2117,  0.1010],
        [-0.0008,  0.0120,  0.0155,  ...,  0.2365,  0.1593,  0.1225],
        [ 0.0179,  0.0101, -0.0260,  ...,  0.1338,  0.2544, -0.0588]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

TPinv
tensor([[ -4.9161,   5.9537,   2.7182,  ...,   4.1568,  -2.7481,  -8.0070],
        [  5.9537,  -5.5542,  -3.1678,  ...,  -3.8015,   2.9782,   9.4465],
        [  2.7182,  -3.1678,  -1.2544,  ...,  -2.1345,   2.0297,   4.5770],
        ...,
        [  4.1568,  -3.8015,  -2.1345,  ...,  -3.4069,   2.4905,   5.9694],
        [ -2.7481,   2.9782,   2.0297,  ...,   2.4905,  -2.0253,  -4.4939],
        [ -8.0070,   9.4465,   4.5770,  ...,   5.9694,  -4.4939, -11.8265]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

Gc
tensor([[ 1.0000e+00,  2.7777e+00, -1.7945e-01,  ..., -3.2559e+00,
         -3.6448e+00,  4.6346e+00],
        [ 1.5616e-15, -2.3640e+00,  6.4414e-01,  ...,  4.0901e+00,
          5.4066e+00, -4.7127e+00],
        [ 2.9946e-16, -1.5359e+00,  1.1312e+00,  ...,  2.0328e+00,
          2.7978e+00, -2.6877e+00],
        ...,
        [ 8.9481e-16, -2.3487e+00,  4.6941e-01,  ...,  2.8196e+00,
          3.3972e+00, -3.5952e+00],
        [-9.8266e-16,  1.5527e+00, -1.9050e-01,  ..., -1.7570e+00,
         -2.2802e+00,  2.6979e+00],
        [-2.1649e-15,  4.5242e+00, -3.5683e-01,  ..., -4.8480e+00,
         -6.1388e+00,  7.0522e+00]], dtype=torch.float64)
--------------------------------------------------------------------------------

W
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4542,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6785],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4542,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6785,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

B
tensor([[ 10.7586],
        [ 20.5560],
        [ 11.3920],
        [  5.4800],
        [  0.6496],
        [ 14.6299],
        [ 14.0854],
        [ 14.5036],
        [-12.1793],
        [ -3.0769],
        [  3.2089],
        [ -4.3519],
        [  7.1898],
        [ -3.6864],
        [ -7.9911],
        [  3.8274],
        [  9.8354],
        [  3.6934],
        [  0.0433],
        [ -1.6509],
        [  4.8316],
        [  9.5520],
        [  6.1784],
        [  7.3607],
        [  9.9529],
        [  5.0425],
        [  6.3686],
        [  8.4693],
        [  1.3802],
        [  6.7504],
        [  4.2149],
        [ -5.9229],
        [  5.7597],
        [  0.9887],
        [ -3.8856],
        [  3.9671],
        [  5.9076],
        [  2.6049],
        [  6.2498],
        [ -0.3907],
        [ -0.2793],
        [ -2.4224],
        [  8.1874],
        [  2.9145],
        [  7.2522],
        [ -0.3549],
        [  9.3438],
        [  7.0723],
        [  9.2682],
        [  9.6348]], dtype=torch.float64)
--------------------------------------------------------------------------------

activationC
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

activationC_prev
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

activation
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

activation_prev
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInpC
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInpC_prev
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInp
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInp_prev
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

Wc
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4541,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6786],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4541,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6786,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bc
tensor([[3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [4.0502],
        [5.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [5.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [5.0502]], dtype=torch.float64)
--------------------------------------------------------------------------------

bowl
Bowl object with strength 6.00037441725961 and center tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_bC
tensor([[3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_bS
tensor([[ 10.6929],
        [ 20.9403],
        [ 11.3235],
        [  5.0165],
        [  0.1661],
        [ 14.5674],
        [ 14.0307],
        [ 14.4172],
        [-12.2736],
        [ -3.4555],
        [  3.3850],
        [ -4.8842],
        [  7.1936],
        [ -3.1480],
        [ -7.4129],
        [  3.8706],
        [  9.7716],
        [  3.7638],
        [  0.1159],
        [ -1.1744],
        [  5.0665],
        [ 10.0505],
        [  5.7484],
        [  6.3710],
        [  8.9821],
        [  4.7988],
        [  5.7739],
        [  8.1718],
        [  1.0402],
        [  6.0797],
        [  4.3499],
        [ -5.9968],
        [  5.6423],
        [  0.9293],
        [ -3.9240],
        [  3.9169],
        [  5.7179],
        [  2.5507],
        [  6.1847],
        [ -0.3865],
        [  1.0263],
        [ -3.4800],
        [  7.1764],
        [  2.8238],
        [  7.3749],
        [ -0.7545],
        [  7.6535],
        [  6.6588],
        [  8.7625],
        [ 10.0454]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_WC
tensor([[-6.1004, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [-0.0000, -6.1004, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [-0.0000, -0.0000, -6.1004,  ..., -0.0000, -0.0000, -0.0000],
        ...,
        [-0.0000, -0.0000, -0.0000,  ..., -6.1004, -0.0000, -0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -6.1004, -0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -6.1004]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_WS
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4541,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6785],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4541,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6785,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

state
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inp_s
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inp_c
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inputNames
['b-bh-u-dh-d', 'b-u-dh-d']
--------------------------------------------------------------------------------

nStimuli
2
--------------------------------------------------------------------------------

LV_inhM
tensor([[-0., -2., -2., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -0., -2., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -0., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -0., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -0., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -0., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -0., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -0., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -2., -0., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -2., -2., -0.]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

LV_c
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

LV_s
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

final_TPStates
{'b-bh-u-dh-d/0': 0, 'b-bh-u-dh-d/1': 0, 'b-bh-u-dh-d/2': 0, 'b-bh-u-dh-d/3': 0, 'b-bh-u-dh-d/4': 0, 'b-u-dh-d/0': 0, 'b-u-dh-d/1': 0, 'b-u-dh-d/2': 0, 'b-u-dh-d/3': 0, 'b-u-dh-d/4': 0}
--------------------------------------------------------------------------------

final_TPnum
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

reaction_times
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

divergence
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

bowl
######################### BOWL PARAMETER#########################
--------------------------------------------------------------------------------

Net
GSC Network
--------------------------------------------------------------------------------

center
tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64)
--------------------------------------------------------------------------------

strength
tensor(6.0004, dtype=torch.float64)
--------------------------------------------------------------------------------

lambda_value
0.11
--------------------------------------------------------------------------------

default_settings
######################### DEFAULT SETTINGS#########################
--------------------------------------------------------------------------------

grammar
Harmonic Grammar with 10 fillers and 5 roles
--------------------------------------------------------------------------------

R
tensor([[ 0.9002, -0.0538,  0.3926,  0.1191, -0.1356],
        [ 0.3555,  0.5622, -0.4737, -0.3424,  0.4647],
        [-0.2267,  0.3059,  0.7724, -0.1377,  0.4893],
        [-0.0977,  0.7372,  0.0251,  0.5397, -0.3939],
        [ 0.0482, -0.2099, -0.1554,  0.7472,  0.6092]])
--------------------------------------------------------------------------------

F
tensor([[-7.0986e-02, -2.6429e-01,  4.6262e-01,  1.8267e-01, -2.7734e-02,
          2.3468e-01,  3.2670e-01,  4.3932e-01,  3.1227e-01, -4.7397e-01],
        [ 3.6338e-01,  3.6867e-01, -4.0908e-02,  6.7202e-02, -5.0889e-01,
          4.5241e-01,  1.7974e-01,  3.2570e-01, -1.0650e-01,  3.3538e-01],
        [ 7.5341e-02, -3.2721e-01, -2.5580e-02,  5.3630e-01, -1.6480e-01,
          2.1286e-02, -2.9072e-01, -1.6779e-01,  5.5755e-01,  3.8451e-01],
        [ 4.4390e-01, -2.3043e-01,  2.2972e-01,  1.2317e-01,  5.3283e-01,
          4.7173e-01,  2.1955e-02, -2.6956e-01, -3.0335e-01,  1.0151e-01],
        [-3.7975e-01,  3.1492e-01, -6.0176e-02,  6.8578e-01,  2.7398e-01,
         -5.3716e-03, -1.1602e-01,  2.8084e-01, -3.3859e-01,  2.5421e-02],
        [ 4.0148e-01,  2.0372e-01,  5.2408e-01,  1.6365e-01,  4.3967e-03,
         -6.6063e-01,  1.7713e-01, -4.3401e-04, -5.7710e-02,  1.5718e-01],
        [-2.8887e-01, -3.9345e-01, -2.8399e-02, -1.8428e-01,  1.8854e-01,
         -9.5572e-02,  4.1174e-01,  3.2241e-01, -8.2126e-02,  6.3410e-01],
        [-3.6404e-01,  4.8209e-01,  2.4070e-01, -3.2812e-02,  1.3351e-01,
          2.2174e-01,  3.7738e-01, -4.6734e-01,  3.4747e-01,  1.6584e-01],
        [-1.7443e-02,  2.4908e-01,  3.2161e-01, -3.5380e-01,  3.0546e-01,
          1.0286e-01, -5.8793e-01,  3.8814e-01,  2.6151e-01,  2.0114e-01],
        [ 3.7219e-01,  2.1011e-01, -5.3891e-01,  4.5242e-02,  4.5545e-01,
         -1.0921e-01,  2.7116e-01,  2.1959e-01,  4.1764e-01, -9.6586e-02]])
--------------------------------------------------------------------------------

nSym
50
--------------------------------------------------------------------------------

filler2index
{'bh': 0, 'b': 1, 'u': 2, 'd': 3, 'dh': 4, 'p': 5, '-': 6, 'c': 7, 'a': 8, '#': 9}
--------------------------------------------------------------------------------

index2filler
{0: 'bh', 1: 'b', 2: 'u', 3: 'd', 4: 'dh', 5: 'p', 6: '-', 7: 'c', 8: 'a', 9: '#'}
--------------------------------------------------------------------------------

role2index
{'s1': 0, 's2': 1, 's3': 2, 's4': 3, 's5': 4}
--------------------------------------------------------------------------------

index2role
{0: 's1', 1: 's2', 2: 's3', 3: 's4', 4: 's5'}
--------------------------------------------------------------------------------

bind2index
{'bh/s1': 0, 'b/s1': 1, 'u/s1': 2, 'd/s1': 3, 'dh/s1': 4, 'p/s1': 5, '-/s1': 6, 'c/s1': 7, 'a/s1': 8, '#/s1': 9, 'bh/s2': 10, 'b/s2': 11, 'u/s2': 12, 'd/s2': 13, 'dh/s2': 14, 'p/s2': 15, '-/s2': 16, 'c/s2': 17, 'a/s2': 18, '#/s2': 19, 'bh/s3': 20, 'b/s3': 21, 'u/s3': 22, 'd/s3': 23, 'dh/s3': 24, 'p/s3': 25, '-/s3': 26, 'c/s3': 27, 'a/s3': 28, '#/s3': 29, 'bh/s4': 30, 'b/s4': 31, 'u/s4': 32, 'd/s4': 33, 'dh/s4': 34, 'p/s4': 35, '-/s4': 36, 'c/s4': 37, 'a/s4': 38, '#/s4': 39, 'bh/s5': 40, 'b/s5': 41, 'u/s5': 42, 'd/s5': 43, 'dh/s5': 44, 'p/s5': 45, '-/s5': 46, 'c/s5': 47, 'a/s5': 48, '#/s5': 49}
--------------------------------------------------------------------------------

index2bind
{0: 'bh/s1', 1: 'b/s1', 2: 'u/s1', 3: 'd/s1', 4: 'dh/s1', 5: 'p/s1', 6: '-/s1', 7: 'c/s1', 8: 'a/s1', 9: '#/s1', 10: 'bh/s2', 11: 'b/s2', 12: 'u/s2', 13: 'd/s2', 14: 'dh/s2', 15: 'p/s2', 16: '-/s2', 17: 'c/s2', 18: 'a/s2', 19: '#/s2', 20: 'bh/s3', 21: 'b/s3', 22: 'u/s3', 23: 'd/s3', 24: 'dh/s3', 25: 'p/s3', 26: '-/s3', 27: 'c/s3', 28: 'a/s3', 29: '#/s3', 30: 'bh/s4', 31: 'b/s4', 32: 'u/s4', 33: 'd/s4', 34: 'dh/s4', 35: 'p/s4', 36: '-/s4', 37: 'c/s4', 38: 'a/s4', 39: '#/s4', 40: 'bh/s5', 41: 'b/s5', 42: 'u/s5', 43: 'd/s5', 44: 'dh/s5', 45: 'p/s5', 46: '-/s5', 47: 'c/s5', 48: 'a/s5', 49: '#/s5'}
--------------------------------------------------------------------------------

settings
{'maxInp': 1, 'epochs': 5, 'timeStep': 0.0001, 'tgtStd': 0.00125, 'TInit': -1, 'TMin': 0, 'TdecayRate': 0.05, 'lambdaInit': 0.11, 'lambdaMin': 0.01, 'lambdaDecayRate': 0.75, 'maxSteps': 60000, 'emaSpeedTol': 0.002, 'emaFactor': 0.05, 'diary': False, 'printInterval': 3000, 'saveFile': 'Simulations/grassman.txt', 'summary_file': 'data/summary.txt', 'initStateMean': tensor([[0.1000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.1000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.1000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.1000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]), 'initStateStdev': 0.025, 'clamped': False}
--------------------------------------------------------------------------------

vars
{'var_names': ['Activation', 'Harmony', 'H0', 'Q', 'q', 'Temp', 'time', 'ema_speed', 'speed'], 'T_init': -1, 'T_min': 0.0, 'T_decay_rate': 0.001, 'q_init': 2, 'q_max': 200.0, 'q_rate': 10.0, 'bowl_center': tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64), 'bowl_strength': tensor(6.1004, dtype=torch.float64), 'beta_min_offset': 0.1, 'max_dt': 0.01, 'min_dt': 0.0005, 'dt': 0.001, 's_trace': None, 'prev_s': None, 'Harmony_trace': None, 'speed_trace': None, 'ema_trace': None, 'lambda_trace': None, 'time_trace': None, 'TP_trace': None, 'TPnum_trace': None, 'TP_h_trace': None, 'TP_dist_trace': None, 'zeta_bowl': tensor([[0.6854],
        [0.8779],
        [0.3661],
        [0.6855],
        [0.4163],
        [0.5580],
        [0.2959],
        [0.6752],
        [0.5322],
        [0.7620],
        [0.3175],
        [0.4067],
        [0.1696],
        [0.3175],
        [0.1928],
        [0.2585],
        [0.1371],
        [0.3127],
        [0.2465],
        [0.3530],
        [0.6746],
        [0.8640],
        [0.3603],
        [0.6747],
        [0.4097],
        [0.5492],
        [0.2912],
        [0.6645],
        [0.5238],
        [0.7500],
        [0.4543],
        [0.5819],
        [0.2427],
        [0.4544],
        [0.2760],
        [0.3699],
        [0.1962],
        [0.4476],
        [0.3528],
        [0.5052],
        [0.5827],
        [0.7464],
        [0.3112],
        [0.5828],
        [0.3539],
        [0.4744],
        [0.2516],
        [0.5740],
        [0.4525],
        [0.6479]], dtype=torch.float64), 'lambda_rec': tensor(0.1111, dtype=torch.float64), 'lambdaInit': 0.11, 'T_rec': tensor(9.5315e-06, dtype=torch.float64), 'T': 0, 'lambda': 0}
--------------------------------------------------------------------------------

Hc
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0.],
        [0., 0., 2., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 2., 2.]])
--------------------------------------------------------------------------------

Hcc
tensor([[[[ 0.,  0.,  0.,  0.,  0.],
          [-5.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[-5.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        ...,


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]]])
--------------------------------------------------------------------------------

stimuli
tensor([[[0.7000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.8000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]])
--------------------------------------------------------------------------------

extData_path
data/inp_pandas.csv
--------------------------------------------------------------------------------

TP
tensor([[-0.0639, -0.2379,  0.4164,  ..., -0.0596, -0.0424,  0.0643],
        [ 0.3271,  0.3319, -0.0368,  ..., -0.0442,  0.0144, -0.0455],
        [ 0.0678, -0.2946, -0.0230,  ...,  0.0228, -0.0756, -0.0522],
        ...,
        [-0.0175,  0.0232,  0.0116,  ..., -0.2847,  0.2117,  0.1010],
        [-0.0008,  0.0120,  0.0155,  ...,  0.2365,  0.1593,  0.1225],
        [ 0.0179,  0.0101, -0.0260,  ...,  0.1338,  0.2544, -0.0588]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

TPinv
tensor([[ -4.9161,   5.9537,   2.7182,  ...,   4.1568,  -2.7481,  -8.0070],
        [  5.9537,  -5.5542,  -3.1678,  ...,  -3.8015,   2.9782,   9.4465],
        [  2.7182,  -3.1678,  -1.2544,  ...,  -2.1345,   2.0297,   4.5770],
        ...,
        [  4.1568,  -3.8015,  -2.1345,  ...,  -3.4069,   2.4905,   5.9694],
        [ -2.7481,   2.9782,   2.0297,  ...,   2.4905,  -2.0253,  -4.4939],
        [ -8.0070,   9.4465,   4.5770,  ...,   5.9694,  -4.4939, -11.8265]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

Gc
tensor([[ 1.0000e+00,  2.7777e+00, -1.7945e-01,  ..., -3.2559e+00,
         -3.6448e+00,  4.6346e+00],
        [ 1.5616e-15, -2.3640e+00,  6.4414e-01,  ...,  4.0901e+00,
          5.4066e+00, -4.7127e+00],
        [ 2.9946e-16, -1.5359e+00,  1.1312e+00,  ...,  2.0328e+00,
          2.7978e+00, -2.6877e+00],
        ...,
        [ 8.9481e-16, -2.3487e+00,  4.6941e-01,  ...,  2.8196e+00,
          3.3972e+00, -3.5952e+00],
        [-9.8266e-16,  1.5527e+00, -1.9050e-01,  ..., -1.7570e+00,
         -2.2802e+00,  2.6979e+00],
        [-2.1649e-15,  4.5242e+00, -3.5683e-01,  ..., -4.8480e+00,
         -6.1388e+00,  7.0522e+00]], dtype=torch.float64)
--------------------------------------------------------------------------------

W
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4542,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6785],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4542,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6785,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

B
tensor([[ 10.7586],
        [ 20.5560],
        [ 11.3920],
        [  5.4800],
        [  0.6496],
        [ 14.6299],
        [ 14.0854],
        [ 14.5036],
        [-12.1793],
        [ -3.0769],
        [  3.2089],
        [ -4.3519],
        [  7.1898],
        [ -3.6864],
        [ -7.9911],
        [  3.8274],
        [  9.8354],
        [  3.6934],
        [  0.0433],
        [ -1.6509],
        [  4.8316],
        [  9.5520],
        [  6.1784],
        [  7.3607],
        [  9.9529],
        [  5.0425],
        [  6.3686],
        [  8.4693],
        [  1.3802],
        [  6.7504],
        [  4.2149],
        [ -5.9229],
        [  5.7597],
        [  0.9887],
        [ -3.8856],
        [  3.9671],
        [  5.9076],
        [  2.6049],
        [  6.2498],
        [ -0.3907],
        [ -0.2793],
        [ -2.4224],
        [  8.1874],
        [  2.9145],
        [  7.2522],
        [ -0.3549],
        [  9.3438],
        [  7.0723],
        [  9.2682],
        [  9.6348]], dtype=torch.float64)
--------------------------------------------------------------------------------

activationC
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

activationC_prev
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

activation
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

activation_prev
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInpC
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInpC_prev
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInp
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInp_prev
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

Wc
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4541,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6786],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4541,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6786,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bc
tensor([[3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [4.0502],
        [5.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [5.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [5.0502]], dtype=torch.float64)
--------------------------------------------------------------------------------

bowl
Bowl object with strength 6.00037441725961 and center tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_bC
tensor([[3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_bS
tensor([[ 10.6929],
        [ 20.9403],
        [ 11.3235],
        [  5.0165],
        [  0.1661],
        [ 14.5674],
        [ 14.0307],
        [ 14.4172],
        [-12.2736],
        [ -3.4555],
        [  3.3850],
        [ -4.8842],
        [  7.1936],
        [ -3.1480],
        [ -7.4129],
        [  3.8706],
        [  9.7716],
        [  3.7638],
        [  0.1159],
        [ -1.1744],
        [  5.0665],
        [ 10.0505],
        [  5.7484],
        [  6.3710],
        [  8.9821],
        [  4.7988],
        [  5.7739],
        [  8.1718],
        [  1.0402],
        [  6.0797],
        [  4.3499],
        [ -5.9968],
        [  5.6423],
        [  0.9293],
        [ -3.9240],
        [  3.9169],
        [  5.7179],
        [  2.5507],
        [  6.1847],
        [ -0.3865],
        [  1.0263],
        [ -3.4800],
        [  7.1764],
        [  2.8238],
        [  7.3749],
        [ -0.7545],
        [  7.6535],
        [  6.6588],
        [  8.7625],
        [ 10.0454]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_WC
tensor([[-6.1004, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [-0.0000, -6.1004, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [-0.0000, -0.0000, -6.1004,  ..., -0.0000, -0.0000, -0.0000],
        ...,
        [-0.0000, -0.0000, -0.0000,  ..., -6.1004, -0.0000, -0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -6.1004, -0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -6.1004]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_WS
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4541,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6785],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4541,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6785,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

state
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inp_s
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inp_c
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inputNames
['b-bh-u-dh-d', 'b-u-dh-d']
--------------------------------------------------------------------------------

nStimuli
2
--------------------------------------------------------------------------------

LV_inhM
tensor([[-0., -2., -2., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -0., -2., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -0., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -0., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -0., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -0., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -0., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -0., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -2., -0., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -2., -2., -0.]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

LV_c
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

LV_s
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

final_TPStates
{'b-bh-u-dh-d/0': 0, 'b-bh-u-dh-d/1': 0, 'b-bh-u-dh-d/2': 0, 'b-bh-u-dh-d/3': 0, 'b-bh-u-dh-d/4': 0, 'b-u-dh-d/0': 0, 'b-u-dh-d/1': 0, 'b-u-dh-d/2': 0, 'b-u-dh-d/3': 0, 'b-u-dh-d/4': 0}
--------------------------------------------------------------------------------

final_TPnum
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

reaction_times
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

divergence
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

bowl
######################### BOWL PARAMETER#########################
--------------------------------------------------------------------------------

Net
GSC Network
--------------------------------------------------------------------------------

center
tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64)
--------------------------------------------------------------------------------

strength
tensor(6.0004, dtype=torch.float64)
--------------------------------------------------------------------------------

lambda_value
0.11
--------------------------------------------------------------------------------

default_settings
######################### DEFAULT SETTINGS#########################
--------------------------------------------------------------------------------

grammar
Harmonic Grammar with 10 fillers and 5 roles
--------------------------------------------------------------------------------

R
tensor([[-0.5890,  0.2473, -0.1203,  0.4568,  0.6073],
        [-0.0698,  0.7630,  0.5164,  0.1170, -0.3640],
        [-0.0555, -0.1344,  0.6715, -0.5100,  0.5176],
        [ 0.6622,  0.4969, -0.2904, -0.1118,  0.4666],
        [ 0.4545, -0.3028,  0.4285,  0.7106,  0.1145]])
--------------------------------------------------------------------------------

F
tensor([[-0.3558, -0.3700, -0.1763,  0.4666,  0.4455, -0.1862,  0.2454,  0.1359,
          0.4011,  0.1223],
        [ 0.3255,  0.4263, -0.2090, -0.1787,  0.0723, -0.5621, -0.0384,  0.4174,
          0.2557,  0.2727],
        [ 0.5451,  0.0949,  0.1624, -0.0059,  0.3404, -0.0406,  0.4423, -0.4643,
          0.2288, -0.2940],
        [ 0.1789,  0.0584, -0.3907, -0.0584,  0.1239,  0.5174,  0.5117,  0.2689,
         -0.2922,  0.3256],
        [ 0.3850, -0.1667,  0.2300,  0.1103,  0.5382,  0.2623, -0.5752,  0.1584,
         -0.0771,  0.1964],
        [-0.2269,  0.6537, -0.3103,  0.2223,  0.1748,  0.3623, -0.2480, -0.0774,
          0.2475, -0.2913],
        [ 0.3935, -0.0938,  0.0684,  0.5518, -0.4570,  0.1197,  0.0396,  0.4245,
          0.1430, -0.3192],
        [-0.1667,  0.0436,  0.5040, -0.3764, -0.0604,  0.3669,  0.1518,  0.2768,
          0.5705,  0.1056],
        [-0.2222,  0.4100,  0.5667,  0.2957,  0.2084, -0.1619,  0.2517,  0.2107,
         -0.4433, -0.0078],
        [ 0.0814,  0.1870,  0.1311,  0.3894, -0.2984,  0.0689, -0.0242, -0.4326,
          0.1625,  0.6940]])
--------------------------------------------------------------------------------

nSym
50
--------------------------------------------------------------------------------

filler2index
{'bh': 0, 'b': 1, 'u': 2, 'd': 3, 'dh': 4, 'p': 5, '-': 6, 'c': 7, 'a': 8, '#': 9}
--------------------------------------------------------------------------------

index2filler
{0: 'bh', 1: 'b', 2: 'u', 3: 'd', 4: 'dh', 5: 'p', 6: '-', 7: 'c', 8: 'a', 9: '#'}
--------------------------------------------------------------------------------

role2index
{'s1': 0, 's2': 1, 's3': 2, 's4': 3, 's5': 4}
--------------------------------------------------------------------------------

index2role
{0: 's1', 1: 's2', 2: 's3', 3: 's4', 4: 's5'}
--------------------------------------------------------------------------------

bind2index
{'bh/s1': 0, 'b/s1': 1, 'u/s1': 2, 'd/s1': 3, 'dh/s1': 4, 'p/s1': 5, '-/s1': 6, 'c/s1': 7, 'a/s1': 8, '#/s1': 9, 'bh/s2': 10, 'b/s2': 11, 'u/s2': 12, 'd/s2': 13, 'dh/s2': 14, 'p/s2': 15, '-/s2': 16, 'c/s2': 17, 'a/s2': 18, '#/s2': 19, 'bh/s3': 20, 'b/s3': 21, 'u/s3': 22, 'd/s3': 23, 'dh/s3': 24, 'p/s3': 25, '-/s3': 26, 'c/s3': 27, 'a/s3': 28, '#/s3': 29, 'bh/s4': 30, 'b/s4': 31, 'u/s4': 32, 'd/s4': 33, 'dh/s4': 34, 'p/s4': 35, '-/s4': 36, 'c/s4': 37, 'a/s4': 38, '#/s4': 39, 'bh/s5': 40, 'b/s5': 41, 'u/s5': 42, 'd/s5': 43, 'dh/s5': 44, 'p/s5': 45, '-/s5': 46, 'c/s5': 47, 'a/s5': 48, '#/s5': 49}
--------------------------------------------------------------------------------

index2bind
{0: 'bh/s1', 1: 'b/s1', 2: 'u/s1', 3: 'd/s1', 4: 'dh/s1', 5: 'p/s1', 6: '-/s1', 7: 'c/s1', 8: 'a/s1', 9: '#/s1', 10: 'bh/s2', 11: 'b/s2', 12: 'u/s2', 13: 'd/s2', 14: 'dh/s2', 15: 'p/s2', 16: '-/s2', 17: 'c/s2', 18: 'a/s2', 19: '#/s2', 20: 'bh/s3', 21: 'b/s3', 22: 'u/s3', 23: 'd/s3', 24: 'dh/s3', 25: 'p/s3', 26: '-/s3', 27: 'c/s3', 28: 'a/s3', 29: '#/s3', 30: 'bh/s4', 31: 'b/s4', 32: 'u/s4', 33: 'd/s4', 34: 'dh/s4', 35: 'p/s4', 36: '-/s4', 37: 'c/s4', 38: 'a/s4', 39: '#/s4', 40: 'bh/s5', 41: 'b/s5', 42: 'u/s5', 43: 'd/s5', 44: 'dh/s5', 45: 'p/s5', 46: '-/s5', 47: 'c/s5', 48: 'a/s5', 49: '#/s5'}
--------------------------------------------------------------------------------

settings
{'maxInp': 1, 'epochs': 5, 'timeStep': 0.0001, 'tgtStd': 0.00125, 'TInit': -1, 'TMin': 0, 'TdecayRate': 0.05, 'lambdaInit': 0.11, 'lambdaMin': 0.01, 'lambdaDecayRate': 0.75, 'maxSteps': 60000, 'emaSpeedTol': 0.002, 'emaFactor': 0.05, 'diary': False, 'printInterval': 3000, 'saveFile': 'Simulations/grassman.txt', 'summary_file': 'data/summary.txt', 'initStateMean': tensor([[0.1000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.1000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.1000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.1000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]), 'initStateStdev': 0.025, 'clamped': False}
--------------------------------------------------------------------------------

vars
{'var_names': ['Activation', 'Harmony', 'H0', 'Q', 'q', 'Temp', 'time', 'ema_speed', 'speed'], 'T_init': -1, 'T_min': 0.0, 'T_decay_rate': 0.001, 'q_init': 2, 'q_max': 200.0, 'q_rate': 10.0, 'bowl_center': tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64), 'bowl_strength': tensor(6.1000, dtype=torch.float64), 'beta_min_offset': 0.1, 'max_dt': 0.01, 'min_dt': 0.0005, 'dt': 0.001, 's_trace': None, 'prev_s': None, 'Harmony_trace': None, 'speed_trace': None, 'ema_trace': None, 'lambda_trace': None, 'time_trace': None, 'TP_trace': None, 'TPnum_trace': None, 'TP_h_trace': None, 'TP_dist_trace': None, 'zeta_bowl': tensor([[0.2192],
        [0.2352],
        [0.3037],
        [0.3743],
        [0.3196],
        [0.1525],
        [0.2620],
        [0.4261],
        [0.3335],
        [0.2886],
        [0.3506],
        [0.3762],
        [0.4857],
        [0.5986],
        [0.5111],
        [0.2439],
        [0.4190],
        [0.6815],
        [0.5333],
        [0.4616],
        [0.1781],
        [0.1911],
        [0.2468],
        [0.3041],
        [0.2597],
        [0.1239],
        [0.2129],
        [0.3462],
        [0.2709],
        [0.2345],
        [0.4456],
        [0.4781],
        [0.6173],
        [0.7607],
        [0.6495],
        [0.3100],
        [0.5325],
        [0.8661],
        [0.6778],
        [0.5867],
        [0.5118],
        [0.5492],
        [0.7090],
        [0.8737],
        [0.7460],
        [0.3561],
        [0.6117],
        [0.9948],
        [0.7785],
        [0.6738]], dtype=torch.float64), 'lambda_rec': tensor(0.1111, dtype=torch.float64), 'lambdaInit': 0.11, 'T_rec': tensor(9.5313e-06, dtype=torch.float64), 'T': 0, 'lambda': 0}
--------------------------------------------------------------------------------

Hc
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0.],
        [0., 0., 2., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 2., 2.]])
--------------------------------------------------------------------------------

Hcc
tensor([[[[ 0.,  0.,  0.,  0.,  0.],
          [-5.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[-5.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        ...,


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]]])
--------------------------------------------------------------------------------

stimuli
tensor([[[0.7000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.8000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]])
--------------------------------------------------------------------------------

extData_path
data/inp_pandas.csv
--------------------------------------------------------------------------------

TP
tensor([[ 0.2096,  0.2179,  0.1039,  ...,  0.0825,  0.2436,  0.0743],
        [-0.1918, -0.2511,  0.1231,  ...,  0.2535,  0.1553,  0.1656],
        [-0.3211, -0.0559, -0.0957,  ..., -0.2820,  0.1389, -0.1785],
        ...,
        [-0.0757,  0.0198,  0.2291,  ...,  0.0317,  0.0653,  0.0121],
        [-0.1010,  0.1863,  0.2575,  ...,  0.0241, -0.0507, -0.0009],
        [ 0.0370,  0.0850,  0.0596,  ..., -0.0495,  0.0186,  0.0795]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

TPinv
tensor([[ 0.9087,  0.8030, -0.2035,  ..., -0.3094, -0.3391, -0.0283],
        [ 0.8030,  0.1174,  0.0721,  ..., -0.4936,  0.1188, -0.0416],
        [-0.2035,  0.0721, -0.2755,  ...,  0.7203,  0.4167,  0.0961],
        ...,
        [-0.3094, -0.4936,  0.7203,  ...,  0.0367, -0.0239,  0.0997],
        [-0.3391,  0.1188,  0.4167,  ..., -0.0239,  0.0531, -0.0053],
        [-0.0283, -0.0416,  0.0961,  ...,  0.0997, -0.0053, -0.0199]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

Gc
tensor([[ 1.0000e+00,  3.7228e-01,  5.2989e-01,  ...,  1.2330e-01,
          1.8555e-01, -5.7091e-02],
        [-7.9536e-16,  1.3290e+00,  3.6224e-01,  ...,  1.0296e-01,
          4.9905e-03, -1.5483e-01],
        [ 2.3559e-16, -8.3386e-02,  9.2643e-01,  ...,  7.9285e-02,
          1.2524e-02,  1.1815e-01],
        ...,
        [-8.7667e-17, -1.2677e-01, -2.1985e-01,  ..., -5.5250e-01,
          2.5007e-01, -4.7881e-01],
        [ 3.2119e-16, -1.3893e-01, -1.2283e-01,  ...,  4.0493e-02,
          1.9834e-01,  1.7866e-02],
        [ 0.0000e+00, -1.1589e-02, -1.9466e-02,  ..., -3.3879e-01,
         -2.1572e-01,  4.1895e-01]], dtype=torch.float64)
--------------------------------------------------------------------------------

W
tensor([[ -95.9880,  -70.1613,    7.5115,  ...,   20.4892,   11.5654,
            9.4436],
        [ -70.1613, -115.4994,   20.9946,  ...,   25.1413,    9.2323,
            9.7327],
        [   7.5115,   20.9946,  -22.0923,  ...,    3.1527,   -0.3555,
           -2.4449],
        ...,
        [  20.4892,   25.1413,    3.1527,  ...,  -27.1620,   -3.2122,
           -3.8107],
        [  11.5654,    9.2323,   -0.3555,  ...,   -3.2122,   -9.2270,
           -1.6891],
        [   9.4436,    9.7327,   -2.4449,  ...,   -3.8107,   -1.6891,
           -8.5490]], dtype=torch.float64)
--------------------------------------------------------------------------------

B
tensor([[ 10.6835],
        [  9.9759],
        [ -2.9356],
        [ -2.0045],
        [ -2.4281],
        [ -3.3321],
        [ -0.1313],
        [ -4.3986],
        [ -7.7223],
        [ -2.9039],
        [-18.2564],
        [-13.0485],
        [  6.2701],
        [ 12.6914],
        [ 11.7847],
        [  8.5989],
        [  2.7179],
        [ 12.0732],
        [ 21.7877],
        [ 10.5063],
        [-14.7528],
        [ -7.2695],
        [  3.6267],
        [ 13.7487],
        [ 12.5871],
        [  6.1873],
        [  3.3738],
        [  9.4331],
        [ 20.3559],
        [  7.5730],
        [ -1.9345],
        [ -2.7075],
        [  3.6940],
        [  3.9512],
        [  2.8961],
        [  4.5898],
        [  1.1135],
        [  6.0867],
        [  6.3015],
        [  6.7150],
        [  2.3494],
        [  4.7243],
        [  3.9207],
        [  6.2801],
        [  5.5360],
        [  0.9543],
        [  3.3798],
        [  4.5721],
        [  3.4911],
        [  3.8601]], dtype=torch.float64)
--------------------------------------------------------------------------------

activationC
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

activationC_prev
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

activation
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

activation_prev
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInpC
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInpC_prev
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInp
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInp_prev
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

Wc
tensor([[ -95.9880,  -70.1613,    7.5115,  ...,   20.4892,   11.5654,
            9.4436],
        [ -70.1613, -115.4994,   20.9946,  ...,   25.1413,    9.2323,
            9.7327],
        [   7.5115,   20.9946,  -22.0923,  ...,    3.1527,   -0.3555,
           -2.4449],
        ...,
        [  20.4892,   25.1413,    3.1527,  ...,  -27.1620,   -3.2122,
           -3.8107],
        [  11.5654,    9.2323,   -0.3555,  ...,   -3.2122,   -9.2270,
           -1.6891],
        [   9.4436,    9.7327,   -2.4449,  ...,   -3.8107,   -1.6891,
           -8.5490]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bc
tensor([[3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [4.0500],
        [5.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [5.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [5.0500]], dtype=torch.float64)
--------------------------------------------------------------------------------

bowl
Bowl object with strength 6.00000100507261 and center tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_bC
tensor([[3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500],
        [3.0500]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_bS
tensor([[ 10.5865],
        [  9.3916],
        [ -2.2287],
        [ -2.6747],
        [ -2.7034],
        [ -2.6432],
        [  0.5043],
        [ -4.6832],
        [ -7.6199],
        [ -4.4058],
        [-18.8970],
        [-12.8962],
        [  5.7762],
        [ 12.7544],
        [ 11.2689],
        [  8.1596],
        [  2.7472],
        [ 12.3822],
        [ 21.4159],
        [ 10.9563],
        [-15.6662],
        [ -7.2507],
        [  3.1779],
        [ 13.6166],
        [ 11.7873],
        [  5.8076],
        [  3.6217],
        [  9.7655],
        [ 19.8776],
        [  7.7017],
        [ -1.6271],
        [ -2.9109],
        [  4.0986],
        [  3.7751],
        [  3.1013],
        [  4.9626],
        [  1.2348],
        [  5.8673],
        [  6.5140],
        [  6.1623],
        [  1.5658],
        [  4.2889],
        [  4.1167],
        [  5.6616],
        [  4.7033],
        [  1.1900],
        [  4.0617],
        [  4.6109],
        [  3.1988],
        [  2.8037]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_WC
tensor([[-6.1000, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [-0.0000, -6.1000, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [-0.0000, -0.0000, -6.1000,  ..., -0.0000, -0.0000, -0.0000],
        ...,
        [-0.0000, -0.0000, -0.0000,  ..., -6.1000, -0.0000, -0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -6.1000, -0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -6.1000]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_WS
tensor([[ -95.9880,  -70.1613,    7.5115,  ...,   20.4892,   11.5654,
            9.4436],
        [ -70.1613, -115.4994,   20.9946,  ...,   25.1413,    9.2323,
            9.7327],
        [   7.5115,   20.9946,  -22.0923,  ...,    3.1527,   -0.3555,
           -2.4449],
        ...,
        [  20.4892,   25.1413,    3.1527,  ...,  -27.1620,   -3.2122,
           -3.8107],
        [  11.5654,    9.2323,   -0.3555,  ...,   -3.2122,   -9.2270,
           -1.6891],
        [   9.4436,    9.7327,   -2.4449,  ...,   -3.8107,   -1.6891,
           -8.5490]], dtype=torch.float64)
--------------------------------------------------------------------------------

state
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inp_s
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inp_c
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inputNames
['b-bh-u-dh-d', 'b-u-dh-d']
--------------------------------------------------------------------------------

nStimuli
2
--------------------------------------------------------------------------------

LV_inhM
tensor([[-0., -2., -2., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -0., -2., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -0., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -0., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -0., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -0., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -0., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -0., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -2., -0., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -2., -2., -0.]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

LV_c
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

LV_s
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

final_TPStates
{'b-bh-u-dh-d/0': 0, 'b-bh-u-dh-d/1': 0, 'b-bh-u-dh-d/2': 0, 'b-bh-u-dh-d/3': 0, 'b-bh-u-dh-d/4': 0, 'b-u-dh-d/0': 0, 'b-u-dh-d/1': 0, 'b-u-dh-d/2': 0, 'b-u-dh-d/3': 0, 'b-u-dh-d/4': 0}
--------------------------------------------------------------------------------

final_TPnum
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

reaction_times
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

divergence
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

bowl
######################### BOWL PARAMETER#########################
--------------------------------------------------------------------------------

Net
GSC Network
--------------------------------------------------------------------------------

center
tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64)
--------------------------------------------------------------------------------

strength
tensor(6.0000, dtype=torch.float64)
--------------------------------------------------------------------------------

lambda_value
0.11
--------------------------------------------------------------------------------

default_settings
######################### DEFAULT SETTINGS#########################
--------------------------------------------------------------------------------

grammar
Harmonic Grammar with 10 fillers and 5 roles
--------------------------------------------------------------------------------

R
tensor([[ 0.9002, -0.0538,  0.3926,  0.1191, -0.1356],
        [ 0.3555,  0.5622, -0.4737, -0.3424,  0.4647],
        [-0.2267,  0.3059,  0.7724, -0.1377,  0.4893],
        [-0.0977,  0.7372,  0.0251,  0.5397, -0.3939],
        [ 0.0482, -0.2099, -0.1554,  0.7472,  0.6092]])
--------------------------------------------------------------------------------

F
tensor([[-7.0986e-02, -2.6429e-01,  4.6262e-01,  1.8267e-01, -2.7734e-02,
          2.3468e-01,  3.2670e-01,  4.3932e-01,  3.1227e-01, -4.7397e-01],
        [ 3.6338e-01,  3.6867e-01, -4.0908e-02,  6.7202e-02, -5.0889e-01,
          4.5241e-01,  1.7974e-01,  3.2570e-01, -1.0650e-01,  3.3538e-01],
        [ 7.5341e-02, -3.2721e-01, -2.5580e-02,  5.3630e-01, -1.6480e-01,
          2.1286e-02, -2.9072e-01, -1.6779e-01,  5.5755e-01,  3.8451e-01],
        [ 4.4390e-01, -2.3043e-01,  2.2972e-01,  1.2317e-01,  5.3283e-01,
          4.7173e-01,  2.1955e-02, -2.6956e-01, -3.0335e-01,  1.0151e-01],
        [-3.7975e-01,  3.1492e-01, -6.0176e-02,  6.8578e-01,  2.7398e-01,
         -5.3716e-03, -1.1602e-01,  2.8084e-01, -3.3859e-01,  2.5421e-02],
        [ 4.0148e-01,  2.0372e-01,  5.2408e-01,  1.6365e-01,  4.3967e-03,
         -6.6063e-01,  1.7713e-01, -4.3401e-04, -5.7710e-02,  1.5718e-01],
        [-2.8887e-01, -3.9345e-01, -2.8399e-02, -1.8428e-01,  1.8854e-01,
         -9.5572e-02,  4.1174e-01,  3.2241e-01, -8.2126e-02,  6.3410e-01],
        [-3.6404e-01,  4.8209e-01,  2.4070e-01, -3.2812e-02,  1.3351e-01,
          2.2174e-01,  3.7738e-01, -4.6734e-01,  3.4747e-01,  1.6584e-01],
        [-1.7443e-02,  2.4908e-01,  3.2161e-01, -3.5380e-01,  3.0546e-01,
          1.0286e-01, -5.8793e-01,  3.8814e-01,  2.6151e-01,  2.0114e-01],
        [ 3.7219e-01,  2.1011e-01, -5.3891e-01,  4.5242e-02,  4.5545e-01,
         -1.0921e-01,  2.7116e-01,  2.1959e-01,  4.1764e-01, -9.6586e-02]])
--------------------------------------------------------------------------------

nSym
50
--------------------------------------------------------------------------------

filler2index
{'bh': 0, 'b': 1, 'u': 2, 'd': 3, 'dh': 4, 'p': 5, '-': 6, 'c': 7, 'a': 8, '#': 9}
--------------------------------------------------------------------------------

index2filler
{0: 'bh', 1: 'b', 2: 'u', 3: 'd', 4: 'dh', 5: 'p', 6: '-', 7: 'c', 8: 'a', 9: '#'}
--------------------------------------------------------------------------------

role2index
{'s1': 0, 's2': 1, 's3': 2, 's4': 3, 's5': 4}
--------------------------------------------------------------------------------

index2role
{0: 's1', 1: 's2', 2: 's3', 3: 's4', 4: 's5'}
--------------------------------------------------------------------------------

bind2index
{'bh/s1': 0, 'b/s1': 1, 'u/s1': 2, 'd/s1': 3, 'dh/s1': 4, 'p/s1': 5, '-/s1': 6, 'c/s1': 7, 'a/s1': 8, '#/s1': 9, 'bh/s2': 10, 'b/s2': 11, 'u/s2': 12, 'd/s2': 13, 'dh/s2': 14, 'p/s2': 15, '-/s2': 16, 'c/s2': 17, 'a/s2': 18, '#/s2': 19, 'bh/s3': 20, 'b/s3': 21, 'u/s3': 22, 'd/s3': 23, 'dh/s3': 24, 'p/s3': 25, '-/s3': 26, 'c/s3': 27, 'a/s3': 28, '#/s3': 29, 'bh/s4': 30, 'b/s4': 31, 'u/s4': 32, 'd/s4': 33, 'dh/s4': 34, 'p/s4': 35, '-/s4': 36, 'c/s4': 37, 'a/s4': 38, '#/s4': 39, 'bh/s5': 40, 'b/s5': 41, 'u/s5': 42, 'd/s5': 43, 'dh/s5': 44, 'p/s5': 45, '-/s5': 46, 'c/s5': 47, 'a/s5': 48, '#/s5': 49}
--------------------------------------------------------------------------------

index2bind
{0: 'bh/s1', 1: 'b/s1', 2: 'u/s1', 3: 'd/s1', 4: 'dh/s1', 5: 'p/s1', 6: '-/s1', 7: 'c/s1', 8: 'a/s1', 9: '#/s1', 10: 'bh/s2', 11: 'b/s2', 12: 'u/s2', 13: 'd/s2', 14: 'dh/s2', 15: 'p/s2', 16: '-/s2', 17: 'c/s2', 18: 'a/s2', 19: '#/s2', 20: 'bh/s3', 21: 'b/s3', 22: 'u/s3', 23: 'd/s3', 24: 'dh/s3', 25: 'p/s3', 26: '-/s3', 27: 'c/s3', 28: 'a/s3', 29: '#/s3', 30: 'bh/s4', 31: 'b/s4', 32: 'u/s4', 33: 'd/s4', 34: 'dh/s4', 35: 'p/s4', 36: '-/s4', 37: 'c/s4', 38: 'a/s4', 39: '#/s4', 40: 'bh/s5', 41: 'b/s5', 42: 'u/s5', 43: 'd/s5', 44: 'dh/s5', 45: 'p/s5', 46: '-/s5', 47: 'c/s5', 48: 'a/s5', 49: '#/s5'}
--------------------------------------------------------------------------------

settings
{'maxInp': 1, 'epochs': 5, 'timeStep': 0.0001, 'tgtStd': 0.00125, 'TInit': -1, 'TMin': 0, 'TdecayRate': 0.05, 'lambdaInit': 0.11, 'lambdaMin': 0.01, 'lambdaDecayRate': 0.75, 'maxSteps': 60000, 'emaSpeedTol': 0.002, 'emaFactor': 0.05, 'diary': False, 'printInterval': 3000, 'saveFile': 'Simulations/grassman.txt', 'summary_file': 'data/summary.txt', 'initStateMean': tensor([[0.1000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.1000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.1000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.1000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]), 'initStateStdev': 0.025, 'clamped': False}
--------------------------------------------------------------------------------

vars
{'var_names': ['Activation', 'Harmony', 'H0', 'Q', 'q', 'Temp', 'time', 'ema_speed', 'speed'], 'T_init': -1, 'T_min': 0.0, 'T_decay_rate': 0.001, 'q_init': 2, 'q_max': 200.0, 'q_rate': 10.0, 'bowl_center': tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64), 'bowl_strength': tensor(6.1004, dtype=torch.float64), 'beta_min_offset': 0.1, 'max_dt': 0.01, 'min_dt': 0.0005, 'dt': 0.001, 's_trace': None, 'prev_s': None, 'Harmony_trace': None, 'speed_trace': None, 'ema_trace': None, 'lambda_trace': None, 'time_trace': None, 'TP_trace': None, 'TPnum_trace': None, 'TP_h_trace': None, 'TP_dist_trace': None, 'zeta_bowl': tensor([[0.6854],
        [0.8779],
        [0.3661],
        [0.6855],
        [0.4163],
        [0.5580],
        [0.2959],
        [0.6752],
        [0.5322],
        [0.7620],
        [0.3175],
        [0.4067],
        [0.1696],
        [0.3175],
        [0.1928],
        [0.2585],
        [0.1371],
        [0.3127],
        [0.2465],
        [0.3530],
        [0.6746],
        [0.8640],
        [0.3603],
        [0.6747],
        [0.4097],
        [0.5492],
        [0.2912],
        [0.6645],
        [0.5238],
        [0.7500],
        [0.4543],
        [0.5819],
        [0.2427],
        [0.4544],
        [0.2760],
        [0.3699],
        [0.1962],
        [0.4476],
        [0.3528],
        [0.5052],
        [0.5827],
        [0.7464],
        [0.3112],
        [0.5828],
        [0.3539],
        [0.4744],
        [0.2516],
        [0.5740],
        [0.4525],
        [0.6479]], dtype=torch.float64), 'lambda_rec': tensor(0.1111, dtype=torch.float64), 'lambdaInit': 0.11, 'T_rec': tensor(9.5315e-06, dtype=torch.float64), 'T': 0, 'lambda': 0}
--------------------------------------------------------------------------------

Hc
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0.],
        [0., 0., 2., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 2., 2.]])
--------------------------------------------------------------------------------

Hcc
tensor([[[[ 0.,  0.,  0.,  0.,  0.],
          [-5.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[-5.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        ...,


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]]])
--------------------------------------------------------------------------------

stimuli
tensor([[[0.7000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.8000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]])
--------------------------------------------------------------------------------

extData_path
data/inp_pandas.csv
--------------------------------------------------------------------------------

TP
tensor([[-0.0639, -0.2379,  0.4164,  ..., -0.0596, -0.0424,  0.0643],
        [ 0.3271,  0.3319, -0.0368,  ..., -0.0442,  0.0144, -0.0455],
        [ 0.0678, -0.2946, -0.0230,  ...,  0.0228, -0.0756, -0.0522],
        ...,
        [-0.0175,  0.0232,  0.0116,  ..., -0.2847,  0.2117,  0.1010],
        [-0.0008,  0.0120,  0.0155,  ...,  0.2365,  0.1593,  0.1225],
        [ 0.0179,  0.0101, -0.0260,  ...,  0.1338,  0.2544, -0.0588]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

TPinv
tensor([[ -4.9161,   5.9537,   2.7182,  ...,   4.1568,  -2.7481,  -8.0070],
        [  5.9537,  -5.5542,  -3.1678,  ...,  -3.8015,   2.9782,   9.4465],
        [  2.7182,  -3.1678,  -1.2544,  ...,  -2.1345,   2.0297,   4.5770],
        ...,
        [  4.1568,  -3.8015,  -2.1345,  ...,  -3.4069,   2.4905,   5.9694],
        [ -2.7481,   2.9782,   2.0297,  ...,   2.4905,  -2.0253,  -4.4939],
        [ -8.0070,   9.4465,   4.5770,  ...,   5.9694,  -4.4939, -11.8265]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

Gc
tensor([[ 1.0000e+00,  2.7777e+00, -1.7945e-01,  ..., -3.2559e+00,
         -3.6448e+00,  4.6346e+00],
        [ 1.5616e-15, -2.3640e+00,  6.4414e-01,  ...,  4.0901e+00,
          5.4066e+00, -4.7127e+00],
        [ 2.9946e-16, -1.5359e+00,  1.1312e+00,  ...,  2.0328e+00,
          2.7978e+00, -2.6877e+00],
        ...,
        [ 8.9481e-16, -2.3487e+00,  4.6941e-01,  ...,  2.8196e+00,
          3.3972e+00, -3.5952e+00],
        [-9.8266e-16,  1.5527e+00, -1.9050e-01,  ..., -1.7570e+00,
         -2.2802e+00,  2.6979e+00],
        [-2.1649e-15,  4.5242e+00, -3.5683e-01,  ..., -4.8480e+00,
         -6.1388e+00,  7.0522e+00]], dtype=torch.float64)
--------------------------------------------------------------------------------

W
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4542,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6785],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4542,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6785,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

B
tensor([[ 10.7586],
        [ 20.5560],
        [ 11.3920],
        [  5.4800],
        [  0.6496],
        [ 14.6299],
        [ 14.0854],
        [ 14.5036],
        [-12.1793],
        [ -3.0769],
        [  3.2089],
        [ -4.3519],
        [  7.1898],
        [ -3.6864],
        [ -7.9911],
        [  3.8274],
        [  9.8354],
        [  3.6934],
        [  0.0433],
        [ -1.6509],
        [  4.8316],
        [  9.5520],
        [  6.1784],
        [  7.3607],
        [  9.9529],
        [  5.0425],
        [  6.3686],
        [  8.4693],
        [  1.3802],
        [  6.7504],
        [  4.2149],
        [ -5.9229],
        [  5.7597],
        [  0.9887],
        [ -3.8856],
        [  3.9671],
        [  5.9076],
        [  2.6049],
        [  6.2498],
        [ -0.3907],
        [ -0.2793],
        [ -2.4224],
        [  8.1874],
        [  2.9145],
        [  7.2522],
        [ -0.3549],
        [  9.3438],
        [  7.0723],
        [  9.2682],
        [  9.6348]], dtype=torch.float64)
--------------------------------------------------------------------------------

activationC
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

activationC_prev
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

activation
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

activation_prev
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInpC
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInpC_prev
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInp
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInp_prev
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

Wc
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4541,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6786],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4541,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6786,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bc
tensor([[3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [4.0502],
        [5.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [5.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [5.0502]], dtype=torch.float64)
--------------------------------------------------------------------------------

bowl
Bowl object with strength 6.00037441725961 and center tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_bC
tensor([[3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_bS
tensor([[ 10.6929],
        [ 20.9403],
        [ 11.3235],
        [  5.0165],
        [  0.1661],
        [ 14.5674],
        [ 14.0307],
        [ 14.4172],
        [-12.2736],
        [ -3.4555],
        [  3.3850],
        [ -4.8842],
        [  7.1936],
        [ -3.1480],
        [ -7.4129],
        [  3.8706],
        [  9.7716],
        [  3.7638],
        [  0.1159],
        [ -1.1744],
        [  5.0665],
        [ 10.0505],
        [  5.7484],
        [  6.3710],
        [  8.9821],
        [  4.7988],
        [  5.7739],
        [  8.1718],
        [  1.0402],
        [  6.0797],
        [  4.3499],
        [ -5.9968],
        [  5.6423],
        [  0.9293],
        [ -3.9240],
        [  3.9169],
        [  5.7179],
        [  2.5507],
        [  6.1847],
        [ -0.3865],
        [  1.0263],
        [ -3.4800],
        [  7.1764],
        [  2.8238],
        [  7.3749],
        [ -0.7545],
        [  7.6535],
        [  6.6588],
        [  8.7625],
        [ 10.0454]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_WC
tensor([[-6.1004, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [-0.0000, -6.1004, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [-0.0000, -0.0000, -6.1004,  ..., -0.0000, -0.0000, -0.0000],
        ...,
        [-0.0000, -0.0000, -0.0000,  ..., -6.1004, -0.0000, -0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -6.1004, -0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -6.1004]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_WS
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4541,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6785],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4541,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6785,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

state
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inp_s
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inp_c
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inputNames
['b-bh-u-dh-d', 'b-u-dh-d']
--------------------------------------------------------------------------------

nStimuli
2
--------------------------------------------------------------------------------

LV_inhM
tensor([[-0., -2., -2., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -0., -2., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -0., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -0., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -0., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -0., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -0., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -0., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -2., -0., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -2., -2., -0.]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

LV_c
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

LV_s
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

final_TPStates
{'b-bh-u-dh-d/0': 0, 'b-bh-u-dh-d/1': 0, 'b-bh-u-dh-d/2': 0, 'b-bh-u-dh-d/3': 0, 'b-bh-u-dh-d/4': 0, 'b-u-dh-d/0': 0, 'b-u-dh-d/1': 0, 'b-u-dh-d/2': 0, 'b-u-dh-d/3': 0, 'b-u-dh-d/4': 0}
--------------------------------------------------------------------------------

final_TPnum
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

reaction_times
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

divergence
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

bowl
######################### BOWL PARAMETER#########################
--------------------------------------------------------------------------------

Net
GSC Network
--------------------------------------------------------------------------------

center
tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64)
--------------------------------------------------------------------------------

strength
tensor(6.0004, dtype=torch.float64)
--------------------------------------------------------------------------------

lambda_value
0.11
--------------------------------------------------------------------------------

default_settings
######################### DEFAULT SETTINGS#########################
--------------------------------------------------------------------------------

grammar
Harmonic Grammar with 10 fillers and 5 roles
--------------------------------------------------------------------------------

R
tensor([[ 0.9002, -0.0538,  0.3926,  0.1191, -0.1356],
        [ 0.3555,  0.5622, -0.4737, -0.3424,  0.4647],
        [-0.2267,  0.3059,  0.7724, -0.1377,  0.4893],
        [-0.0977,  0.7372,  0.0251,  0.5397, -0.3939],
        [ 0.0482, -0.2099, -0.1554,  0.7472,  0.6092]])
--------------------------------------------------------------------------------

F
tensor([[-7.0986e-02, -2.6429e-01,  4.6262e-01,  1.8267e-01, -2.7734e-02,
          2.3468e-01,  3.2670e-01,  4.3932e-01,  3.1227e-01, -4.7397e-01],
        [ 3.6338e-01,  3.6867e-01, -4.0908e-02,  6.7202e-02, -5.0889e-01,
          4.5241e-01,  1.7974e-01,  3.2570e-01, -1.0650e-01,  3.3538e-01],
        [ 7.5341e-02, -3.2721e-01, -2.5580e-02,  5.3630e-01, -1.6480e-01,
          2.1286e-02, -2.9072e-01, -1.6779e-01,  5.5755e-01,  3.8451e-01],
        [ 4.4390e-01, -2.3043e-01,  2.2972e-01,  1.2317e-01,  5.3283e-01,
          4.7173e-01,  2.1955e-02, -2.6956e-01, -3.0335e-01,  1.0151e-01],
        [-3.7975e-01,  3.1492e-01, -6.0176e-02,  6.8578e-01,  2.7398e-01,
         -5.3716e-03, -1.1602e-01,  2.8084e-01, -3.3859e-01,  2.5421e-02],
        [ 4.0148e-01,  2.0372e-01,  5.2408e-01,  1.6365e-01,  4.3967e-03,
         -6.6063e-01,  1.7713e-01, -4.3401e-04, -5.7710e-02,  1.5718e-01],
        [-2.8887e-01, -3.9345e-01, -2.8399e-02, -1.8428e-01,  1.8854e-01,
         -9.5572e-02,  4.1174e-01,  3.2241e-01, -8.2126e-02,  6.3410e-01],
        [-3.6404e-01,  4.8209e-01,  2.4070e-01, -3.2812e-02,  1.3351e-01,
          2.2174e-01,  3.7738e-01, -4.6734e-01,  3.4747e-01,  1.6584e-01],
        [-1.7443e-02,  2.4908e-01,  3.2161e-01, -3.5380e-01,  3.0546e-01,
          1.0286e-01, -5.8793e-01,  3.8814e-01,  2.6151e-01,  2.0114e-01],
        [ 3.7219e-01,  2.1011e-01, -5.3891e-01,  4.5242e-02,  4.5545e-01,
         -1.0921e-01,  2.7116e-01,  2.1959e-01,  4.1764e-01, -9.6586e-02]])
--------------------------------------------------------------------------------

nSym
50
--------------------------------------------------------------------------------

filler2index
{'bh': 0, 'b': 1, 'u': 2, 'd': 3, 'dh': 4, 'p': 5, '-': 6, 'c': 7, 'a': 8, '#': 9}
--------------------------------------------------------------------------------

index2filler
{0: 'bh', 1: 'b', 2: 'u', 3: 'd', 4: 'dh', 5: 'p', 6: '-', 7: 'c', 8: 'a', 9: '#'}
--------------------------------------------------------------------------------

role2index
{'s1': 0, 's2': 1, 's3': 2, 's4': 3, 's5': 4}
--------------------------------------------------------------------------------

index2role
{0: 's1', 1: 's2', 2: 's3', 3: 's4', 4: 's5'}
--------------------------------------------------------------------------------

bind2index
{'bh/s1': 0, 'b/s1': 1, 'u/s1': 2, 'd/s1': 3, 'dh/s1': 4, 'p/s1': 5, '-/s1': 6, 'c/s1': 7, 'a/s1': 8, '#/s1': 9, 'bh/s2': 10, 'b/s2': 11, 'u/s2': 12, 'd/s2': 13, 'dh/s2': 14, 'p/s2': 15, '-/s2': 16, 'c/s2': 17, 'a/s2': 18, '#/s2': 19, 'bh/s3': 20, 'b/s3': 21, 'u/s3': 22, 'd/s3': 23, 'dh/s3': 24, 'p/s3': 25, '-/s3': 26, 'c/s3': 27, 'a/s3': 28, '#/s3': 29, 'bh/s4': 30, 'b/s4': 31, 'u/s4': 32, 'd/s4': 33, 'dh/s4': 34, 'p/s4': 35, '-/s4': 36, 'c/s4': 37, 'a/s4': 38, '#/s4': 39, 'bh/s5': 40, 'b/s5': 41, 'u/s5': 42, 'd/s5': 43, 'dh/s5': 44, 'p/s5': 45, '-/s5': 46, 'c/s5': 47, 'a/s5': 48, '#/s5': 49}
--------------------------------------------------------------------------------

index2bind
{0: 'bh/s1', 1: 'b/s1', 2: 'u/s1', 3: 'd/s1', 4: 'dh/s1', 5: 'p/s1', 6: '-/s1', 7: 'c/s1', 8: 'a/s1', 9: '#/s1', 10: 'bh/s2', 11: 'b/s2', 12: 'u/s2', 13: 'd/s2', 14: 'dh/s2', 15: 'p/s2', 16: '-/s2', 17: 'c/s2', 18: 'a/s2', 19: '#/s2', 20: 'bh/s3', 21: 'b/s3', 22: 'u/s3', 23: 'd/s3', 24: 'dh/s3', 25: 'p/s3', 26: '-/s3', 27: 'c/s3', 28: 'a/s3', 29: '#/s3', 30: 'bh/s4', 31: 'b/s4', 32: 'u/s4', 33: 'd/s4', 34: 'dh/s4', 35: 'p/s4', 36: '-/s4', 37: 'c/s4', 38: 'a/s4', 39: '#/s4', 40: 'bh/s5', 41: 'b/s5', 42: 'u/s5', 43: 'd/s5', 44: 'dh/s5', 45: 'p/s5', 46: '-/s5', 47: 'c/s5', 48: 'a/s5', 49: '#/s5'}
--------------------------------------------------------------------------------

settings
{'maxInp': 1, 'epochs': 5, 'timeStep': 0.0001, 'tgtStd': 0.00125, 'TInit': -1, 'TMin': 0, 'TdecayRate': 0.05, 'lambdaInit': 0.11, 'lambdaMin': 0.01, 'lambdaDecayRate': 0.75, 'maxSteps': 60000, 'emaSpeedTol': 0.002, 'emaFactor': 0.05, 'diary': False, 'printInterval': 3000, 'saveFile': 'Simulations/grassman.txt', 'summary_file': 'data/summary.txt', 'initStateMean': tensor([[0.1000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.1000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.1000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.1000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]), 'initStateStdev': 0.025, 'clamped': False}
--------------------------------------------------------------------------------

vars
{'var_names': ['Activation', 'Harmony', 'H0', 'Q', 'q', 'Temp', 'time', 'ema_speed', 'speed'], 'T_init': -1, 'T_min': 0.0, 'T_decay_rate': 0.001, 'q_init': 2, 'q_max': 200.0, 'q_rate': 10.0, 'bowl_center': tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64), 'bowl_strength': tensor(6.1004, dtype=torch.float64), 'beta_min_offset': 0.1, 'max_dt': 0.01, 'min_dt': 0.0005, 'dt': 0.001, 's_trace': None, 'prev_s': None, 'Harmony_trace': None, 'speed_trace': None, 'ema_trace': None, 'lambda_trace': None, 'time_trace': None, 'TP_trace': None, 'TPnum_trace': None, 'TP_h_trace': None, 'TP_dist_trace': None, 'zeta_bowl': tensor([[0.6854],
        [0.8779],
        [0.3661],
        [0.6855],
        [0.4163],
        [0.5580],
        [0.2959],
        [0.6752],
        [0.5322],
        [0.7620],
        [0.3175],
        [0.4067],
        [0.1696],
        [0.3175],
        [0.1928],
        [0.2585],
        [0.1371],
        [0.3127],
        [0.2465],
        [0.3530],
        [0.6746],
        [0.8640],
        [0.3603],
        [0.6747],
        [0.4097],
        [0.5492],
        [0.2912],
        [0.6645],
        [0.5238],
        [0.7500],
        [0.4543],
        [0.5819],
        [0.2427],
        [0.4544],
        [0.2760],
        [0.3699],
        [0.1962],
        [0.4476],
        [0.3528],
        [0.5052],
        [0.5827],
        [0.7464],
        [0.3112],
        [0.5828],
        [0.3539],
        [0.4744],
        [0.2516],
        [0.5740],
        [0.4525],
        [0.6479]], dtype=torch.float64), 'lambda_rec': tensor(0.1111, dtype=torch.float64), 'lambdaInit': 0.11, 'T_rec': tensor(9.5315e-06, dtype=torch.float64), 'T': 0, 'lambda': 0}
--------------------------------------------------------------------------------

Hc
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0.],
        [0., 0., 2., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 2., 2.]])
--------------------------------------------------------------------------------

Hcc
tensor([[[[ 0.,  0.,  0.,  0.,  0.],
          [-5.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[-5.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        ...,


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]],


        [[[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]],

         [[ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          ...,
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.],
          [ 0.,  0.,  0.,  0.,  0.]]]])
--------------------------------------------------------------------------------

stimuli
tensor([[[0.7000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.8000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]])
--------------------------------------------------------------------------------

extData_path
data/inp_pandas.csv
--------------------------------------------------------------------------------

TP
tensor([[-0.0639, -0.2379,  0.4164,  ..., -0.0596, -0.0424,  0.0643],
        [ 0.3271,  0.3319, -0.0368,  ..., -0.0442,  0.0144, -0.0455],
        [ 0.0678, -0.2946, -0.0230,  ...,  0.0228, -0.0756, -0.0522],
        ...,
        [-0.0175,  0.0232,  0.0116,  ..., -0.2847,  0.2117,  0.1010],
        [-0.0008,  0.0120,  0.0155,  ...,  0.2365,  0.1593,  0.1225],
        [ 0.0179,  0.0101, -0.0260,  ...,  0.1338,  0.2544, -0.0588]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

TPinv
tensor([[ -4.9161,   5.9537,   2.7182,  ...,   4.1568,  -2.7481,  -8.0070],
        [  5.9537,  -5.5542,  -3.1678,  ...,  -3.8015,   2.9782,   9.4465],
        [  2.7182,  -3.1678,  -1.2544,  ...,  -2.1345,   2.0297,   4.5770],
        ...,
        [  4.1568,  -3.8015,  -2.1345,  ...,  -3.4069,   2.4905,   5.9694],
        [ -2.7481,   2.9782,   2.0297,  ...,   2.4905,  -2.0253,  -4.4939],
        [ -8.0070,   9.4465,   4.5770,  ...,   5.9694,  -4.4939, -11.8265]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

Gc
tensor([[ 1.0000e+00,  2.7777e+00, -1.7945e-01,  ..., -3.2559e+00,
         -3.6448e+00,  4.6346e+00],
        [ 1.5616e-15, -2.3640e+00,  6.4414e-01,  ...,  4.0901e+00,
          5.4066e+00, -4.7127e+00],
        [ 2.9946e-16, -1.5359e+00,  1.1312e+00,  ...,  2.0328e+00,
          2.7978e+00, -2.6877e+00],
        ...,
        [ 8.9481e-16, -2.3487e+00,  4.6941e-01,  ...,  2.8196e+00,
          3.3972e+00, -3.5952e+00],
        [-9.8266e-16,  1.5527e+00, -1.9050e-01,  ..., -1.7570e+00,
         -2.2802e+00,  2.6979e+00],
        [-2.1649e-15,  4.5242e+00, -3.5683e-01,  ..., -4.8480e+00,
         -6.1388e+00,  7.0522e+00]], dtype=torch.float64)
--------------------------------------------------------------------------------

W
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4542,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6785],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4542,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6785,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

B
tensor([[ 10.7586],
        [ 20.5560],
        [ 11.3920],
        [  5.4800],
        [  0.6496],
        [ 14.6299],
        [ 14.0854],
        [ 14.5036],
        [-12.1793],
        [ -3.0769],
        [  3.2089],
        [ -4.3519],
        [  7.1898],
        [ -3.6864],
        [ -7.9911],
        [  3.8274],
        [  9.8354],
        [  3.6934],
        [  0.0433],
        [ -1.6509],
        [  4.8316],
        [  9.5520],
        [  6.1784],
        [  7.3607],
        [  9.9529],
        [  5.0425],
        [  6.3686],
        [  8.4693],
        [  1.3802],
        [  6.7504],
        [  4.2149],
        [ -5.9229],
        [  5.7597],
        [  0.9887],
        [ -3.8856],
        [  3.9671],
        [  5.9076],
        [  2.6049],
        [  6.2498],
        [ -0.3907],
        [ -0.2793],
        [ -2.4224],
        [  8.1874],
        [  2.9145],
        [  7.2522],
        [ -0.3549],
        [  9.3438],
        [  7.0723],
        [  9.2682],
        [  9.6348]], dtype=torch.float64)
--------------------------------------------------------------------------------

activationC
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

activationC_prev
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

activation
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

activation_prev
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInpC
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInpC_prev
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0.], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInp
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

externalInp_prev
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

Wc
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4541,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6786],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4541,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6786,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bc
tensor([[3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [4.0502],
        [5.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [5.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [5.0502]], dtype=torch.float64)
--------------------------------------------------------------------------------

bowl
Bowl object with strength 6.00037441725961 and center tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_bC
tensor([[3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502],
        [3.0502]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_bS
tensor([[ 10.6929],
        [ 20.9403],
        [ 11.3235],
        [  5.0165],
        [  0.1661],
        [ 14.5674],
        [ 14.0307],
        [ 14.4172],
        [-12.2736],
        [ -3.4555],
        [  3.3850],
        [ -4.8842],
        [  7.1936],
        [ -3.1480],
        [ -7.4129],
        [  3.8706],
        [  9.7716],
        [  3.7638],
        [  0.1159],
        [ -1.1744],
        [  5.0665],
        [ 10.0505],
        [  5.7484],
        [  6.3710],
        [  8.9821],
        [  4.7988],
        [  5.7739],
        [  8.1718],
        [  1.0402],
        [  6.0797],
        [  4.3499],
        [ -5.9968],
        [  5.6423],
        [  0.9293],
        [ -3.9240],
        [  3.9169],
        [  5.7179],
        [  2.5507],
        [  6.1847],
        [ -0.3865],
        [  1.0263],
        [ -3.4800],
        [  7.1764],
        [  2.8238],
        [  7.3749],
        [ -0.7545],
        [  7.6535],
        [  6.6588],
        [  8.7625],
        [ 10.0454]], dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_WC
tensor([[-6.1004, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [-0.0000, -6.1004, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [-0.0000, -0.0000, -6.1004,  ..., -0.0000, -0.0000, -0.0000],
        ...,
        [-0.0000, -0.0000, -0.0000,  ..., -6.1004, -0.0000, -0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -6.1004, -0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -6.1004]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

Bowl_WS
tensor([[-3344.3372,  3667.2256,  1913.8242,  ...,  2580.4878, -1965.7301,
         -5253.1993],
        [ 3667.2256, -4154.8789, -2147.6451,  ..., -2860.5558,  2141.4541,
          5793.7417],
        [ 1913.8242, -2147.6451, -1153.1258,  ..., -1508.5910,  1140.4222,
          3063.6785],
        ...,
        [ 2580.4878, -2860.5558, -1508.5910,  ..., -2046.9146,  1529.0247,
          4092.4487],
        [-1965.7301,  2141.4541,  1140.4222,  ...,  1529.0247, -1197.3263,
         -3121.1055],
        [-5253.1993,  5793.7417,  3063.6785,  ...,  4092.4487, -3121.1055,
         -8366.9133]], dtype=torch.float64)
--------------------------------------------------------------------------------

state
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inp_s
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inp_c
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

inputNames
['b-bh-u-dh-d', 'b-u-dh-d']
--------------------------------------------------------------------------------

nStimuli
2
--------------------------------------------------------------------------------

LV_inhM
tensor([[-0., -2., -2., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -0., -2., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -0., -2., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -0., -2., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -0., -2., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -0., -2., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -0., -2., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -0., -2., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -2., -0., -2.],
        [-2., -2., -2., -2., -2., -2., -2., -2., -2., -0.]],
       dtype=torch.float64)
--------------------------------------------------------------------------------

LV_c
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

LV_s
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], dtype=torch.float64)
--------------------------------------------------------------------------------

final_TPStates
{'b-bh-u-dh-d/0': 0, 'b-bh-u-dh-d/1': 0, 'b-bh-u-dh-d/2': 0, 'b-bh-u-dh-d/3': 0, 'b-bh-u-dh-d/4': 0, 'b-u-dh-d/0': 0, 'b-u-dh-d/1': 0, 'b-u-dh-d/2': 0, 'b-u-dh-d/3': 0, 'b-u-dh-d/4': 0}
--------------------------------------------------------------------------------

final_TPnum
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

reaction_times
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

divergence
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]])
--------------------------------------------------------------------------------

bowl
######################### BOWL PARAMETER#########################
--------------------------------------------------------------------------------

Net
GSC Network
--------------------------------------------------------------------------------

center
tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000], dtype=torch.float64)
--------------------------------------------------------------------------------

strength
tensor(6.0004, dtype=torch.float64)
--------------------------------------------------------------------------------

